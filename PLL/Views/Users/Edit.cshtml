@model DAL.Model.ART_M_USER_2

@{
    ViewBag.Title = "Edit user";
}

<h4>Edit user</h4>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("position_", new { @value = ViewBag.ObjPosition })
    <div class="form-horizontal">

        <hr />
        <div class="cls_show_error form-group">
            <div class="col-md-offset-2 col-md-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.USER_ID)

        <div class="form-group">
            <label class="control-label col-md-2">Username : </label>
            <div class="col-md-7">
                @Html.EditorFor(model => model.USERNAME, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.USERNAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Password<span style="color:red;">*</span>  : </label>
            <div class="col-md-7">
                @Html.EditorFor(model => model.PASSWORD, new { htmlAttributes = new { @class = "form-control  make-pass" } })
                @Html.ValidationMessageFor(model => model.PASSWORD, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Title  : </label>
            <div class="col-md-7">
                @Html.EditorFor(model => model.TITLE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TITLE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">First name<span style="color:red;">*</span>  : </label>
            <div class="col-md-7">
                @Html.EditorFor(model => model.FIRST_NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FIRST_NAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Last name<span style="color:red;">*</span>  : </label>
            <div class="col-md-7">
                @Html.EditorFor(model => model.LAST_NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LAST_NAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Email<span style="color:red;">*</span>  : </label>
            <div class="col-md-7">
                @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Position<span style="color:red;">*</span>  : </label>
            <div class="col-md-7">
                @{
                    using (var context = new DAL.ARTWORKEntities())
                    {
                        if (ViewBag.ObjPosition == "Admin")
                        {
                            @Html.DropDownListFor(model => model.POSITION_ID,
                                    new SelectList(ART_M_POSITION_SERVICE.GetAll(context),
                                    "ART_M_POSITION_ID", "ART_M_POSITION_NAME"),
                                    "Select...",
                                    new { @class = "form-control" })
                        }
                        else if (ViewBag.ObjPosition == "Vendor")
                        {
                            var listVendor = ART_M_POSITION_SERVICE.GetAll(context);
                            listVendor = (from u1 in listVendor
                                          where (u1.ART_M_POSITION_CODE == "VENDOR")
                                          select u1).ToList();
                            @Html.DropDownListFor(model => model.POSITION_ID,
                                        new SelectList(listVendor,
                                        "ART_M_POSITION_ID", "ART_M_POSITION_NAME"),
                                        new { @class = "form-control" })
                        }
                        else if (ViewBag.ObjPosition == "Customer")
                        {
                            var listCustomer = ART_M_POSITION_SERVICE.GetAll(context);
                            listCustomer = (from u1 in listCustomer
                                            where (u1.ART_M_POSITION_CODE == "CUSTOMER")
                                            select u1).ToList();
                            @Html.DropDownListFor(model => model.POSITION_ID,
                                        new SelectList(listCustomer,
                                        "ART_M_POSITION_ID", "ART_M_POSITION_NAME"),
                                        new { @class = "form-control" })
                        }
                        else if (ViewBag.ObjPosition == "Internal")
                        {
                            var listInternal = ART_M_POSITION_SERVICE.GetAll(context);
                            listInternal = (from u1 in listInternal
                                            where (u1.ART_M_POSITION_CODE != "CUSTOMER" && u1.ART_M_POSITION_CODE != "VENDOR")
                                            select u1).ToList();
                            @Html.DropDownListFor(model => model.POSITION_ID,
                                            new SelectList(listInternal,
                                            "ART_M_POSITION_ID", "ART_M_POSITION_NAME"),
                                            "Select...",
                                            new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(model => model.POSITION_ID,
                                            new SelectList(ART_M_POSITION_SERVICE.GetAll(context), "ART_M_POSITION_ID", "ART_M_POSITION_NAME"),
                                            "Select...",
                                            new { @class = "form-control" })
                        }
                    }
                }

                @Html.ValidationMessageFor(model => model.POSITION_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Is active : </label>
            <div class="col-md-7">
                @Html.HiddenFor(model => model.IS_ACTIVE, new { id = "IS_ACTIVE" })
                <label class="checkbox-inline"><input type="checkbox" id="myCheckBox" @(Model.IS_ACTIVE == "X" ? "checked='checked'" : "") /></label>
                @Html.ValidationMessageFor(model => model.IS_ACTIVE, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.IS_ACTIVE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IS_ACTIVE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IS_ACTIVE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CREATE_DATE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CREATE_DATE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CREATE_DATE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CREATE_BY, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CREATE_BY, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CREATE_BY, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UPDATE_DATE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UPDATE_DATE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UPDATE_DATE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UPDATE_BY, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UPDATE_BY, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UPDATE_BY, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary">Save</button> |
                @{
                    if (ViewBag.ObjPosition == "Customer")
                    {
                        @Html.ActionLink("Back to list", "Customer")
                    }
                    else if (ViewBag.ObjPosition == "Vendor")
                    {
                        @Html.ActionLink("Back to list", "Vendor")
                    }
                    else if (ViewBag.ObjPosition == "Internal")
                    {
                        @Html.ActionLink("Back to list", "Internal")
                    }
                    else if (ViewBag.ObjPosition == "Admin")
                    {
                        @Html.ActionLink("Back to list", "Index")
                    }
                }
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>

        $(".make-pass").attr("type", "password");

        $("#myCheckBox").click(function () {
            var isChecked = $(this).is(":checked");
            $("#IS_ACTIVE").val(isChecked ? "X" : "");
        });
    </script>
}
