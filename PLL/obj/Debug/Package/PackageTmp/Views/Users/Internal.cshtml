@model PLL.Controllers.UsersModel
@using DAL;
@using System.Collections.Generic;
@{
    ViewBag.Title = "Employee";
}
<h4>
    Employee
</h4>
<p>
    @*@{userId = ""}*@
    @*<input type="hidden" class="cls_user_id" value="@Model.ObjUser.USER_ID" />*@
    @Html.ActionLink("Create new", "Create", new { position_ = "Internal" }, new { @class = "btn btn-primary" })
    @*@Html.ActionLink("Customer", "../Customer/", null, new { @class = "btn btn-success" })
        @Html.ActionLink("Vendor", "../Vendor/", null, new { @class = "btn btn-success" })*@
</p>

<div>
    Show/Hide column :
    <a class="btn btn-warning toggle-vis" data-column="7">Role</a>
    <a class="btn btn-warning toggle-vis" data-column="8">Leader</a>
    <a class="btn btn-warning toggle-vis" data-column="9">Type of Product</a>
    <a class="btn btn-warning toggle-vis" data-column="10">Company</a>
</div>

<table class="table display" style="width:100%">
    <thead>
        <tr>
            <th style="width:30px;" class="cls_nowrap">
                No.
            </th>
            <th class="cls_nowrap">
                User name
            </th>
            <th class="cls_nowrap">
                Title
            </th>
            <th class="cls_nowrap">
                First name
            </th>
            <th class="cls_nowrap">
                Last name
            </th>
            <th class="cls_nowrap">
                Email
            </th>
            <th class="cls_nowrap">
                Position
            </th>
            <th class="cls_nowrap">
                Role
            </th>
            <th class="cls_nowrap">
                Leader
            </th>
            <th class="cls_nowrap">
                Type of product
            </th>
            <th class="cls_nowrap">
                Company
            </th>
            <th style="width:70px;" class="cls_nowrap">
                Is active
            </th>
            <th style="width:70px;" class="cls_nowrap">
                Action
            </th>
        </tr>
    </thead>
    <tbody>
        @*@{var allUser = @Model.ObjUserAll;}
            @foreach (var item in allUser)
            {
                <tr>
                    <td class="cls_nowrap">
                    </td>
                    <td class="cls_nowrap">
                        @Html.DisplayFor(modelItem => item.USERNAME)
                    </td>
                    <td class="cls_nowrap">
                        @Html.DisplayFor(modelItem => item.TITLE)
                    </td>
                    <td class="cls_nowrap">
                        @Html.DisplayFor(modelItem => item.FIRST_NAME)
                    </td>
                    <td class="cls_nowrap">
                        @Html.DisplayFor(modelItem => item.LAST_NAME)
                    </td>
                    <td class="cls_nowrap">
                        @Html.DisplayFor(modelItem => item.EMAIL)
                    </td>
                    <td class="cls_nowrap">
                        @Html.DisplayFor(modelItem => item.POSITION_DISPLAY_TXT)
                    </td>
                    <td class="cls_nowrap">
                        @Html.Raw(HttpUtility.HtmlDecode(item.ROLE_DISPLAY_TXT))
                    </td>
                    <td class="cls_nowrap">
                        @Html.Raw(HttpUtility.HtmlDecode(item.USER_LEADER_DISPLAY_TXT))
                    </td>
                    <td class="cls_nowrap">
                        @Html.Raw(HttpUtility.HtmlDecode(item.TYPE_OF_PRODUCT_DISPLAY_TXT))
                    </td>
                    <td class="cls_nowrap">
                        @Html.Raw(HttpUtility.HtmlDecode(item.COMPANY_DISPLAY_TXT))
                    </td>
                    <td class="cls_nowrap">
                        @Html.DisplayFor(modelItem => item.IS_ACTIVE)
                    </td>
                    <td class="cls_nowrap">
                        @Html.ActionLink("Role", "Index", "UsersRole", routeValues: new
                        {
                            userid = item.USER_ID,
                            position_ = "Internal"

                        },
                                  htmlAttributes: null) |
                        @Html.ActionLink("Edit", "Edit", new { id = item.USER_ID, position_ = "Internal" }) @*|
                        @Html.ActionLink("Delete", "Delete", new { id = item.USER_ID, position_ = "Internal" })

                    </td>
                </tr>
            }*@
    </tbody>
</table>

@section scripts
{
    <script>
        $(document).ready(function () {
            var table = $('.table').DataTable({
                serverSide: true,
                stateSave: true,
                "processing": true,
                "scrollX": true,
                "ordering": true,
                searchDelay: 2000,
                "columnDefs": [
                    { "searchable": false, "orderable": false, "targets": 0 },
                    //{ "searchable": false, "orderable": false, "targets": 7 },
                    //{ "searchable": false, "orderable": false, "targets": 8 },
                    //{ "searchable": false, "orderable": false, "targets": 9 },
                    //{ "searchable": false, "orderable": false, "targets": 10 },
                    { "searchable": false, "orderable": false, "targets": 12 },
                ],
                "order": [[1, 'asc']],
                ajax: function (data, callback, settings) {
                    $.ajax({
                        url: suburl + "/api/master/user?data.type2=Internal&data.current_user_id=" + UserID,
                        type: 'GET',
                        data: data,
                        success: function (res) {
                            dtSuccess(res, callback);
                        }
                    });
                },
                "columns": [
                    {
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "data": "USERNAME", "className": "cls_nowrap" },
                    { "data": "TITLE", "className": "cls_nowrap" },
                    { "data": "FIRST_NAME", "className": "cls_nowrap" },
                    { "data": "LAST_NAME", "className": "cls_nowrap" },
                    { "data": "EMAIL", "className": "cls_nowrap" },
                    { "data": "POSITION_DISPLAY_TXT", "className": "cls_nowrap" },
                    { "data": "ROLE_DISPLAY_TXT", "className": "cls_nowrap" },
                    { "data": "USER_LEADER_DISPLAY_TXT", "className": "cls_nowrap" },
                    { "data": "TYPE_OF_PRODUCT_DISPLAY_TXT", "className": "cls_nowrap" },
                    { "data": "COMPANY_DISPLAY_TXT", "className": "cls_nowrap" },
                    { "data": "IS_ACTIVE", "className": "cls_nowrap" },
                    {
                        render: function (data, type, row, meta) {
                            return '<span class="cls_nowrap"><a href="' + suburl + '/UsersRole?userid=' + row.USER_ID + '&position_=Internal">Role</a> | <a href="' + suburl + '/Users/Edit/' + row.USER_ID + '?position_=Internal">Edit</a></span>'
                        }
                    },
                ],
                "drawCallback": function (settings, json) {

                    //var column = table.column($(this).attr('data-column'));
                    //if (!column.visible()) {
                    //    column.visible(!column.visible());
                    //}
                }
            });

            $('a.toggle-vis').on('click', function (e) {

                e.preventDefault();

                // Get the column API object
                var column = table.column($(this).attr('data-column'));

                // Toggle the visibility
                column.visible(!column.visible());
            });

            //$('a.toggle-vis').click();
        });
    </script>
}