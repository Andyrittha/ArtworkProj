@*@model IEnumerable<DAL.XECM_M_CUSTOMER>*@

@{
    ViewBag.Title = "Customer master";
}

<h4>Customer master</h4>
<p>
    @Html.ActionLink("Create new", "Create", null, new { @class = "btn btn-primary" }) |
    @Html.ActionLink("Back", "../Users/")
</p>

<hr >

<div class="cls_customer_master">
    <div class="row">
        <div class="col-md-2 control-label">
            Customer Code :
        </div>
        <div class="col-md-3">
            <input type="text" class="form-control cls_customer_code" />
        </div>
        <div class="col-md-2 control-label">
            Customer Name :
        </div>
        <div class="col-md-3">
            <input type="text" class="form-control cls_customer_name" />
        </div>
    </div>

    <div class="row"> </div>

    <div class="row">
        <div class="col-md-5">
            <button type="button" class="cls_btn_search_cust btn btn-primary">Search</button>
            <button type="button" class="cls_btn_export_excel_cust btn btn-primary">All Export Excel</button>
        </div>
    </div>

    <hr>

    <div class="row"> </div>

    <table class="table display" style="width:100%">
        <thead>
            <tr>
                <th style="width:30px;" class="cls_nowrap">
                    No.
                </th>
                <th>
                    Customer code
                </th>
                <th>
                    Customer name
                </th>
                <th>
                    Is shade limit
                </th>
                <th style="width:70px;" class="cls_nowrap">
                    Is active
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.CREATE_DATE)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CREATE_BY)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UPDATE_DATE)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UPDATE_BY)
                    </th>*@
                <th style="width:50px;" class="cls_edit">Action</th>
            </tr>
        </thead>

        <tbody>
            @* commented by aof *@
            @*@foreach (var item in Model)
                {
                    <tr>
                        <td></td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CUSTOMER_CODE)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CUSTOMER_NAME)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IS_SHADE_LIMIT)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IS_ACTIVE)
                        </td>
                        <td>
                                @Html.DisplayFor(modelItem => item.CREATE_DATE)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CREATE_BY)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UPDATE_DATE)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UPDATE_BY)
                            </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.CUSTOMER_ID })
                            @Html.ActionLink("Details", "Details", new { id = item.CUSTOMER_ID })
                            @Html.ActionLink("Delete", "Delete", new { id = item.CUSTOMER_ID })
                        </td>
                    </tr>
                }*@
        </tbody>


    </table>

</div>

   



    @section scripts
{

        @* commented by aof *@
        @*<script>
                $(document).ready(function () {
                    var table = $('.table').DataTable({
                        stateSave: true,
                        "scrollX": true,
                        "columnDefs": [
                            { "searchable": false, "orderable": false, "targets": 0 },
                            { "searchable": false, "orderable": false, "targets": 5 },
                        ],
                        "order": [[1, 'asc']],
                    });

                    table.on('order.dt search.dt', function () {
                        table.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                            cell.innerHTML = i + 1;
                        });
                    }).draw();

                });
            </script>*@

        <script>

            $(document).ready(function () {

                //$('.table').DataTable({
                //    orderCellsTop: true,
                //    fixedHeader: true,
                //    lengthChange: false,
                //    scrollX: true,
                //    search: false,
                //});


                bind_table_customer();


                $(".cls_customer_master .cls_btn_search_cust").click(function (e) {
                    table_cust.ajax.reload();
                    e.preventDefault();
                });


            });

            var table_cust;
            function bind_table_customer() {
                // var table_cust = $('.table').DataTable()
          
                table_cust = $('.table').DataTable({
                    serverSide: true,
                    //stateSave: true,
                    "processing": true,
                    "scrollX": true,
                    "ordering": true,
                    //searchDelay: 2000,
                    "columnDefs": [
                        { "searchable": false, "orderable": false, "targets": 0 },
                        { "searchable": false, "orderable": false, "targets": 5 },
                    ],
                    "order": [[1, 'asc']],
                    ajax: function (data, callback, settings) {

                        for (var i = 0, len = data.columns.length; i < len; i++) {
                            delete data.columns[i].name;
                            delete data.columns[i].data;
                            delete data.columns[i].searchable;
                            delete data.columns[i].orderable;
                            delete data.columns[i].search.regex;
                            delete data.search.regex;

                            delete data.columns[i].search.value;
                        }

                        $.ajax({
                            url: suburl + "/api/master/getcustomers?data.CUSTOMER_CODE="+ $('.cls_customer_master .cls_customer_code').val()
                                + "&data.CUSTOMER_NAME=" + $('.cls_customer_master .cls_customer_name').val()
                                + "&data.CUSTOMER_ID=0"
                            ,
                            type: 'GET',
                            data: data,
                            success: function (res) {
                                dtSuccess(res, callback);
                            }
                        });
                    },
                    "columns": [
                        {
                            render: function (data, type, row, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            }
                        },
                        { "data": "CUSTOMER_CODE", "className": "cls_nowrap" },
                        { "data": "CUSTOMER_NAME", "className": "cls_nowrap" },
                        { "data": "IS_SHADE_LIMIT", "className": "cls_nowrap" },
                        { "data": "IS_ACTIVE", "className": "cls_nowrap" },
                     
                        {
                           "data" : "EDIT","className": "cls_nowrap cls_edit"
                            //render: function (data, type, row, meta) {
                            //   // return '<span class="cls_nowrap"><a href="' + suburl + '/Customer/Edit/' + row.CUSTOMER_ID + '>Edit</a></span>'
                            //    return 'Edit'
                            //}
                        },
                    ],
                    "drawCallback": function (settings, json) {

                    },
                    "rowCallback": function (row, data, index) {
                        // $(row).find('.cls_edit').html('XXXX');
                        $(row).find('.cls_edit').html('<a href="' + suburl + '/Customer/Edit/' + data.CUSTOMER_ID + '" style="text-decoration: underline;">Edit</a>');
                    }


                });

                $(".cls_btn_export_excel_cust").click(function () {
                    window.open(suburl + "/excel/allcustomerxecm", '_blank');
                });

            }


        </script>
    }
