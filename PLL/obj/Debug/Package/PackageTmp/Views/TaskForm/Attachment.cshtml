<div class="cls_task_form_attachment" style="padding-top:10px;">
    <input type="hidden" class="cls_go_to_step" />
    <form class="cls_form_att_for_style cls_form_upload_file" method="POST" enctype="multipart/form-data">
        <div class="dropzone">
            <div class="row fileupload-buttonbar" style="padding:0px;">
                <div class="col-lg-12">
                    <!-- The fileinput-button span is used to style the file input field as button -->
                    <span class="btn btn-success fileinput-button">
                        <i class="glyphicon glyphicon-plus"></i>
                        <span>Add files...</span>
                        <input type="file" name="files[]" class="cls_fileinputMockup" id="fileinputMockup" accept="" onclick="clickFilesMockupTask()" onchange="return checkFilesMockupTask(event)" multiple>
                    </span>
                    <button type="submit" class="btn btn-primary start">
                        <i class="glyphicon glyphicon-upload"></i>
                        <span>Start upload</span>
                    </button>
                    <button type="reset" class="btn btn-danger cancel">
                        <i class="glyphicon glyphicon-ban-circle"></i>
                        <span>Cancel upload</span>
                    </button>
                    @*<button type="button" class="btn btn-danger delete">
                            <i class="glyphicon glyphicon-trash"></i>
                            <span>Delete</span>
                        </button>
                        <input type="checkbox" class="toggle">*@
                    <!-- The global file processing state -->
                    @*<span class="fileupload-process"></span>*@
                </div>
                @*<!-- The global progress state -->
                    <div class="col-lg-5 fileupload-progress fade">
                        <!-- The global progress bar -->
                        <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                            <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                        </div>
                        <!-- The extended global progress state -->
                        <div class="progress-extended">&nbsp;</div>
                    </div>*@
            </div>
            @*<!-- The global progress state -->
                <div class="col-lg-5 fileupload-progress fade">
                    <!-- The global progress bar -->
                    <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                        <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                    </div>
                    <!-- The extended global progress state -->
                    <div class="progress-extended">&nbsp;</div>
                </div>*@
            <!-- The table listing the files available for upload/download -->
            <div class="cls_div_table">
                <table role="presentation" class="cls_table_attachment display dataTable" style="width:100%;padding-top:0px;">
                    <thead>
                        <tr>
                            <th class="cls_nowrap"></th>
                            <th class="cls_nowrap">File name</th>
                            <th class="cls_nowrap">File size</th>
                            <th class="cls_nowrap">Version</th>
                            <th class="cls_nowrap">Uploaded at</th>
                            <th style="display:none;" class="cls_th_uploaded_by cls_nowrap">Uploaded by</th>
                            <th style="display:none;" class="cls_th_visibility cls_nowrap">Visibility</th>
                            <th class="cls_nowrap">Action</th>
                        </tr>
                    </thead>
                    <tbody class="files"></tbody>
                </table>
            </div>
        </div>
    </form>
</div>
<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
    {% for (var i=0, file; file=o.files[i]; i++) {
    var isValid = true;
    //if(IsVendor == '1' && CURRENT_STEP_CODE_DISPLAY_TXT != 'SEND_VN_QUO') { if(file.name.indexOf(WORKFLOW_NO) == -1) { isValid = false; alertError2("Please attach a file name with a workflow number [" + WORKFLOW_NO + "]"); } }
    if(CURRENT_STEP_CODE_DISPLAY_TXT == 'SEND_VN_MB'||CURRENT_STEP_CODE_DISPLAY_TXT == 'SEND_VN_DL'||CURRENT_STEP_CODE_DISPLAY_TXT == 'SEND_VN_RS'||CURRENT_STEP_CODE_DISPLAY_TXT == 'SEND_VN_PR') { if(file.name.indexOf(WORKFLOW_NO) == -1) { isValid = false; alertError2("Please attach a file name with a workflow number [" + WORKFLOW_NO + "]"); } }
    if (isValid) { %}
    <tr class="template-upload fade">
        <td>
            @*<span class="preview"></span>*@
        </td>
        <td>
            <p class="name">{%=file.name%}</p>
            <strong class="error text-danger"></strong>
        </td>
        <td>
            <p class="size">Processing...</p>
            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
        </td>
        <td colspan="5" style="text-align:right;">
            {% if (!i && !o.options.autoUpload) { %}
            <button style="width:80px;" class="btn btn-primary start" disabled>
                <i class="glyphicon glyphicon-upload"></i>
                <span>Start</span>
            </button>
            {% } %}
            {% if (!i) { %}
            <button style="width:80px;" class="btn btn-warning cancel">
                <i class="glyphicon glyphicon-ban-circle"></i>
                <span>Cancel</span>
            </button>
            {% } %}
        </td>
    </tr>
    {% } } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
    {% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr data-node-id="{%=file.nodeid%}" class="template-download fade">
        <td>
            <span class="preview">
                {% if (file.thumbnailUrl) { %}
                <img src="{%=file.thumbnailUrl%}">
                {% } %}
            </span>
        </td>
        <td>
            <p class="name">
                {% if (file.url) { %}
                <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.name%}</a>
                {% } else { %}
                <span>{%=file.name%}</span>
                {% } %}
            </p>
            {% if (file.error) { %}
            <div><span class="label label-danger">Error</span> {%=file.error%}</div>
            {% } %}
        </td>
        <td>
            {% if (!file.error) { %}
            <span class="size">{%=o.formatFileSize(file.size)%}</span>
            {% } %}
        </td>
        <td>{%=file.version2%}</td>
        <td>{%=file.step%}</td>

        {% if(IsVendor == '1' || IsCustomer == '1') { $('.cls_th_uploaded_by').hide(); %}
        {% } else {
        $('.cls_th_uploaded_by').show();
        if (isEmpty(file.create_by_desc_txt)) { %}
        <td>{%=file.create_by_display_txt%}<br />{%=myDateTimeMoment(file.create_date_display_txt)%} </td>
        {% } else { %}
        <td>{%=file.create_by_display_txt%}<br />{%=file.create_by_desc_txt%}<br />{%=myDateTimeMoment(file.create_date_display_txt)%} </td>
        {% }
        }%}

        {% if(isEmpty($('.cls_go_to_step').val())) { $('.cls_th_visibility').show(); %}
        <td style="width:70px;" class="cls_nowrap">
            {% if (!file.error) { %}
            {% if (file.IS_INTERNAL == 'X') { %}
            <label style="padding-top:0px;" class="checkbox-inline"><input style="margin-right:5px;" checked class="cls_chk_att_visibility cls_chk_att_visibility_internal" type="checkbox">Internal</label><br />
            {% } %}
            {% if (isEmpty(file.IS_INTERNAL)) { %}
            <label style="padding-top:0px;" class="checkbox-inline"><input style="margin-right:5px;" class="cls_chk_att_visibility cls_chk_att_visibility_internal" type="checkbox">Internal</label><br />
            {% } %}

            {% if (file.IS_CUSTOMER == 'X') { %}
            <label style="padding-top:0px;" class="checkbox-inline"><input style="margin-right:5px;" checked class="cls_chk_att_visibility cls_chk_att_visibility_customer" type="checkbox">Customer</label><br />
            {% } %}
            {% if (isEmpty(file.IS_CUSTOMER)) { %}
            <label style="padding-top:0px;" class="checkbox-inline"><input style="margin-right:5px;" class="cls_chk_att_visibility cls_chk_att_visibility_customer" type="checkbox">Customer</label><br />
            {% } %}

            {% if (file.IS_VENDOR == 'X') { %}
            <label style="padding-top:0px;" class="checkbox-inline"><input style="margin-right:5px;" checked class="cls_chk_att_visibility cls_chk_att_visibility_vendor" type="checkbox">Vendor</label><br />
            {% } %}
            {% if (isEmpty(file.IS_VENDOR)) { %}
            <label style="padding-top:0px;" class="checkbox-inline"><input style="margin-right:5px;" class="cls_chk_att_visibility cls_chk_att_visibility_vendor" type="checkbox">Vendor</label><br />
            {% } %}
            {% } %}
        </td>
        {% } else { $('.cls_th_visibility').hide(); }%}


        <td style="width:70px;">
            {% if (file.canDownload) { %}
            <a href="@Url.Action("Download","FileUpload")?nodeIdTxt={%=file.NODE_ID_TXT%}" style="" class="cls_hand" target="_blank">Download</a><br />
            {% }  %}
            {% if (file.canDelete) { %}
            <a data-node-id="{%=file.nodeid%}" style="color:#d9534f;" class="cls_hand cls_delete_file">Delete</a><br />
            {% }  %}
            {% if (file.canAddVersion) { %}
            <a class="cls_hand" data-node_id_file_version="{%=file.nodeid%}" style="color:#47a447;" data-toggle="modal" data-target="#popup_attachment_file_version">Version</a>
            {% }  %}
            {% if (!file.canDownload && !file.canDelete && !file.canAddVersion) { %}
            <button class="btn btn-warning cancel">
                <i class="glyphicon glyphicon-ban-circle"></i>
                <span>Cancel</span>
            </button>
            {% } %}
            @*{% if (file.deleteUrl) { %}
                <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}" {% if (file.deletewithcredentials) { %} data-xhr-fields='{"withCredentials":true}' {% } %}>
                    <i class="glyphicon glyphicon-trash"></i>
                    <span>Delete</span>
                </button>
                <input type="checkbox" name="delete" value="1" class="toggle">
                {% } else { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
                {% } %}*@
        </td>
    </tr>
    {% } %}
</script>

<script type="text/javascript">
    function clickFilesMockupTask() {
        var FileTypeAllowed_Values = '';
        var FileTypeAllowed = '@System.Configuration.ConfigurationManager.AppSettings["FileTypeNotAllowed"]';
        var ExtensionsList = FileTypeAllowed.split(';');

        for (var i = 0; i < ExtensionsList.length; i++) {
            FileTypeAllowed_Values += ExtensionsList[i] + ',';
        }
        FileTypeAllowed_Values = FileTypeAllowed_Values.substring(0, FileTypeAllowed_Values.length - 1);
        $('.cls_fileinputMockup').attr('accept', FileTypeAllowed_Values);
    }

    function checkFilesMockupTask(event) {
        let fileList = event.target.files;
        var FileTypeNotAllowed = '@System.Configuration.ConfigurationManager.AppSettings["FileTypeNotAllowed"]';
        var ExtensionsList = FileTypeNotAllowed.split(';');
        var fileCount = 0;
        fileCount = fileList.length;
        var b = false;
        var filesName = '';

        if (fileCount == 1) {

            let file = fileList[0];
            let extension = file.name.match(/(?<=\.)\w+$/g)[0].toLowerCase();

            var ext2 = "." + extension.toLowerCase();
            filesName = file.name;
            if (ExtensionsList.includes(ext2)) {
                b = true;
            }
        }
        else {
            b = true;
            for (var i = 0; i < fileList.length; i++) {

                let file = fileList[i];
                let extension = file.name.match(/(?<=\.)\w+$/g)[0].toLowerCase();

                var ext2 = "." + extension.toLowerCase();

                if (!ExtensionsList.includes(ext2)) {
                    b = false;
                    filesName += file.name + ' \r\n ';
                }
            }
        }

        if (b == false) {
            alert('Invalid file type \r\n' + filesName);
            event.target.value = '';
            fileInput.value = '';
            return false;
        }
    }
</script>