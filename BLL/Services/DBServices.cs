using System.Linq;
using System.Data.Entity;
using System.Collections.Generic;
using DAL;
using System.Web.Script.Serialization;
using System;
using BLL.Services;
class CheckValue
{
    public static bool EqualsDefaultValue<T>(T value)
    {
        return EqualityComparer<T>.Default.Equals(value, default(T));
    }
}
public class ART_M_CONFIGURATION_SERVICE
{
    public static ART_M_CONFIGURATION GetByID(int? ID, ARTWORKEntities dc) { if (ID == null || ID == 0) return null; else return (from p in dc.ART_M_CONFIGURATION where p.ID == ID select p).FirstOrDefault(); }
    private static int? GetChkByID(int? ID, ARTWORKEntities dc) { if (ID == null || ID == 0) return null; else { var temp = (from p in dc.ART_M_CONFIGURATION where p.ID == ID select p.ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_CONFIGURATION> GetByItem(ART_M_CONFIGURATION Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_CONFIGURATION>(); else return CriteriaBy((from p in dc.ART_M_CONFIGURATION select p), Item).ToList(); }
    private static IQueryable<ART_M_CONFIGURATION> CriteriaBy(IQueryable<ART_M_CONFIGURATION> q, ART_M_CONFIGURATION criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ID)) { doWork = true; q = (from r in q where r.ID == criteria.ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONFIG_CODE)) { doWork = true; q = (from r in q where r.CONFIG_CODE == criteria.CONFIG_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONFIG_TYPE)) { doWork = true; q = (from r in q where r.CONFIG_TYPE == criteria.CONFIG_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONFIG_VALUE)) { doWork = true; q = (from r in q where r.CONFIG_VALUE == criteria.CONFIG_VALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION == criteria.DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ID == 0 select r); } return q; }
    public static List<ART_M_CONFIGURATION> GetByItemContain(ART_M_CONFIGURATION Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_CONFIGURATION>(); else return CriteriaByContains((from p in dc.ART_M_CONFIGURATION select p), Item).ToList(); }
    private static IQueryable<ART_M_CONFIGURATION> CriteriaByContains(IQueryable<ART_M_CONFIGURATION> q, ART_M_CONFIGURATION criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ID)) { doWork = true; q = (from r in q where r.ID == criteria.ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONFIG_CODE)) { doWork = true; q = (from r in q where r.CONFIG_CODE.Contains(criteria.CONFIG_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONFIG_TYPE)) { doWork = true; q = (from r in q where r.CONFIG_TYPE.Contains(criteria.CONFIG_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONFIG_VALUE)) { doWork = true; q = (from r in q where r.CONFIG_VALUE.Contains(criteria.CONFIG_VALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION.Contains(criteria.DESCRIPTION) select r); } if (!doWork) { q = (from r in q where r.ID == 0 select r); } return q; }
    public static List<ART_M_CONFIGURATION> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_CONFIGURATION select p).ToList(); }
    public static void SaveOrUpdate(ART_M_CONFIGURATION Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByID(Item.ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_CONFIGURATION.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByID(Item.ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_CONFIGURATION>().Local.FirstOrDefault(f => f.ID == Item.ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_CONFIGURATION Item, ARTWORKEntities dc) { if (GetChkByID(Item.ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_CONFIGURATION.Add(Item); dc.SaveChanges(); } else { var temp = GetByID(Item.ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_CONFIGURATION>().Local.FirstOrDefault(f => f.ID == Item.ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_CONFIGURATION Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_CONFIGURATION.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_CONFIGURATION Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_CONFIGURATION>().Local.FirstOrDefault(f => f.ID == Item.ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_CONFIGURATION NewItem, ART_M_CONFIGURATION OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_CONFIGURATION"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByID(int? ID, ARTWORKEntities dc) { var Item = GetByID(ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_CONSTANT_SERVICE
{
    public static ART_M_CONSTANT GetByID(int? ID, ARTWORKEntities dc) { if (ID == null || ID == 0) return null; else return (from p in dc.ART_M_CONSTANT where p.ID == ID select p).FirstOrDefault(); }
    private static int? GetChkByID(int? ID, ARTWORKEntities dc) { if (ID == null || ID == 0) return null; else { var temp = (from p in dc.ART_M_CONSTANT where p.ID == ID select p.ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_CONSTANT> GetByItem(ART_M_CONSTANT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_CONSTANT>(); else return CriteriaBy((from p in dc.ART_M_CONSTANT select p), Item).ToList(); }
    private static IQueryable<ART_M_CONSTANT> CriteriaBy(IQueryable<ART_M_CONSTANT> q, ART_M_CONSTANT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ID)) { doWork = true; q = (from r in q where r.ID == criteria.ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROGRAM_NAME)) { doWork = true; q = (from r in q where r.PROGRAM_NAME == criteria.PROGRAM_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.VARIABLE_NAME)) { doWork = true; q = (from r in q where r.VARIABLE_NAME == criteria.VARIABLE_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE)) { doWork = true; q = (from r in q where r.TYPE == criteria.TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEQUENCE)) { doWork = true; q = (from r in q where r.SEQUENCE == criteria.SEQUENCE select r); } if (!CheckValue.EqualsDefaultValue(criteria.FUNCAREA)) { doWork = true; q = (from r in q where r.FUNCAREA == criteria.FUNCAREA select r); } if (!CheckValue.EqualsDefaultValue(criteria.INEXCL)) { doWork = true; q = (from r in q where r.INEXCL == criteria.INEXCL select r); } if (!CheckValue.EqualsDefaultValue(criteria.OPTION)) { doWork = true; q = (from r in q where r.OPTION == criteria.OPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.LOWVALUE)) { doWork = true; q = (from r in q where r.LOWVALUE == criteria.LOWVALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.HIGHVALUE)) { doWork = true; q = (from r in q where r.HIGHVALUE == criteria.HIGHVALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ID == 0 select r); } return q; }
    public static List<ART_M_CONSTANT> GetByItemContain(ART_M_CONSTANT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_CONSTANT>(); else return CriteriaByContains((from p in dc.ART_M_CONSTANT select p), Item).ToList(); }
    private static IQueryable<ART_M_CONSTANT> CriteriaByContains(IQueryable<ART_M_CONSTANT> q, ART_M_CONSTANT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ID)) { doWork = true; q = (from r in q where r.ID == criteria.ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROGRAM_NAME)) { doWork = true; q = (from r in q where r.PROGRAM_NAME.Contains(criteria.PROGRAM_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VARIABLE_NAME)) { doWork = true; q = (from r in q where r.VARIABLE_NAME.Contains(criteria.VARIABLE_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE)) { doWork = true; q = (from r in q where r.TYPE.Contains(criteria.TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEQUENCE)) { doWork = true; q = (from r in q where r.SEQUENCE.Contains(criteria.SEQUENCE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FUNCAREA)) { doWork = true; q = (from r in q where r.FUNCAREA.Contains(criteria.FUNCAREA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INEXCL)) { doWork = true; q = (from r in q where r.INEXCL.Contains(criteria.INEXCL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OPTION)) { doWork = true; q = (from r in q where r.OPTION.Contains(criteria.OPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LOWVALUE)) { doWork = true; q = (from r in q where r.LOWVALUE.Contains(criteria.LOWVALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HIGHVALUE)) { doWork = true; q = (from r in q where r.HIGHVALUE.Contains(criteria.HIGHVALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ID == 0 select r); } return q; }
    public static List<ART_M_CONSTANT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_CONSTANT select p).ToList(); }
    public static void SaveOrUpdate(ART_M_CONSTANT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByID(Item.ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_CONSTANT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByID(Item.ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_CONSTANT>().Local.FirstOrDefault(f => f.ID == Item.ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_CONSTANT Item, ARTWORKEntities dc) { if (GetChkByID(Item.ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_CONSTANT.Add(Item); dc.SaveChanges(); } else { var temp = GetByID(Item.ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_CONSTANT>().Local.FirstOrDefault(f => f.ID == Item.ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_CONSTANT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_CONSTANT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_CONSTANT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_CONSTANT>().Local.FirstOrDefault(f => f.ID == Item.ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_CONSTANT NewItem, ART_M_CONSTANT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_CONSTANT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByID(int? ID, ARTWORKEntities dc) { var Item = GetByID(ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_DECISION_REASON_SERVICE
{
    public static ART_M_DECISION_REASON GetByART_M_DECISION_REASON_ID(int? ART_M_DECISION_REASON_ID, ARTWORKEntities dc) { if (ART_M_DECISION_REASON_ID == null || ART_M_DECISION_REASON_ID == 0) return null; else return (from p in dc.ART_M_DECISION_REASON where p.ART_M_DECISION_REASON_ID == ART_M_DECISION_REASON_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_M_DECISION_REASON_ID(int? ART_M_DECISION_REASON_ID, ARTWORKEntities dc) { if (ART_M_DECISION_REASON_ID == null || ART_M_DECISION_REASON_ID == 0) return null; else { var temp = (from p in dc.ART_M_DECISION_REASON where p.ART_M_DECISION_REASON_ID == ART_M_DECISION_REASON_ID select p.ART_M_DECISION_REASON_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_DECISION_REASON> GetByItem(ART_M_DECISION_REASON Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_DECISION_REASON>(); else return CriteriaBy((from p in dc.ART_M_DECISION_REASON select p), Item).ToList(); }
    private static IQueryable<ART_M_DECISION_REASON> CriteriaBy(IQueryable<ART_M_DECISION_REASON> q, ART_M_DECISION_REASON criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_DECISION_REASON_ID)) { doWork = true; q = (from r in q where r.ART_M_DECISION_REASON_ID == criteria.ART_M_DECISION_REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF)) { doWork = true; q = (from r in q where r.WF == criteria.WF select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_CODE)) { doWork = true; q = (from r in q where r.STEP_CODE == criteria.STEP_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION == criteria.DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_OVERDUE)) { doWork = true; q = (from r in q where r.IS_OVERDUE == criteria.IS_OVERDUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DEFAULT)) { doWork = true; q = (from r in q where r.IS_DEFAULT == criteria.IS_DEFAULT select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_M_DECISION_REASON_ID == 0 select r); } return q; }
    public static List<ART_M_DECISION_REASON> GetByItemContain(ART_M_DECISION_REASON Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_DECISION_REASON>(); else return CriteriaByContains((from p in dc.ART_M_DECISION_REASON select p), Item).ToList(); }
    private static IQueryable<ART_M_DECISION_REASON> CriteriaByContains(IQueryable<ART_M_DECISION_REASON> q, ART_M_DECISION_REASON criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_DECISION_REASON_ID)) { doWork = true; q = (from r in q where r.ART_M_DECISION_REASON_ID == criteria.ART_M_DECISION_REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF)) { doWork = true; q = (from r in q where r.WF.Contains(criteria.WF) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_CODE)) { doWork = true; q = (from r in q where r.STEP_CODE.Contains(criteria.STEP_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION.Contains(criteria.DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_OVERDUE)) { doWork = true; q = (from r in q where r.IS_OVERDUE.Contains(criteria.IS_OVERDUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DEFAULT)) { doWork = true; q = (from r in q where r.IS_DEFAULT.Contains(criteria.IS_DEFAULT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_M_DECISION_REASON_ID == 0 select r); } return q; }
    public static List<ART_M_DECISION_REASON> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_DECISION_REASON select p).ToList(); }
    public static void SaveOrUpdate(ART_M_DECISION_REASON Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_M_DECISION_REASON_ID(Item.ART_M_DECISION_REASON_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_DECISION_REASON.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_M_DECISION_REASON_ID(Item.ART_M_DECISION_REASON_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_DECISION_REASON>().Local.FirstOrDefault(f => f.ART_M_DECISION_REASON_ID == Item.ART_M_DECISION_REASON_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_DECISION_REASON Item, ARTWORKEntities dc) { if (GetChkByART_M_DECISION_REASON_ID(Item.ART_M_DECISION_REASON_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_DECISION_REASON.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_M_DECISION_REASON_ID(Item.ART_M_DECISION_REASON_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_DECISION_REASON>().Local.FirstOrDefault(f => f.ART_M_DECISION_REASON_ID == Item.ART_M_DECISION_REASON_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_DECISION_REASON Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_DECISION_REASON.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_DECISION_REASON Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_DECISION_REASON>().Local.FirstOrDefault(f => f.ART_M_DECISION_REASON_ID == Item.ART_M_DECISION_REASON_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_DECISION_REASON NewItem, ART_M_DECISION_REASON OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_DECISION_REASON"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_M_DECISION_REASON_ID(int? ART_M_DECISION_REASON_ID, ARTWORKEntities dc) { var Item = GetByART_M_DECISION_REASON_ID(ART_M_DECISION_REASON_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_DECISION_REASON_CONFIG_SERVICE
{
    public static ART_M_DECISION_REASON_CONFIG GetByDECISION_REASON_CONFIG_ID(int? DECISION_REASON_CONFIG_ID, ARTWORKEntities dc) { if (DECISION_REASON_CONFIG_ID == null || DECISION_REASON_CONFIG_ID == 0) return null; else return (from p in dc.ART_M_DECISION_REASON_CONFIG where p.DECISION_REASON_CONFIG_ID == DECISION_REASON_CONFIG_ID select p).FirstOrDefault(); }
    private static int? GetChkByDECISION_REASON_CONFIG_ID(int? DECISION_REASON_CONFIG_ID, ARTWORKEntities dc) { if (DECISION_REASON_CONFIG_ID == null || DECISION_REASON_CONFIG_ID == 0) return null; else { var temp = (from p in dc.ART_M_DECISION_REASON_CONFIG where p.DECISION_REASON_CONFIG_ID == DECISION_REASON_CONFIG_ID select p.DECISION_REASON_CONFIG_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_DECISION_REASON_CONFIG> GetByItem(ART_M_DECISION_REASON_CONFIG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_DECISION_REASON_CONFIG>(); else return CriteriaBy((from p in dc.ART_M_DECISION_REASON_CONFIG select p), Item).ToList(); }
    private static IQueryable<ART_M_DECISION_REASON_CONFIG> CriteriaBy(IQueryable<ART_M_DECISION_REASON_CONFIG> q, ART_M_DECISION_REASON_CONFIG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.DECISION_REASON_CONFIG_ID)) { doWork = true; q = (from r in q where r.DECISION_REASON_CONFIG_ID == criteria.DECISION_REASON_CONFIG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDERBY)) { doWork = true; q = (from r in q where r.ORDERBY == criteria.ORDERBY select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION_REASON_CONFIG_CODE)) { doWork = true; q = (from r in q where r.DECISION_REASON_CONFIG_CODE == criteria.DECISION_REASON_CONFIG_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION_REASON_CONFIG_NAME)) { doWork = true; q = (from r in q where r.DECISION_REASON_CONFIG_NAME == criteria.DECISION_REASON_CONFIG_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF)) { doWork = true; q = (from r in q where r.WF == criteria.WF select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.DECISION_REASON_CONFIG_ID == 0 select r); } return q; }
    public static List<ART_M_DECISION_REASON_CONFIG> GetByItemContain(ART_M_DECISION_REASON_CONFIG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_DECISION_REASON_CONFIG>(); else return CriteriaByContains((from p in dc.ART_M_DECISION_REASON_CONFIG select p), Item).ToList(); }
    private static IQueryable<ART_M_DECISION_REASON_CONFIG> CriteriaByContains(IQueryable<ART_M_DECISION_REASON_CONFIG> q, ART_M_DECISION_REASON_CONFIG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.DECISION_REASON_CONFIG_ID)) { doWork = true; q = (from r in q where r.DECISION_REASON_CONFIG_ID == criteria.DECISION_REASON_CONFIG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION_REASON_CONFIG_CODE)) { doWork = true; q = (from r in q where r.DECISION_REASON_CONFIG_CODE.Contains(criteria.DECISION_REASON_CONFIG_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION_REASON_CONFIG_NAME)) { doWork = true; q = (from r in q where r.DECISION_REASON_CONFIG_NAME.Contains(criteria.DECISION_REASON_CONFIG_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF)) { doWork = true; q = (from r in q where r.WF.Contains(criteria.WF) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.DECISION_REASON_CONFIG_ID == 0 select r); } return q; }
    public static List<ART_M_DECISION_REASON_CONFIG> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_DECISION_REASON_CONFIG select p).ToList(); }
    public static void SaveOrUpdate(ART_M_DECISION_REASON_CONFIG Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByDECISION_REASON_CONFIG_ID(Item.DECISION_REASON_CONFIG_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_DECISION_REASON_CONFIG.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByDECISION_REASON_CONFIG_ID(Item.DECISION_REASON_CONFIG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_DECISION_REASON_CONFIG>().Local.FirstOrDefault(f => f.DECISION_REASON_CONFIG_ID == Item.DECISION_REASON_CONFIG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_DECISION_REASON_CONFIG Item, ARTWORKEntities dc) { if (GetChkByDECISION_REASON_CONFIG_ID(Item.DECISION_REASON_CONFIG_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_DECISION_REASON_CONFIG.Add(Item); dc.SaveChanges(); } else { var temp = GetByDECISION_REASON_CONFIG_ID(Item.DECISION_REASON_CONFIG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_DECISION_REASON_CONFIG>().Local.FirstOrDefault(f => f.DECISION_REASON_CONFIG_ID == Item.DECISION_REASON_CONFIG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_DECISION_REASON_CONFIG Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_DECISION_REASON_CONFIG.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_DECISION_REASON_CONFIG Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_DECISION_REASON_CONFIG>().Local.FirstOrDefault(f => f.DECISION_REASON_CONFIG_ID == Item.DECISION_REASON_CONFIG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_DECISION_REASON_CONFIG NewItem, ART_M_DECISION_REASON_CONFIG OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_DECISION_REASON_CONFIG"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByDECISION_REASON_CONFIG_ID(int? DECISION_REASON_CONFIG_ID, ARTWORKEntities dc) { var Item = GetByDECISION_REASON_CONFIG_ID(DECISION_REASON_CONFIG_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_EMAIL_TEMPLATE_SERVICE
{
    public static ART_M_EMAIL_TEMPLATE GetByEMAIL_TEMPLATE_ID(int? EMAIL_TEMPLATE_ID, ARTWORKEntities dc) { if (EMAIL_TEMPLATE_ID == null || EMAIL_TEMPLATE_ID == 0) return null; else return (from p in dc.ART_M_EMAIL_TEMPLATE where p.EMAIL_TEMPLATE_ID == EMAIL_TEMPLATE_ID select p).FirstOrDefault(); }
    private static int? GetChkByEMAIL_TEMPLATE_ID(int? EMAIL_TEMPLATE_ID, ARTWORKEntities dc) { if (EMAIL_TEMPLATE_ID == null || EMAIL_TEMPLATE_ID == 0) return null; else { var temp = (from p in dc.ART_M_EMAIL_TEMPLATE where p.EMAIL_TEMPLATE_ID == EMAIL_TEMPLATE_ID select p.EMAIL_TEMPLATE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_EMAIL_TEMPLATE> GetByItem(ART_M_EMAIL_TEMPLATE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_EMAIL_TEMPLATE>(); else return CriteriaBy((from p in dc.ART_M_EMAIL_TEMPLATE select p), Item).ToList(); }
    private static IQueryable<ART_M_EMAIL_TEMPLATE> CriteriaBy(IQueryable<ART_M_EMAIL_TEMPLATE> q, ART_M_EMAIL_TEMPLATE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.EMAIL_TEMPLATE_ID)) { doWork = true; q = (from r in q where r.EMAIL_TEMPLATE_ID == criteria.EMAIL_TEMPLATE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.EMAIL_TEMPLATE_CODE)) { doWork = true; q = (from r in q where r.EMAIL_TEMPLATE_CODE == criteria.EMAIL_TEMPLATE_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.M_SUBJECT)) { doWork = true; q = (from r in q where r.M_SUBJECT == criteria.M_SUBJECT select r); } if (!CheckValue.EqualsDefaultValue(criteria.M_DEAR)) { doWork = true; q = (from r in q where r.M_DEAR == criteria.M_DEAR select r); } if (!CheckValue.EqualsDefaultValue(criteria.M_BODY_01)) { doWork = true; q = (from r in q where r.M_BODY_01 == criteria.M_BODY_01 select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.EMAIL_TEMPLATE_ID == 0 select r); } return q; }
    public static List<ART_M_EMAIL_TEMPLATE> GetByItemContain(ART_M_EMAIL_TEMPLATE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_EMAIL_TEMPLATE>(); else return CriteriaByContains((from p in dc.ART_M_EMAIL_TEMPLATE select p), Item).ToList(); }
    private static IQueryable<ART_M_EMAIL_TEMPLATE> CriteriaByContains(IQueryable<ART_M_EMAIL_TEMPLATE> q, ART_M_EMAIL_TEMPLATE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.EMAIL_TEMPLATE_ID)) { doWork = true; q = (from r in q where r.EMAIL_TEMPLATE_ID == criteria.EMAIL_TEMPLATE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.EMAIL_TEMPLATE_CODE)) { doWork = true; q = (from r in q where r.EMAIL_TEMPLATE_CODE.Contains(criteria.EMAIL_TEMPLATE_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.M_SUBJECT)) { doWork = true; q = (from r in q where r.M_SUBJECT.Contains(criteria.M_SUBJECT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.M_DEAR)) { doWork = true; q = (from r in q where r.M_DEAR.Contains(criteria.M_DEAR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.M_BODY_01)) { doWork = true; q = (from r in q where r.M_BODY_01.Contains(criteria.M_BODY_01) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.EMAIL_TEMPLATE_ID == 0 select r); } return q; }
    public static List<ART_M_EMAIL_TEMPLATE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_EMAIL_TEMPLATE select p).ToList(); }
    public static void SaveOrUpdate(ART_M_EMAIL_TEMPLATE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByEMAIL_TEMPLATE_ID(Item.EMAIL_TEMPLATE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_EMAIL_TEMPLATE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByEMAIL_TEMPLATE_ID(Item.EMAIL_TEMPLATE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_EMAIL_TEMPLATE>().Local.FirstOrDefault(f => f.EMAIL_TEMPLATE_ID == Item.EMAIL_TEMPLATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_EMAIL_TEMPLATE Item, ARTWORKEntities dc) { if (GetChkByEMAIL_TEMPLATE_ID(Item.EMAIL_TEMPLATE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_EMAIL_TEMPLATE.Add(Item); dc.SaveChanges(); } else { var temp = GetByEMAIL_TEMPLATE_ID(Item.EMAIL_TEMPLATE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_EMAIL_TEMPLATE>().Local.FirstOrDefault(f => f.EMAIL_TEMPLATE_ID == Item.EMAIL_TEMPLATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_EMAIL_TEMPLATE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_EMAIL_TEMPLATE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_EMAIL_TEMPLATE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_EMAIL_TEMPLATE>().Local.FirstOrDefault(f => f.EMAIL_TEMPLATE_ID == Item.EMAIL_TEMPLATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_EMAIL_TEMPLATE NewItem, ART_M_EMAIL_TEMPLATE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_EMAIL_TEMPLATE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByEMAIL_TEMPLATE_ID(int? EMAIL_TEMPLATE_ID, ARTWORKEntities dc) { var Item = GetByEMAIL_TEMPLATE_ID(EMAIL_TEMPLATE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_MESSAGE_SERVICE
{
    public static ART_M_MESSAGE GetByMSG_ID(int? MSG_ID, ARTWORKEntities dc) { if (MSG_ID == null || MSG_ID == 0) return null; else return (from p in dc.ART_M_MESSAGE where p.MSG_ID == MSG_ID select p).FirstOrDefault(); }
    private static int? GetChkByMSG_ID(int? MSG_ID, ARTWORKEntities dc) { if (MSG_ID == null || MSG_ID == 0) return null; else { var temp = (from p in dc.ART_M_MESSAGE where p.MSG_ID == MSG_ID select p.MSG_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_MESSAGE> GetByItem(ART_M_MESSAGE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_MESSAGE>(); else return CriteriaBy((from p in dc.ART_M_MESSAGE select p), Item).ToList(); }
    private static IQueryable<ART_M_MESSAGE> CriteriaBy(IQueryable<ART_M_MESSAGE> q, ART_M_MESSAGE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MSG_ID)) { doWork = true; q = (from r in q where r.MSG_ID == criteria.MSG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MSG_CODE)) { doWork = true; q = (from r in q where r.MSG_CODE == criteria.MSG_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MSG_DESCRIPTION)) { doWork = true; q = (from r in q where r.MSG_DESCRIPTION == criteria.MSG_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MSG_ID == 0 select r); } return q; }
    public static List<ART_M_MESSAGE> GetByItemContain(ART_M_MESSAGE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_MESSAGE>(); else return CriteriaByContains((from p in dc.ART_M_MESSAGE select p), Item).ToList(); }
    private static IQueryable<ART_M_MESSAGE> CriteriaByContains(IQueryable<ART_M_MESSAGE> q, ART_M_MESSAGE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MSG_ID)) { doWork = true; q = (from r in q where r.MSG_ID == criteria.MSG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MSG_CODE)) { doWork = true; q = (from r in q where r.MSG_CODE.Contains(criteria.MSG_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MSG_DESCRIPTION)) { doWork = true; q = (from r in q where r.MSG_DESCRIPTION.Contains(criteria.MSG_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MSG_ID == 0 select r); } return q; }
    public static List<ART_M_MESSAGE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_MESSAGE select p).ToList(); }
    public static void SaveOrUpdate(ART_M_MESSAGE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMSG_ID(Item.MSG_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_MESSAGE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMSG_ID(Item.MSG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_MESSAGE>().Local.FirstOrDefault(f => f.MSG_ID == Item.MSG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_MESSAGE Item, ARTWORKEntities dc) { if (GetChkByMSG_ID(Item.MSG_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_MESSAGE.Add(Item); dc.SaveChanges(); } else { var temp = GetByMSG_ID(Item.MSG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_MESSAGE>().Local.FirstOrDefault(f => f.MSG_ID == Item.MSG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_MESSAGE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_MESSAGE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_MESSAGE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_MESSAGE>().Local.FirstOrDefault(f => f.MSG_ID == Item.MSG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_MESSAGE NewItem, ART_M_MESSAGE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_MESSAGE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMSG_ID(int? MSG_ID, ARTWORKEntities dc) { var Item = GetByMSG_ID(MSG_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_PERMISSION_SERVICE
{
    public static ART_M_PERMISSION GetByPERMISSION_ID(int? PERMISSION_ID, ARTWORKEntities dc) { if (PERMISSION_ID == null || PERMISSION_ID == 0) return null; else return (from p in dc.ART_M_PERMISSION where p.PERMISSION_ID == PERMISSION_ID select p).FirstOrDefault(); }
    private static int? GetChkByPERMISSION_ID(int? PERMISSION_ID, ARTWORKEntities dc) { if (PERMISSION_ID == null || PERMISSION_ID == 0) return null; else { var temp = (from p in dc.ART_M_PERMISSION where p.PERMISSION_ID == PERMISSION_ID select p.PERMISSION_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_PERMISSION> GetByItem(ART_M_PERMISSION Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_PERMISSION>(); else return CriteriaBy((from p in dc.ART_M_PERMISSION select p), Item).ToList(); }
    private static IQueryable<ART_M_PERMISSION> CriteriaBy(IQueryable<ART_M_PERMISSION> q, ART_M_PERMISSION criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PERMISSION_ID)) { doWork = true; q = (from r in q where r.PERMISSION_ID == criteria.PERMISSION_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PERMISSION_CODE)) { doWork = true; q = (from r in q where r.PERMISSION_CODE == criteria.PERMISSION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID)) { doWork = true; q = (from r in q where r.ROLE_ID == criteria.ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.PERMISSION_ID == 0 select r); } return q; }
    public static List<ART_M_PERMISSION> GetByItemContain(ART_M_PERMISSION Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_PERMISSION>(); else return CriteriaByContains((from p in dc.ART_M_PERMISSION select p), Item).ToList(); }
    private static IQueryable<ART_M_PERMISSION> CriteriaByContains(IQueryable<ART_M_PERMISSION> q, ART_M_PERMISSION criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PERMISSION_ID)) { doWork = true; q = (from r in q where r.PERMISSION_ID == criteria.PERMISSION_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PERMISSION_CODE)) { doWork = true; q = (from r in q where r.PERMISSION_CODE.Contains(criteria.PERMISSION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID)) { doWork = true; q = (from r in q where r.ROLE_ID.ToString().Contains(criteria.ROLE_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.PERMISSION_ID == 0 select r); } return q; }
    public static List<ART_M_PERMISSION> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_PERMISSION select p).ToList(); }
    public static void SaveOrUpdate(ART_M_PERMISSION Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPERMISSION_ID(Item.PERMISSION_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_PERMISSION.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPERMISSION_ID(Item.PERMISSION_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_PERMISSION>().Local.FirstOrDefault(f => f.PERMISSION_ID == Item.PERMISSION_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_PERMISSION Item, ARTWORKEntities dc) { if (GetChkByPERMISSION_ID(Item.PERMISSION_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_PERMISSION.Add(Item); dc.SaveChanges(); } else { var temp = GetByPERMISSION_ID(Item.PERMISSION_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_PERMISSION>().Local.FirstOrDefault(f => f.PERMISSION_ID == Item.PERMISSION_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_PERMISSION Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_PERMISSION.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_PERMISSION Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_PERMISSION>().Local.FirstOrDefault(f => f.PERMISSION_ID == Item.PERMISSION_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_PERMISSION NewItem, ART_M_PERMISSION OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_PERMISSION"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPERMISSION_ID(int? PERMISSION_ID, ARTWORKEntities dc) { var Item = GetByPERMISSION_ID(PERMISSION_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_PIC_SERVICE
{
    public static ART_M_PIC GetByPIC_ID(int? PIC_ID, ARTWORKEntities dc) { if (PIC_ID == null || PIC_ID == 0) return null; else return (from p in dc.ART_M_PIC where p.PIC_ID == PIC_ID select p).FirstOrDefault(); }
    private static int? GetChkByPIC_ID(int? PIC_ID, ARTWORKEntities dc) { if (PIC_ID == null || PIC_ID == 0) return null; else { var temp = (from p in dc.ART_M_PIC where p.PIC_ID == PIC_ID select p.PIC_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_PIC> GetByItem(ART_M_PIC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_PIC>(); else return CriteriaBy((from p in dc.ART_M_PIC select p), Item).ToList(); }
    private static IQueryable<ART_M_PIC> CriteriaBy(IQueryable<ART_M_PIC> q, ART_M_PIC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PIC_ID)) { doWork = true; q = (from r in q where r.PIC_ID == criteria.PIC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID == criteria.USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE == criteria.ZONE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_CODE)) { doWork = true; q = (from r in q where r.SOLD_TO_CODE == criteria.SOLD_TO_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_CODE)) { doWork = true; q = (from r in q where r.SHIP_TO_CODE == criteria.SHIP_TO_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY == criteria.COUNTRY select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.PIC_ID == 0 select r); } return q; }
    public static List<ART_M_PIC> GetByItemContain(ART_M_PIC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_PIC>(); else return CriteriaByContains((from p in dc.ART_M_PIC select p), Item).ToList(); }
    private static IQueryable<ART_M_PIC> CriteriaByContains(IQueryable<ART_M_PIC> q, ART_M_PIC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PIC_ID)) { doWork = true; q = (from r in q where r.PIC_ID == criteria.PIC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE.Contains(criteria.ZONE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_CODE)) { doWork = true; q = (from r in q where r.SOLD_TO_CODE.Contains(criteria.SOLD_TO_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_CODE)) { doWork = true; q = (from r in q where r.SHIP_TO_CODE.Contains(criteria.SHIP_TO_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY.Contains(criteria.COUNTRY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.PIC_ID == 0 select r); } return q; }
    public static List<ART_M_PIC> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_PIC select p).ToList(); }
    public static void SaveOrUpdate(ART_M_PIC Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPIC_ID(Item.PIC_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_PIC.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPIC_ID(Item.PIC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_PIC>().Local.FirstOrDefault(f => f.PIC_ID == Item.PIC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_PIC Item, ARTWORKEntities dc) { if (GetChkByPIC_ID(Item.PIC_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_PIC.Add(Item); dc.SaveChanges(); } else { var temp = GetByPIC_ID(Item.PIC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_PIC>().Local.FirstOrDefault(f => f.PIC_ID == Item.PIC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_PIC Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_PIC.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_PIC Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_PIC>().Local.FirstOrDefault(f => f.PIC_ID == Item.PIC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_PIC NewItem, ART_M_PIC OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_PIC"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPIC_ID(int? PIC_ID, ARTWORKEntities dc) { var Item = GetByPIC_ID(PIC_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_POSITION_SERVICE
{
    public static ART_M_POSITION GetByART_M_POSITION_ID(int? ART_M_POSITION_ID, ARTWORKEntities dc) { if (ART_M_POSITION_ID == null || ART_M_POSITION_ID == 0) return null; else return (from p in dc.ART_M_POSITION where p.ART_M_POSITION_ID == ART_M_POSITION_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_M_POSITION_ID(int? ART_M_POSITION_ID, ARTWORKEntities dc) { if (ART_M_POSITION_ID == null || ART_M_POSITION_ID == 0) return null; else { var temp = (from p in dc.ART_M_POSITION where p.ART_M_POSITION_ID == ART_M_POSITION_ID select p.ART_M_POSITION_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_POSITION> GetByItem(ART_M_POSITION Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_POSITION>(); else return CriteriaBy((from p in dc.ART_M_POSITION select p), Item).ToList(); }
    private static IQueryable<ART_M_POSITION> CriteriaBy(IQueryable<ART_M_POSITION> q, ART_M_POSITION criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_POSITION_ID)) { doWork = true; q = (from r in q where r.ART_M_POSITION_ID == criteria.ART_M_POSITION_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ART_M_POSITION_NAME)) { doWork = true; q = (from r in q where r.ART_M_POSITION_NAME == criteria.ART_M_POSITION_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.ART_M_POSITION_CODE)) { doWork = true; q = (from r in q where r.ART_M_POSITION_CODE == criteria.ART_M_POSITION_CODE select r); } if (!doWork) { q = (from r in q where r.ART_M_POSITION_ID == 0 select r); } return q; }
    public static List<ART_M_POSITION> GetByItemContain(ART_M_POSITION Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_POSITION>(); else return CriteriaByContains((from p in dc.ART_M_POSITION select p), Item).ToList(); }
    private static IQueryable<ART_M_POSITION> CriteriaByContains(IQueryable<ART_M_POSITION> q, ART_M_POSITION criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_POSITION_ID)) { doWork = true; q = (from r in q where r.ART_M_POSITION_ID == criteria.ART_M_POSITION_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ART_M_POSITION_NAME)) { doWork = true; q = (from r in q where r.ART_M_POSITION_NAME.Contains(criteria.ART_M_POSITION_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ART_M_POSITION_CODE)) { doWork = true; q = (from r in q where r.ART_M_POSITION_CODE.Contains(criteria.ART_M_POSITION_CODE) select r); } if (!doWork) { q = (from r in q where r.ART_M_POSITION_ID == 0 select r); } return q; }
    public static List<ART_M_POSITION> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_POSITION select p).ToList(); }
    public static void SaveOrUpdate(ART_M_POSITION Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_M_POSITION_ID(Item.ART_M_POSITION_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_POSITION.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_M_POSITION_ID(Item.ART_M_POSITION_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_POSITION>().Local.FirstOrDefault(f => f.ART_M_POSITION_ID == Item.ART_M_POSITION_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_POSITION Item, ARTWORKEntities dc) { if (GetChkByART_M_POSITION_ID(Item.ART_M_POSITION_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_POSITION.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_M_POSITION_ID(Item.ART_M_POSITION_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_POSITION>().Local.FirstOrDefault(f => f.ART_M_POSITION_ID == Item.ART_M_POSITION_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_POSITION Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_POSITION.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_POSITION Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_POSITION>().Local.FirstOrDefault(f => f.ART_M_POSITION_ID == Item.ART_M_POSITION_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_POSITION NewItem, ART_M_POSITION OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_POSITION"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_M_POSITION_ID(int? ART_M_POSITION_ID, ARTWORKEntities dc) { var Item = GetByART_M_POSITION_ID(ART_M_POSITION_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_POSITION_ROLE_SERVICE
{
    public static ART_M_POSITION_ROLE GetByPOSITION_ROLE_ID(int? POSITION_ROLE_ID, ARTWORKEntities dc) { if (POSITION_ROLE_ID == null || POSITION_ROLE_ID == 0) return null; else return (from p in dc.ART_M_POSITION_ROLE where p.POSITION_ROLE_ID == POSITION_ROLE_ID select p).FirstOrDefault(); }
    private static int? GetChkByPOSITION_ROLE_ID(int? POSITION_ROLE_ID, ARTWORKEntities dc) { if (POSITION_ROLE_ID == null || POSITION_ROLE_ID == 0) return null; else { var temp = (from p in dc.ART_M_POSITION_ROLE where p.POSITION_ROLE_ID == POSITION_ROLE_ID select p.POSITION_ROLE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_POSITION_ROLE> GetByItem(ART_M_POSITION_ROLE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_POSITION_ROLE>(); else return CriteriaBy((from p in dc.ART_M_POSITION_ROLE select p), Item).ToList(); }
    private static IQueryable<ART_M_POSITION_ROLE> CriteriaBy(IQueryable<ART_M_POSITION_ROLE> q, ART_M_POSITION_ROLE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.POSITION_ROLE_ID)) { doWork = true; q = (from r in q where r.POSITION_ROLE_ID == criteria.POSITION_ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.POSITION_ID)) { doWork = true; q = (from r in q where r.POSITION_ID == criteria.POSITION_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID)) { doWork = true; q = (from r in q where r.ROLE_ID == criteria.ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.POSITION_ROLE_ID == 0 select r); } return q; }
    public static List<ART_M_POSITION_ROLE> GetByItemContain(ART_M_POSITION_ROLE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_POSITION_ROLE>(); else return CriteriaByContains((from p in dc.ART_M_POSITION_ROLE select p), Item).ToList(); }
    private static IQueryable<ART_M_POSITION_ROLE> CriteriaByContains(IQueryable<ART_M_POSITION_ROLE> q, ART_M_POSITION_ROLE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.POSITION_ROLE_ID)) { doWork = true; q = (from r in q where r.POSITION_ROLE_ID == criteria.POSITION_ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.POSITION_ID)) { doWork = true; q = (from r in q where r.POSITION_ID.ToString().Contains(criteria.POSITION_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID)) { doWork = true; q = (from r in q where r.ROLE_ID.ToString().Contains(criteria.ROLE_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.POSITION_ROLE_ID == 0 select r); } return q; }
    public static List<ART_M_POSITION_ROLE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_POSITION_ROLE select p).ToList(); }
    public static void SaveOrUpdate(ART_M_POSITION_ROLE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPOSITION_ROLE_ID(Item.POSITION_ROLE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_POSITION_ROLE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPOSITION_ROLE_ID(Item.POSITION_ROLE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_POSITION_ROLE>().Local.FirstOrDefault(f => f.POSITION_ROLE_ID == Item.POSITION_ROLE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_POSITION_ROLE Item, ARTWORKEntities dc) { if (GetChkByPOSITION_ROLE_ID(Item.POSITION_ROLE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_POSITION_ROLE.Add(Item); dc.SaveChanges(); } else { var temp = GetByPOSITION_ROLE_ID(Item.POSITION_ROLE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_POSITION_ROLE>().Local.FirstOrDefault(f => f.POSITION_ROLE_ID == Item.POSITION_ROLE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_POSITION_ROLE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_POSITION_ROLE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_POSITION_ROLE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_POSITION_ROLE>().Local.FirstOrDefault(f => f.POSITION_ROLE_ID == Item.POSITION_ROLE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_POSITION_ROLE NewItem, ART_M_POSITION_ROLE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_POSITION_ROLE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPOSITION_ROLE_ID(int? POSITION_ROLE_ID, ARTWORKEntities dc) { var Item = GetByPOSITION_ROLE_ID(POSITION_ROLE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_PRINTING_STYLE_SERVICE
{
    public static ART_M_PRINTING_STYLE GetByPRINTING_STYLE_ID(int? PRINTING_STYLE_ID, ARTWORKEntities dc) { if (PRINTING_STYLE_ID == null || PRINTING_STYLE_ID == 0) return null; else return (from p in dc.ART_M_PRINTING_STYLE where p.PRINTING_STYLE_ID == PRINTING_STYLE_ID select p).FirstOrDefault(); }
    private static int? GetChkByPRINTING_STYLE_ID(int? PRINTING_STYLE_ID, ARTWORKEntities dc) { if (PRINTING_STYLE_ID == null || PRINTING_STYLE_ID == 0) return null; else { var temp = (from p in dc.ART_M_PRINTING_STYLE where p.PRINTING_STYLE_ID == PRINTING_STYLE_ID select p.PRINTING_STYLE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_PRINTING_STYLE> GetByItem(ART_M_PRINTING_STYLE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_PRINTING_STYLE>(); else return CriteriaBy((from p in dc.ART_M_PRINTING_STYLE select p), Item).ToList(); }
    private static IQueryable<ART_M_PRINTING_STYLE> CriteriaBy(IQueryable<ART_M_PRINTING_STYLE> q, ART_M_PRINTING_STYLE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_ID)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_ID == criteria.PRINTING_STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_TYPE)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_TYPE == criteria.PRINTING_STYLE_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_DESCRIPTION)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_DESCRIPTION == criteria.PRINTING_STYLE_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.PRINTING_STYLE_ID == 0 select r); } return q; }
    public static List<ART_M_PRINTING_STYLE> GetByItemContain(ART_M_PRINTING_STYLE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_PRINTING_STYLE>(); else return CriteriaByContains((from p in dc.ART_M_PRINTING_STYLE where p.IS_ACTIVE=="X" select p), Item).ToList(); }
    private static IQueryable<ART_M_PRINTING_STYLE> CriteriaByContains(IQueryable<ART_M_PRINTING_STYLE> q, ART_M_PRINTING_STYLE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_ID)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_ID == criteria.PRINTING_STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_TYPE)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_TYPE.Contains(criteria.PRINTING_STYLE_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_DESCRIPTION)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_DESCRIPTION.Contains(criteria.PRINTING_STYLE_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.PRINTING_STYLE_ID == 0 select r); } return q; }
    public static List<ART_M_PRINTING_STYLE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_PRINTING_STYLE select p).ToList(); }
    public static void SaveOrUpdate(ART_M_PRINTING_STYLE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPRINTING_STYLE_ID(Item.PRINTING_STYLE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_PRINTING_STYLE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPRINTING_STYLE_ID(Item.PRINTING_STYLE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_PRINTING_STYLE>().Local.FirstOrDefault(f => f.PRINTING_STYLE_ID == Item.PRINTING_STYLE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_PRINTING_STYLE Item, ARTWORKEntities dc) { if (GetChkByPRINTING_STYLE_ID(Item.PRINTING_STYLE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_PRINTING_STYLE.Add(Item); dc.SaveChanges(); } else { var temp = GetByPRINTING_STYLE_ID(Item.PRINTING_STYLE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_PRINTING_STYLE>().Local.FirstOrDefault(f => f.PRINTING_STYLE_ID == Item.PRINTING_STYLE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_PRINTING_STYLE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_PRINTING_STYLE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_PRINTING_STYLE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_PRINTING_STYLE>().Local.FirstOrDefault(f => f.PRINTING_STYLE_ID == Item.PRINTING_STYLE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_PRINTING_STYLE NewItem, ART_M_PRINTING_STYLE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_PRINTING_STYLE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPRINTING_STYLE_ID(int? PRINTING_STYLE_ID, ARTWORKEntities dc) { var Item = GetByPRINTING_STYLE_ID(PRINTING_STYLE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_RECEIVE_EMAIL_NEW_CUSTOMER_SERVICE
{
    public static ART_M_RECEIVE_EMAIL_NEW_CUSTOMER GetByART_M_RECEIVE_EMAIL_ID(int? ART_M_RECEIVE_EMAIL_ID, ARTWORKEntities dc) { if (ART_M_RECEIVE_EMAIL_ID == null || ART_M_RECEIVE_EMAIL_ID == 0) return null; else return (from p in dc.ART_M_RECEIVE_EMAIL_NEW_CUSTOMER where p.ART_M_RECEIVE_EMAIL_ID == ART_M_RECEIVE_EMAIL_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_M_RECEIVE_EMAIL_ID(int? ART_M_RECEIVE_EMAIL_ID, ARTWORKEntities dc) { if (ART_M_RECEIVE_EMAIL_ID == null || ART_M_RECEIVE_EMAIL_ID == 0) return null; else { var temp = (from p in dc.ART_M_RECEIVE_EMAIL_NEW_CUSTOMER where p.ART_M_RECEIVE_EMAIL_ID == ART_M_RECEIVE_EMAIL_ID select p.ART_M_RECEIVE_EMAIL_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_RECEIVE_EMAIL_NEW_CUSTOMER> GetByItem(ART_M_RECEIVE_EMAIL_NEW_CUSTOMER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_RECEIVE_EMAIL_NEW_CUSTOMER>(); else return CriteriaBy((from p in dc.ART_M_RECEIVE_EMAIL_NEW_CUSTOMER select p), Item).ToList(); }
    private static IQueryable<ART_M_RECEIVE_EMAIL_NEW_CUSTOMER> CriteriaBy(IQueryable<ART_M_RECEIVE_EMAIL_NEW_CUSTOMER> q, ART_M_RECEIVE_EMAIL_NEW_CUSTOMER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_RECEIVE_EMAIL_ID)) { doWork = true; q = (from r in q where r.ART_M_RECEIVE_EMAIL_ID == criteria.ART_M_RECEIVE_EMAIL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID == criteria.USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!doWork) { q = (from r in q where r.ART_M_RECEIVE_EMAIL_ID == 0 select r); } return q; }
    public static List<ART_M_RECEIVE_EMAIL_NEW_CUSTOMER> GetByItemContain(ART_M_RECEIVE_EMAIL_NEW_CUSTOMER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_RECEIVE_EMAIL_NEW_CUSTOMER>(); else return CriteriaByContains((from p in dc.ART_M_RECEIVE_EMAIL_NEW_CUSTOMER select p), Item).ToList(); }
    private static IQueryable<ART_M_RECEIVE_EMAIL_NEW_CUSTOMER> CriteriaByContains(IQueryable<ART_M_RECEIVE_EMAIL_NEW_CUSTOMER> q, ART_M_RECEIVE_EMAIL_NEW_CUSTOMER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_RECEIVE_EMAIL_ID)) { doWork = true; q = (from r in q where r.ART_M_RECEIVE_EMAIL_ID == criteria.ART_M_RECEIVE_EMAIL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID.ToString().Contains(criteria.USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_M_RECEIVE_EMAIL_ID == 0 select r); } return q; }
    public static List<ART_M_RECEIVE_EMAIL_NEW_CUSTOMER> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_RECEIVE_EMAIL_NEW_CUSTOMER select p).ToList(); }
    public static void SaveOrUpdate(ART_M_RECEIVE_EMAIL_NEW_CUSTOMER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_M_RECEIVE_EMAIL_ID(Item.ART_M_RECEIVE_EMAIL_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_RECEIVE_EMAIL_NEW_CUSTOMER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_M_RECEIVE_EMAIL_ID(Item.ART_M_RECEIVE_EMAIL_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_RECEIVE_EMAIL_NEW_CUSTOMER>().Local.FirstOrDefault(f => f.ART_M_RECEIVE_EMAIL_ID == Item.ART_M_RECEIVE_EMAIL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_RECEIVE_EMAIL_NEW_CUSTOMER Item, ARTWORKEntities dc) { if (GetChkByART_M_RECEIVE_EMAIL_ID(Item.ART_M_RECEIVE_EMAIL_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_RECEIVE_EMAIL_NEW_CUSTOMER.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_M_RECEIVE_EMAIL_ID(Item.ART_M_RECEIVE_EMAIL_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_RECEIVE_EMAIL_NEW_CUSTOMER>().Local.FirstOrDefault(f => f.ART_M_RECEIVE_EMAIL_ID == Item.ART_M_RECEIVE_EMAIL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_RECEIVE_EMAIL_NEW_CUSTOMER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_RECEIVE_EMAIL_NEW_CUSTOMER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_RECEIVE_EMAIL_NEW_CUSTOMER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_RECEIVE_EMAIL_NEW_CUSTOMER>().Local.FirstOrDefault(f => f.ART_M_RECEIVE_EMAIL_ID == Item.ART_M_RECEIVE_EMAIL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_RECEIVE_EMAIL_NEW_CUSTOMER NewItem, ART_M_RECEIVE_EMAIL_NEW_CUSTOMER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_RECEIVE_EMAIL_NEW_CUSTOMER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_M_RECEIVE_EMAIL_ID(int? ART_M_RECEIVE_EMAIL_ID, ARTWORKEntities dc) { var Item = GetByART_M_RECEIVE_EMAIL_ID(ART_M_RECEIVE_EMAIL_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_ROLE_SERVICE
{
    public static ART_M_ROLE GetByROLE_ID(int? ROLE_ID, ARTWORKEntities dc) { if (ROLE_ID == null || ROLE_ID == 0) return null; else return (from p in dc.ART_M_ROLE where p.ROLE_ID == ROLE_ID select p).FirstOrDefault(); }
    private static int? GetChkByROLE_ID(int? ROLE_ID, ARTWORKEntities dc) { if (ROLE_ID == null || ROLE_ID == 0) return null; else { var temp = (from p in dc.ART_M_ROLE where p.ROLE_ID == ROLE_ID select p.ROLE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_ROLE> GetByItem(ART_M_ROLE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_ROLE>(); else return CriteriaBy((from p in dc.ART_M_ROLE select p), Item).ToList(); }
    private static IQueryable<ART_M_ROLE> CriteriaBy(IQueryable<ART_M_ROLE> q, ART_M_ROLE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID)) { doWork = true; q = (from r in q where r.ROLE_ID == criteria.ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_CODE)) { doWork = true; q = (from r in q where r.ROLE_CODE == criteria.ROLE_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION == criteria.DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ROLE_ID == 0 select r); } return q; }
    public static List<ART_M_ROLE> GetByItemContain(ART_M_ROLE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_ROLE>(); else return CriteriaByContains((from p in dc.ART_M_ROLE select p), Item).ToList(); }
    private static IQueryable<ART_M_ROLE> CriteriaByContains(IQueryable<ART_M_ROLE> q, ART_M_ROLE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID)) { doWork = true; q = (from r in q where r.ROLE_ID == criteria.ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_CODE)) { doWork = true; q = (from r in q where r.ROLE_CODE.Contains(criteria.ROLE_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION.Contains(criteria.DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ROLE_ID == 0 select r); } return q; }
    public static List<ART_M_ROLE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_ROLE select p).ToList(); }
    public static void SaveOrUpdate(ART_M_ROLE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByROLE_ID(Item.ROLE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_ROLE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByROLE_ID(Item.ROLE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_ROLE>().Local.FirstOrDefault(f => f.ROLE_ID == Item.ROLE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_ROLE Item, ARTWORKEntities dc) { if (GetChkByROLE_ID(Item.ROLE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_ROLE.Add(Item); dc.SaveChanges(); } else { var temp = GetByROLE_ID(Item.ROLE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_ROLE>().Local.FirstOrDefault(f => f.ROLE_ID == Item.ROLE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_ROLE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_ROLE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_ROLE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_ROLE>().Local.FirstOrDefault(f => f.ROLE_ID == Item.ROLE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_ROLE NewItem, ART_M_ROLE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_ROLE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByROLE_ID(int? ROLE_ID, ARTWORKEntities dc) { var Item = GetByROLE_ID(ROLE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_STEP_ARTWORK_SERVICE
{
    public static ART_M_STEP_ARTWORK GetBySTEP_ARTWORK_ID(int? STEP_ARTWORK_ID, ARTWORKEntities dc) { if (STEP_ARTWORK_ID == null || STEP_ARTWORK_ID == 0) return null; else return (from p in dc.ART_M_STEP_ARTWORK where p.STEP_ARTWORK_ID == STEP_ARTWORK_ID select p).FirstOrDefault(); }
    private static int? GetChkBySTEP_ARTWORK_ID(int? STEP_ARTWORK_ID, ARTWORKEntities dc) { if (STEP_ARTWORK_ID == null || STEP_ARTWORK_ID == 0) return null; else { var temp = (from p in dc.ART_M_STEP_ARTWORK where p.STEP_ARTWORK_ID == STEP_ARTWORK_ID select p.STEP_ARTWORK_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_STEP_ARTWORK> GetByItem(ART_M_STEP_ARTWORK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_STEP_ARTWORK>(); else return CriteriaBy((from p in dc.ART_M_STEP_ARTWORK select p), Item).ToList(); }
    private static IQueryable<ART_M_STEP_ARTWORK> CriteriaBy(IQueryable<ART_M_STEP_ARTWORK> q, ART_M_STEP_ARTWORK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_ID)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_ID == criteria.STEP_ARTWORK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_CODE)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_CODE == criteria.STEP_ARTWORK_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_NAME)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_NAME == criteria.STEP_ARTWORK_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_DESCRIPTION)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_DESCRIPTION == criteria.STEP_ARTWORK_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID_RESPONSE)) { doWork = true; q = (from r in q where r.ROLE_ID_RESPONSE == criteria.ROLE_ID_RESPONSE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DURATION)) { doWork = true; q = (from r in q where r.DURATION == criteria.DURATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.DURATION_EXTEND)) { doWork = true; q = (from r in q where r.DURATION_EXTEND == criteria.DURATION_EXTEND select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.STEP_ARTWORK_ID == 0 select r); } return q; }
    public static List<ART_M_STEP_ARTWORK> GetByItemContain(ART_M_STEP_ARTWORK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_STEP_ARTWORK>(); else return CriteriaByContains((from p in dc.ART_M_STEP_ARTWORK select p), Item).ToList(); }
    private static IQueryable<ART_M_STEP_ARTWORK> CriteriaByContains(IQueryable<ART_M_STEP_ARTWORK> q, ART_M_STEP_ARTWORK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_ID)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_ID == criteria.STEP_ARTWORK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_CODE)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_CODE.Contains(criteria.STEP_ARTWORK_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_NAME)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_NAME.Contains(criteria.STEP_ARTWORK_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_DESCRIPTION)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_DESCRIPTION.Contains(criteria.STEP_ARTWORK_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.STEP_ARTWORK_ID == 0 select r); } return q; }
    public static List<ART_M_STEP_ARTWORK> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_STEP_ARTWORK select p).ToList(); }
    public static void SaveOrUpdate(ART_M_STEP_ARTWORK Item, ARTWORKEntities dc) { string Action = ""; if (GetChkBySTEP_ARTWORK_ID(Item.STEP_ARTWORK_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_STEP_ARTWORK.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetBySTEP_ARTWORK_ID(Item.STEP_ARTWORK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_STEP_ARTWORK>().Local.FirstOrDefault(f => f.STEP_ARTWORK_ID == Item.STEP_ARTWORK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_STEP_ARTWORK Item, ARTWORKEntities dc) { if (GetChkBySTEP_ARTWORK_ID(Item.STEP_ARTWORK_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_STEP_ARTWORK.Add(Item); dc.SaveChanges(); } else { var temp = GetBySTEP_ARTWORK_ID(Item.STEP_ARTWORK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_STEP_ARTWORK>().Local.FirstOrDefault(f => f.STEP_ARTWORK_ID == Item.STEP_ARTWORK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_STEP_ARTWORK Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_STEP_ARTWORK.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_STEP_ARTWORK Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_STEP_ARTWORK>().Local.FirstOrDefault(f => f.STEP_ARTWORK_ID == Item.STEP_ARTWORK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_STEP_ARTWORK NewItem, ART_M_STEP_ARTWORK OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_STEP_ARTWORK"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteBySTEP_ARTWORK_ID(int? STEP_ARTWORK_ID, ARTWORKEntities dc) { var Item = GetBySTEP_ARTWORK_ID(STEP_ARTWORK_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_STEP_MOCKUP_SERVICE
{
    public static ART_M_STEP_MOCKUP GetBySTEP_MOCKUP_ID(int? STEP_MOCKUP_ID, ARTWORKEntities dc) { if (STEP_MOCKUP_ID == null || STEP_MOCKUP_ID == 0) return null; else return (from p in dc.ART_M_STEP_MOCKUP where p.STEP_MOCKUP_ID == STEP_MOCKUP_ID select p).FirstOrDefault(); }
    private static int? GetChkBySTEP_MOCKUP_ID(int? STEP_MOCKUP_ID, ARTWORKEntities dc) { if (STEP_MOCKUP_ID == null || STEP_MOCKUP_ID == 0) return null; else { var temp = (from p in dc.ART_M_STEP_MOCKUP where p.STEP_MOCKUP_ID == STEP_MOCKUP_ID select p.STEP_MOCKUP_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_STEP_MOCKUP> GetByItem(ART_M_STEP_MOCKUP Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_STEP_MOCKUP>(); else return CriteriaBy((from p in dc.ART_M_STEP_MOCKUP select p), Item).ToList(); }
    private static IQueryable<ART_M_STEP_MOCKUP> CriteriaBy(IQueryable<ART_M_STEP_MOCKUP> q, ART_M_STEP_MOCKUP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_ID)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_ID == criteria.STEP_MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_CODE)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_CODE == criteria.STEP_MOCKUP_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_NAME)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_NAME == criteria.STEP_MOCKUP_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_DESCRIPTION)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_DESCRIPTION == criteria.STEP_MOCKUP_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID_RESPONSE)) { doWork = true; q = (from r in q where r.ROLE_ID_RESPONSE == criteria.ROLE_ID_RESPONSE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DURATION)) { doWork = true; q = (from r in q where r.DURATION == criteria.DURATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.DURATION_EXTEND)) { doWork = true; q = (from r in q where r.DURATION_EXTEND == criteria.DURATION_EXTEND select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.STEP_MOCKUP_ID == 0 select r); } return q; }
    public static List<ART_M_STEP_MOCKUP> GetByItemContain(ART_M_STEP_MOCKUP Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_STEP_MOCKUP>(); else return CriteriaByContains((from p in dc.ART_M_STEP_MOCKUP select p), Item).ToList(); }
    private static IQueryable<ART_M_STEP_MOCKUP> CriteriaByContains(IQueryable<ART_M_STEP_MOCKUP> q, ART_M_STEP_MOCKUP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_ID)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_ID == criteria.STEP_MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_CODE)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_CODE.Contains(criteria.STEP_MOCKUP_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_NAME)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_NAME.Contains(criteria.STEP_MOCKUP_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_DESCRIPTION)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_DESCRIPTION.Contains(criteria.STEP_MOCKUP_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.STEP_MOCKUP_ID == 0 select r); } return q; }
    public static List<ART_M_STEP_MOCKUP> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_STEP_MOCKUP select p).ToList(); }
    public static void SaveOrUpdate(ART_M_STEP_MOCKUP Item, ARTWORKEntities dc) { string Action = ""; if (GetChkBySTEP_MOCKUP_ID(Item.STEP_MOCKUP_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_STEP_MOCKUP.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetBySTEP_MOCKUP_ID(Item.STEP_MOCKUP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_STEP_MOCKUP>().Local.FirstOrDefault(f => f.STEP_MOCKUP_ID == Item.STEP_MOCKUP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_STEP_MOCKUP Item, ARTWORKEntities dc) { if (GetChkBySTEP_MOCKUP_ID(Item.STEP_MOCKUP_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_STEP_MOCKUP.Add(Item); dc.SaveChanges(); } else { var temp = GetBySTEP_MOCKUP_ID(Item.STEP_MOCKUP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_STEP_MOCKUP>().Local.FirstOrDefault(f => f.STEP_MOCKUP_ID == Item.STEP_MOCKUP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_STEP_MOCKUP Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_STEP_MOCKUP.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_STEP_MOCKUP Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_STEP_MOCKUP>().Local.FirstOrDefault(f => f.STEP_MOCKUP_ID == Item.STEP_MOCKUP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_STEP_MOCKUP NewItem, ART_M_STEP_MOCKUP OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_STEP_MOCKUP"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteBySTEP_MOCKUP_ID(int? STEP_MOCKUP_ID, ARTWORKEntities dc) { var Item = GetBySTEP_MOCKUP_ID(STEP_MOCKUP_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_TEMPLATE_SERVICE
{
    public static ART_M_TEMPLATE GetByTEMPLATE_ID(int? TEMPLATE_ID, ARTWORKEntities dc) { if (TEMPLATE_ID == null || TEMPLATE_ID == 0) return null; else return (from p in dc.ART_M_TEMPLATE where p.TEMPLATE_ID == TEMPLATE_ID select p).FirstOrDefault(); }
    private static int? GetChkByTEMPLATE_ID(int? TEMPLATE_ID, ARTWORKEntities dc) { if (TEMPLATE_ID == null || TEMPLATE_ID == 0) return null; else { var temp = (from p in dc.ART_M_TEMPLATE where p.TEMPLATE_ID == TEMPLATE_ID select p.TEMPLATE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_TEMPLATE> GetByItem(ART_M_TEMPLATE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_TEMPLATE>(); else return CriteriaBy((from p in dc.ART_M_TEMPLATE select p), Item).ToList(); }
    private static IQueryable<ART_M_TEMPLATE> CriteriaBy(IQueryable<ART_M_TEMPLATE> q, ART_M_TEMPLATE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.TEMPLATE_ID)) { doWork = true; q = (from r in q where r.TEMPLATE_ID == criteria.TEMPLATE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEMPLATE_NAME)) { doWork = true; q = (from r in q where r.TEMPLATE_NAME == criteria.TEMPLATE_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION == criteria.DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.TEMPLATE_ID == 0 select r); } return q; }
    public static List<ART_M_TEMPLATE> GetByItemContain(ART_M_TEMPLATE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_TEMPLATE>(); else return CriteriaByContains((from p in dc.ART_M_TEMPLATE select p), Item).ToList(); }
    private static IQueryable<ART_M_TEMPLATE> CriteriaByContains(IQueryable<ART_M_TEMPLATE> q, ART_M_TEMPLATE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.TEMPLATE_ID)) { doWork = true; q = (from r in q where r.TEMPLATE_ID == criteria.TEMPLATE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEMPLATE_NAME)) { doWork = true; q = (from r in q where r.TEMPLATE_NAME.Contains(criteria.TEMPLATE_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION.Contains(criteria.DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.TEMPLATE_ID == 0 select r); } return q; }
    public static List<ART_M_TEMPLATE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_TEMPLATE select p).ToList(); }
    public static void SaveOrUpdate(ART_M_TEMPLATE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByTEMPLATE_ID(Item.TEMPLATE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_TEMPLATE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByTEMPLATE_ID(Item.TEMPLATE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_TEMPLATE>().Local.FirstOrDefault(f => f.TEMPLATE_ID == Item.TEMPLATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_TEMPLATE Item, ARTWORKEntities dc) { if (GetChkByTEMPLATE_ID(Item.TEMPLATE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_TEMPLATE.Add(Item); dc.SaveChanges(); } else { var temp = GetByTEMPLATE_ID(Item.TEMPLATE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_TEMPLATE>().Local.FirstOrDefault(f => f.TEMPLATE_ID == Item.TEMPLATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_TEMPLATE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_TEMPLATE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_TEMPLATE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_TEMPLATE>().Local.FirstOrDefault(f => f.TEMPLATE_ID == Item.TEMPLATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_TEMPLATE NewItem, ART_M_TEMPLATE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_TEMPLATE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByTEMPLATE_ID(int? TEMPLATE_ID, ARTWORKEntities dc) { var Item = GetByTEMPLATE_ID(TEMPLATE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_USER_SERVICE
{
    public static ART_M_USER GetByUSER_ID(int? USER_ID, ARTWORKEntities dc) { if (USER_ID == null || USER_ID == 0) return null; else return (from p in dc.ART_M_USER where p.USER_ID == USER_ID select p).FirstOrDefault(); }
    private static int? GetChkByUSER_ID(int? USER_ID, ARTWORKEntities dc) { if (USER_ID == null || USER_ID == 0) return null; else { var temp = (from p in dc.ART_M_USER where p.USER_ID == USER_ID select p.USER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_USER> GetByItem(ART_M_USER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER>(); else return CriteriaBy((from p in dc.ART_M_USER select p), Item).ToList(); }
    private static IQueryable<ART_M_USER> CriteriaBy(IQueryable<ART_M_USER> q, ART_M_USER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID == criteria.USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USERNAME)) { doWork = true; q = (from r in q where r.USERNAME == criteria.USERNAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.PASSWORD)) { doWork = true; q = (from r in q where r.PASSWORD == criteria.PASSWORD select r); } if (!CheckValue.EqualsDefaultValue(criteria.TITLE)) { doWork = true; q = (from r in q where r.TITLE == criteria.TITLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.FIRST_NAME)) { doWork = true; q = (from r in q where r.FIRST_NAME == criteria.FIRST_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_NAME)) { doWork = true; q = (from r in q where r.LAST_NAME == criteria.LAST_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.EMAIL)) { doWork = true; q = (from r in q where r.EMAIL == criteria.EMAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.POSITION_ID)) { doWork = true; q = (from r in q where r.POSITION_ID == criteria.POSITION_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ADUSER)) { doWork = true; q = (from r in q where r.IS_ADUSER == criteria.IS_ADUSER select r); } if (!CheckValue.EqualsDefaultValue(criteria.VERIFY_CODE)) { doWork = true; q = (from r in q where r.VERIFY_CODE == criteria.VERIFY_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.USER_ID == 0 select r); } return q; }
    public static List<ART_M_USER> GetByItemContain(ART_M_USER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER>(); else return CriteriaByContains((from p in dc.ART_M_USER select p), Item).ToList(); }
    private static IQueryable<ART_M_USER> CriteriaByContains(IQueryable<ART_M_USER> q, ART_M_USER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID == criteria.USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USERNAME)) { doWork = true; q = (from r in q where r.USERNAME.Contains(criteria.USERNAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PASSWORD)) { doWork = true; q = (from r in q where r.PASSWORD.Contains(criteria.PASSWORD) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TITLE)) { doWork = true; q = (from r in q where r.TITLE.Contains(criteria.TITLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FIRST_NAME)) { doWork = true; q = (from r in q where r.FIRST_NAME.Contains(criteria.FIRST_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_NAME)) { doWork = true; q = (from r in q where r.LAST_NAME.Contains(criteria.LAST_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.EMAIL)) { doWork = true; q = (from r in q where r.EMAIL.Contains(criteria.EMAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ADUSER)) { doWork = true; q = (from r in q where r.IS_ADUSER.Contains(criteria.IS_ADUSER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VERIFY_CODE)) { doWork = true; q = (from r in q where r.VERIFY_CODE.Contains(criteria.VERIFY_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.USER_ID == 0 select r); } return q; }
    public static List<ART_M_USER> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_USER select p).ToList(); }
    public static void SaveOrUpdate(ART_M_USER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByUSER_ID(Item.USER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByUSER_ID(Item.USER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER>().Local.FirstOrDefault(f => f.USER_ID == Item.USER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_USER Item, ARTWORKEntities dc) { if (GetChkByUSER_ID(Item.USER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER.Add(Item); dc.SaveChanges(); } else { var temp = GetByUSER_ID(Item.USER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER>().Local.FirstOrDefault(f => f.USER_ID == Item.USER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_USER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_USER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER>().Local.FirstOrDefault(f => f.USER_ID == Item.USER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_USER NewItem, ART_M_USER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_USER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByUSER_ID(int? USER_ID, ARTWORKEntities dc) { var Item = GetByUSER_ID(USER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_USER_COMPANY_SERVICE
{
    public static ART_M_USER_COMPANY GetByART_M_USER_COMPANY_ID(int? ART_M_USER_COMPANY_ID, ARTWORKEntities dc) { if (ART_M_USER_COMPANY_ID == null || ART_M_USER_COMPANY_ID == 0) return null; else return (from p in dc.ART_M_USER_COMPANY where p.ART_M_USER_COMPANY_ID == ART_M_USER_COMPANY_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_M_USER_COMPANY_ID(int? ART_M_USER_COMPANY_ID, ARTWORKEntities dc) { if (ART_M_USER_COMPANY_ID == null || ART_M_USER_COMPANY_ID == 0) return null; else { var temp = (from p in dc.ART_M_USER_COMPANY where p.ART_M_USER_COMPANY_ID == ART_M_USER_COMPANY_ID select p.ART_M_USER_COMPANY_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_USER_COMPANY> GetByItem(ART_M_USER_COMPANY Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER_COMPANY>(); else return CriteriaBy((from p in dc.ART_M_USER_COMPANY select p), Item).ToList(); }
    private static IQueryable<ART_M_USER_COMPANY> CriteriaBy(IQueryable<ART_M_USER_COMPANY> q, ART_M_USER_COMPANY criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_USER_COMPANY_ID)) { doWork = true; q = (from r in q where r.ART_M_USER_COMPANY_ID == criteria.ART_M_USER_COMPANY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID == criteria.USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ID)) { doWork = true; q = (from r in q where r.COMPANY_ID == criteria.COMPANY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_M_USER_COMPANY_ID == 0 select r); } return q; }
    public static List<ART_M_USER_COMPANY> GetByItemContain(ART_M_USER_COMPANY Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER_COMPANY>(); else return CriteriaByContains((from p in dc.ART_M_USER_COMPANY select p), Item).ToList(); }
    private static IQueryable<ART_M_USER_COMPANY> CriteriaByContains(IQueryable<ART_M_USER_COMPANY> q, ART_M_USER_COMPANY criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_USER_COMPANY_ID)) { doWork = true; q = (from r in q where r.ART_M_USER_COMPANY_ID == criteria.ART_M_USER_COMPANY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID.ToString().Contains(criteria.USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ID)) { doWork = true; q = (from r in q where r.COMPANY_ID.ToString().Contains(criteria.COMPANY_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_M_USER_COMPANY_ID == 0 select r); } return q; }
    public static List<ART_M_USER_COMPANY> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_USER_COMPANY select p).ToList(); }
    public static void SaveOrUpdate(ART_M_USER_COMPANY Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_M_USER_COMPANY_ID(Item.ART_M_USER_COMPANY_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_COMPANY.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_M_USER_COMPANY_ID(Item.ART_M_USER_COMPANY_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_COMPANY>().Local.FirstOrDefault(f => f.ART_M_USER_COMPANY_ID == Item.ART_M_USER_COMPANY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_USER_COMPANY Item, ARTWORKEntities dc) { if (GetChkByART_M_USER_COMPANY_ID(Item.ART_M_USER_COMPANY_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_COMPANY.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_M_USER_COMPANY_ID(Item.ART_M_USER_COMPANY_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_COMPANY>().Local.FirstOrDefault(f => f.ART_M_USER_COMPANY_ID == Item.ART_M_USER_COMPANY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_USER_COMPANY Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_COMPANY.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_USER_COMPANY Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_COMPANY>().Local.FirstOrDefault(f => f.ART_M_USER_COMPANY_ID == Item.ART_M_USER_COMPANY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_USER_COMPANY NewItem, ART_M_USER_COMPANY OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_USER_COMPANY"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_M_USER_COMPANY_ID(int? ART_M_USER_COMPANY_ID, ARTWORKEntities dc) { var Item = GetByART_M_USER_COMPANY_ID(ART_M_USER_COMPANY_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_USER_CUSTOMER_SERVICE
{
    public static ART_M_USER_CUSTOMER GetByUSER_CUSTOMER_ID(int? USER_CUSTOMER_ID, ARTWORKEntities dc) { if (USER_CUSTOMER_ID == null || USER_CUSTOMER_ID == 0) return null; else return (from p in dc.ART_M_USER_CUSTOMER where p.USER_CUSTOMER_ID == USER_CUSTOMER_ID select p).FirstOrDefault(); }
    private static int? GetChkByUSER_CUSTOMER_ID(int? USER_CUSTOMER_ID, ARTWORKEntities dc) { if (USER_CUSTOMER_ID == null || USER_CUSTOMER_ID == 0) return null; else { var temp = (from p in dc.ART_M_USER_CUSTOMER where p.USER_CUSTOMER_ID == USER_CUSTOMER_ID select p.USER_CUSTOMER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_USER_CUSTOMER> GetByItem(ART_M_USER_CUSTOMER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER_CUSTOMER>(); else return CriteriaBy((from p in dc.ART_M_USER_CUSTOMER select p), Item).ToList(); }
    private static IQueryable<ART_M_USER_CUSTOMER> CriteriaBy(IQueryable<ART_M_USER_CUSTOMER> q, ART_M_USER_CUSTOMER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.USER_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.USER_CUSTOMER_ID == criteria.USER_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID == criteria.USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_ID == criteria.CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_EMAIL_TO)) { doWork = true; q = (from r in q where r.IS_EMAIL_TO == criteria.IS_EMAIL_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_EMAIL_CC)) { doWork = true; q = (from r in q where r.IS_EMAIL_CC == criteria.IS_EMAIL_CC select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.USER_CUSTOMER_ID == 0 select r); } return q; }
    public static List<ART_M_USER_CUSTOMER> GetByItemContain(ART_M_USER_CUSTOMER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER_CUSTOMER>(); else return CriteriaByContains((from p in dc.ART_M_USER_CUSTOMER select p), Item).ToList(); }
    private static IQueryable<ART_M_USER_CUSTOMER> CriteriaByContains(IQueryable<ART_M_USER_CUSTOMER> q, ART_M_USER_CUSTOMER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.USER_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.USER_CUSTOMER_ID == criteria.USER_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID.ToString().Contains(criteria.USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_ID.ToString().Contains(criteria.CUSTOMER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_EMAIL_TO)) { doWork = true; q = (from r in q where r.IS_EMAIL_TO.Contains(criteria.IS_EMAIL_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_EMAIL_CC)) { doWork = true; q = (from r in q where r.IS_EMAIL_CC.Contains(criteria.IS_EMAIL_CC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.USER_CUSTOMER_ID == 0 select r); } return q; }
    public static List<ART_M_USER_CUSTOMER> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_USER_CUSTOMER select p).ToList(); }
    public static void SaveOrUpdate(ART_M_USER_CUSTOMER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByUSER_CUSTOMER_ID(Item.USER_CUSTOMER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_CUSTOMER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByUSER_CUSTOMER_ID(Item.USER_CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_CUSTOMER>().Local.FirstOrDefault(f => f.USER_CUSTOMER_ID == Item.USER_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_USER_CUSTOMER Item, ARTWORKEntities dc) { if (GetChkByUSER_CUSTOMER_ID(Item.USER_CUSTOMER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_CUSTOMER.Add(Item); dc.SaveChanges(); } else { var temp = GetByUSER_CUSTOMER_ID(Item.USER_CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_CUSTOMER>().Local.FirstOrDefault(f => f.USER_CUSTOMER_ID == Item.USER_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_USER_CUSTOMER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_CUSTOMER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_USER_CUSTOMER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_CUSTOMER>().Local.FirstOrDefault(f => f.USER_CUSTOMER_ID == Item.USER_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_USER_CUSTOMER NewItem, ART_M_USER_CUSTOMER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_USER_CUSTOMER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByUSER_CUSTOMER_ID(int? USER_CUSTOMER_ID, ARTWORKEntities dc) { var Item = GetByUSER_CUSTOMER_ID(USER_CUSTOMER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_USER_ROLE_SERVICE
{
    public static ART_M_USER_ROLE GetByUSER_ROLE_ID(int? USER_ROLE_ID, ARTWORKEntities dc) { if (USER_ROLE_ID == null || USER_ROLE_ID == 0) return null; else return (from p in dc.ART_M_USER_ROLE where p.USER_ROLE_ID == USER_ROLE_ID select p).FirstOrDefault(); }
    private static int? GetChkByUSER_ROLE_ID(int? USER_ROLE_ID, ARTWORKEntities dc) { if (USER_ROLE_ID == null || USER_ROLE_ID == 0) return null; else { var temp = (from p in dc.ART_M_USER_ROLE where p.USER_ROLE_ID == USER_ROLE_ID select p.USER_ROLE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_USER_ROLE> GetByItem(ART_M_USER_ROLE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER_ROLE>(); else return CriteriaBy((from p in dc.ART_M_USER_ROLE select p), Item).ToList(); }
    private static IQueryable<ART_M_USER_ROLE> CriteriaBy(IQueryable<ART_M_USER_ROLE> q, ART_M_USER_ROLE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.USER_ROLE_ID)) { doWork = true; q = (from r in q where r.USER_ROLE_ID == criteria.USER_ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID == criteria.USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID)) { doWork = true; q = (from r in q where r.ROLE_ID == criteria.ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.USER_ROLE_ID == 0 select r); } return q; }
    public static List<ART_M_USER_ROLE> GetByItemContain(ART_M_USER_ROLE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER_ROLE>(); else return CriteriaByContains((from p in dc.ART_M_USER_ROLE select p), Item).ToList(); }
    private static IQueryable<ART_M_USER_ROLE> CriteriaByContains(IQueryable<ART_M_USER_ROLE> q, ART_M_USER_ROLE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.USER_ROLE_ID)) { doWork = true; q = (from r in q where r.USER_ROLE_ID == criteria.USER_ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID.ToString().Contains(criteria.USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID)) { doWork = true; q = (from r in q where r.ROLE_ID.ToString().Contains(criteria.ROLE_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.USER_ROLE_ID == 0 select r); } return q; }
    public static List<ART_M_USER_ROLE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_USER_ROLE select p).ToList(); }
    public static void SaveOrUpdate(ART_M_USER_ROLE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByUSER_ROLE_ID(Item.USER_ROLE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_ROLE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByUSER_ROLE_ID(Item.USER_ROLE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_ROLE>().Local.FirstOrDefault(f => f.USER_ROLE_ID == Item.USER_ROLE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_USER_ROLE Item, ARTWORKEntities dc) { if (GetChkByUSER_ROLE_ID(Item.USER_ROLE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_ROLE.Add(Item); dc.SaveChanges(); } else { var temp = GetByUSER_ROLE_ID(Item.USER_ROLE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_ROLE>().Local.FirstOrDefault(f => f.USER_ROLE_ID == Item.USER_ROLE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_USER_ROLE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_ROLE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_USER_ROLE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_ROLE>().Local.FirstOrDefault(f => f.USER_ROLE_ID == Item.USER_ROLE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_USER_ROLE NewItem, ART_M_USER_ROLE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_USER_ROLE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByUSER_ROLE_ID(int? USER_ROLE_ID, ARTWORKEntities dc) { var Item = GetByUSER_ROLE_ID(USER_ROLE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_USER_TYPE_OF_PRODUCT_SERVICE
{
    public static ART_M_USER_TYPE_OF_PRODUCT GetByART_M_USER_TYPE_OF_PRODUCT_ID(int? ART_M_USER_TYPE_OF_PRODUCT_ID, ARTWORKEntities dc) { if (ART_M_USER_TYPE_OF_PRODUCT_ID == null || ART_M_USER_TYPE_OF_PRODUCT_ID == 0) return null; else return (from p in dc.ART_M_USER_TYPE_OF_PRODUCT where p.ART_M_USER_TYPE_OF_PRODUCT_ID == ART_M_USER_TYPE_OF_PRODUCT_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_M_USER_TYPE_OF_PRODUCT_ID(int? ART_M_USER_TYPE_OF_PRODUCT_ID, ARTWORKEntities dc) { if (ART_M_USER_TYPE_OF_PRODUCT_ID == null || ART_M_USER_TYPE_OF_PRODUCT_ID == 0) return null; else { var temp = (from p in dc.ART_M_USER_TYPE_OF_PRODUCT where p.ART_M_USER_TYPE_OF_PRODUCT_ID == ART_M_USER_TYPE_OF_PRODUCT_ID select p.ART_M_USER_TYPE_OF_PRODUCT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_USER_TYPE_OF_PRODUCT> GetByItem(ART_M_USER_TYPE_OF_PRODUCT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER_TYPE_OF_PRODUCT>(); else return CriteriaBy((from p in dc.ART_M_USER_TYPE_OF_PRODUCT select p), Item).ToList(); }
    private static IQueryable<ART_M_USER_TYPE_OF_PRODUCT> CriteriaBy(IQueryable<ART_M_USER_TYPE_OF_PRODUCT> q, ART_M_USER_TYPE_OF_PRODUCT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_USER_TYPE_OF_PRODUCT_ID)) { doWork = true; q = (from r in q where r.ART_M_USER_TYPE_OF_PRODUCT_ID == criteria.ART_M_USER_TYPE_OF_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID == criteria.USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_PRODUCT_ID)) { doWork = true; q = (from r in q where r.TYPE_OF_PRODUCT_ID == criteria.TYPE_OF_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_M_USER_TYPE_OF_PRODUCT_ID == 0 select r); } return q; }
    public static List<ART_M_USER_TYPE_OF_PRODUCT> GetByItemContain(ART_M_USER_TYPE_OF_PRODUCT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER_TYPE_OF_PRODUCT>(); else return CriteriaByContains((from p in dc.ART_M_USER_TYPE_OF_PRODUCT select p), Item).ToList(); }
    private static IQueryable<ART_M_USER_TYPE_OF_PRODUCT> CriteriaByContains(IQueryable<ART_M_USER_TYPE_OF_PRODUCT> q, ART_M_USER_TYPE_OF_PRODUCT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_USER_TYPE_OF_PRODUCT_ID)) { doWork = true; q = (from r in q where r.ART_M_USER_TYPE_OF_PRODUCT_ID == criteria.ART_M_USER_TYPE_OF_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID.ToString().Contains(criteria.USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_PRODUCT_ID)) { doWork = true; q = (from r in q where r.TYPE_OF_PRODUCT_ID.ToString().Contains(criteria.TYPE_OF_PRODUCT_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_M_USER_TYPE_OF_PRODUCT_ID == 0 select r); } return q; }
    public static List<ART_M_USER_TYPE_OF_PRODUCT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_USER_TYPE_OF_PRODUCT select p).ToList(); }
    public static void SaveOrUpdate(ART_M_USER_TYPE_OF_PRODUCT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_M_USER_TYPE_OF_PRODUCT_ID(Item.ART_M_USER_TYPE_OF_PRODUCT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_TYPE_OF_PRODUCT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_M_USER_TYPE_OF_PRODUCT_ID(Item.ART_M_USER_TYPE_OF_PRODUCT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_TYPE_OF_PRODUCT>().Local.FirstOrDefault(f => f.ART_M_USER_TYPE_OF_PRODUCT_ID == Item.ART_M_USER_TYPE_OF_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_USER_TYPE_OF_PRODUCT Item, ARTWORKEntities dc) { if (GetChkByART_M_USER_TYPE_OF_PRODUCT_ID(Item.ART_M_USER_TYPE_OF_PRODUCT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_TYPE_OF_PRODUCT.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_M_USER_TYPE_OF_PRODUCT_ID(Item.ART_M_USER_TYPE_OF_PRODUCT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_TYPE_OF_PRODUCT>().Local.FirstOrDefault(f => f.ART_M_USER_TYPE_OF_PRODUCT_ID == Item.ART_M_USER_TYPE_OF_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_USER_TYPE_OF_PRODUCT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_TYPE_OF_PRODUCT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_USER_TYPE_OF_PRODUCT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_TYPE_OF_PRODUCT>().Local.FirstOrDefault(f => f.ART_M_USER_TYPE_OF_PRODUCT_ID == Item.ART_M_USER_TYPE_OF_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_USER_TYPE_OF_PRODUCT NewItem, ART_M_USER_TYPE_OF_PRODUCT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_USER_TYPE_OF_PRODUCT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_M_USER_TYPE_OF_PRODUCT_ID(int? ART_M_USER_TYPE_OF_PRODUCT_ID, ARTWORKEntities dc) { var Item = GetByART_M_USER_TYPE_OF_PRODUCT_ID(ART_M_USER_TYPE_OF_PRODUCT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_USER_UPPER_LEVEL_SERVICE
{
    public static ART_M_USER_UPPER_LEVEL GetByART_M_USER_UPPER_LEVEL_ID(int? ART_M_USER_UPPER_LEVEL_ID, ARTWORKEntities dc) { if (ART_M_USER_UPPER_LEVEL_ID == null || ART_M_USER_UPPER_LEVEL_ID == 0) return null; else return (from p in dc.ART_M_USER_UPPER_LEVEL where p.ART_M_USER_UPPER_LEVEL_ID == ART_M_USER_UPPER_LEVEL_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_M_USER_UPPER_LEVEL_ID(int? ART_M_USER_UPPER_LEVEL_ID, ARTWORKEntities dc) { if (ART_M_USER_UPPER_LEVEL_ID == null || ART_M_USER_UPPER_LEVEL_ID == 0) return null; else { var temp = (from p in dc.ART_M_USER_UPPER_LEVEL where p.ART_M_USER_UPPER_LEVEL_ID == ART_M_USER_UPPER_LEVEL_ID select p.ART_M_USER_UPPER_LEVEL_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_USER_UPPER_LEVEL> GetByItem(ART_M_USER_UPPER_LEVEL Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER_UPPER_LEVEL>(); else return CriteriaBy((from p in dc.ART_M_USER_UPPER_LEVEL select p), Item).ToList(); }
    private static IQueryable<ART_M_USER_UPPER_LEVEL> CriteriaBy(IQueryable<ART_M_USER_UPPER_LEVEL> q, ART_M_USER_UPPER_LEVEL criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_USER_UPPER_LEVEL_ID)) { doWork = true; q = (from r in q where r.ART_M_USER_UPPER_LEVEL_ID == criteria.ART_M_USER_UPPER_LEVEL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID == criteria.USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPPER_USER_ID)) { doWork = true; q = (from r in q where r.UPPER_USER_ID == criteria.UPPER_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_M_USER_UPPER_LEVEL_ID == 0 select r); } return q; }
    public static List<ART_M_USER_UPPER_LEVEL> GetByItemContain(ART_M_USER_UPPER_LEVEL Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER_UPPER_LEVEL>(); else return CriteriaByContains((from p in dc.ART_M_USER_UPPER_LEVEL select p), Item).ToList(); }
    private static IQueryable<ART_M_USER_UPPER_LEVEL> CriteriaByContains(IQueryable<ART_M_USER_UPPER_LEVEL> q, ART_M_USER_UPPER_LEVEL criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_USER_UPPER_LEVEL_ID)) { doWork = true; q = (from r in q where r.ART_M_USER_UPPER_LEVEL_ID == criteria.ART_M_USER_UPPER_LEVEL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID.ToString().Contains(criteria.USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPPER_USER_ID)) { doWork = true; q = (from r in q where r.UPPER_USER_ID.ToString().Contains(criteria.UPPER_USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_M_USER_UPPER_LEVEL_ID == 0 select r); } return q; }
    public static List<ART_M_USER_UPPER_LEVEL> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_USER_UPPER_LEVEL select p).ToList(); }
    public static void SaveOrUpdate(ART_M_USER_UPPER_LEVEL Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_M_USER_UPPER_LEVEL_ID(Item.ART_M_USER_UPPER_LEVEL_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_UPPER_LEVEL.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_M_USER_UPPER_LEVEL_ID(Item.ART_M_USER_UPPER_LEVEL_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_UPPER_LEVEL>().Local.FirstOrDefault(f => f.ART_M_USER_UPPER_LEVEL_ID == Item.ART_M_USER_UPPER_LEVEL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_USER_UPPER_LEVEL Item, ARTWORKEntities dc) { if (GetChkByART_M_USER_UPPER_LEVEL_ID(Item.ART_M_USER_UPPER_LEVEL_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_UPPER_LEVEL.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_M_USER_UPPER_LEVEL_ID(Item.ART_M_USER_UPPER_LEVEL_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_UPPER_LEVEL>().Local.FirstOrDefault(f => f.ART_M_USER_UPPER_LEVEL_ID == Item.ART_M_USER_UPPER_LEVEL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_USER_UPPER_LEVEL Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_UPPER_LEVEL.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_USER_UPPER_LEVEL Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_UPPER_LEVEL>().Local.FirstOrDefault(f => f.ART_M_USER_UPPER_LEVEL_ID == Item.ART_M_USER_UPPER_LEVEL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_USER_UPPER_LEVEL NewItem, ART_M_USER_UPPER_LEVEL OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_USER_UPPER_LEVEL"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_M_USER_UPPER_LEVEL_ID(int? ART_M_USER_UPPER_LEVEL_ID, ARTWORKEntities dc) { var Item = GetByART_M_USER_UPPER_LEVEL_ID(ART_M_USER_UPPER_LEVEL_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_USER_VENDOR_SERVICE
{
    public static ART_M_USER_VENDOR GetByUSER_VENDOR_ID(int? USER_VENDOR_ID, ARTWORKEntities dc) { if (USER_VENDOR_ID == null || USER_VENDOR_ID == 0) return null; else return (from p in dc.ART_M_USER_VENDOR where p.USER_VENDOR_ID == USER_VENDOR_ID select p).FirstOrDefault(); }
    private static int? GetChkByUSER_VENDOR_ID(int? USER_VENDOR_ID, ARTWORKEntities dc) { if (USER_VENDOR_ID == null || USER_VENDOR_ID == 0) return null; else { var temp = (from p in dc.ART_M_USER_VENDOR where p.USER_VENDOR_ID == USER_VENDOR_ID select p.USER_VENDOR_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_USER_VENDOR> GetByItem(ART_M_USER_VENDOR Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER_VENDOR>(); else return CriteriaBy((from p in dc.ART_M_USER_VENDOR select p), Item).ToList(); }
    private static IQueryable<ART_M_USER_VENDOR> CriteriaBy(IQueryable<ART_M_USER_VENDOR> q, ART_M_USER_VENDOR criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.USER_VENDOR_ID)) { doWork = true; q = (from r in q where r.USER_VENDOR_ID == criteria.USER_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID == criteria.USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_ID)) { doWork = true; q = (from r in q where r.VENDOR_ID == criteria.VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_EMAIL_TO)) { doWork = true; q = (from r in q where r.IS_EMAIL_TO == criteria.IS_EMAIL_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_EMAIL_CC)) { doWork = true; q = (from r in q where r.IS_EMAIL_CC == criteria.IS_EMAIL_CC select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.USER_VENDOR_ID == 0 select r); } return q; }
    public static List<ART_M_USER_VENDOR> GetByItemContain(ART_M_USER_VENDOR Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_USER_VENDOR>(); else return CriteriaByContains((from p in dc.ART_M_USER_VENDOR select p), Item).ToList(); }
    private static IQueryable<ART_M_USER_VENDOR> CriteriaByContains(IQueryable<ART_M_USER_VENDOR> q, ART_M_USER_VENDOR criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.USER_VENDOR_ID)) { doWork = true; q = (from r in q where r.USER_VENDOR_ID == criteria.USER_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID.ToString().Contains(criteria.USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_ID)) { doWork = true; q = (from r in q where r.VENDOR_ID.ToString().Contains(criteria.VENDOR_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_EMAIL_TO)) { doWork = true; q = (from r in q where r.IS_EMAIL_TO.Contains(criteria.IS_EMAIL_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_EMAIL_CC)) { doWork = true; q = (from r in q where r.IS_EMAIL_CC.Contains(criteria.IS_EMAIL_CC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.USER_VENDOR_ID == 0 select r); } return q; }
    public static List<ART_M_USER_VENDOR> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_USER_VENDOR select p).ToList(); }
    public static void SaveOrUpdate(ART_M_USER_VENDOR Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByUSER_VENDOR_ID(Item.USER_VENDOR_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_VENDOR.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByUSER_VENDOR_ID(Item.USER_VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_VENDOR>().Local.FirstOrDefault(f => f.USER_VENDOR_ID == Item.USER_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_USER_VENDOR Item, ARTWORKEntities dc) { if (GetChkByUSER_VENDOR_ID(Item.USER_VENDOR_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_VENDOR.Add(Item); dc.SaveChanges(); } else { var temp = GetByUSER_VENDOR_ID(Item.USER_VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_VENDOR>().Local.FirstOrDefault(f => f.USER_VENDOR_ID == Item.USER_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_USER_VENDOR Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_USER_VENDOR.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_USER_VENDOR Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_USER_VENDOR>().Local.FirstOrDefault(f => f.USER_VENDOR_ID == Item.USER_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_USER_VENDOR NewItem, ART_M_USER_VENDOR OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_USER_VENDOR"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByUSER_VENDOR_ID(int? USER_VENDOR_ID, ARTWORKEntities dc) { var Item = GetByUSER_VENDOR_ID(USER_VENDOR_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_M_VENDOR_MATGROUP_SERVICE
{
    public static ART_M_VENDOR_MATGROUP GetByART_M_VENDOR_MATGROUP_ID(int? ART_M_VENDOR_MATGROUP_ID, ARTWORKEntities dc) { if (ART_M_VENDOR_MATGROUP_ID == null || ART_M_VENDOR_MATGROUP_ID == 0) return null; else return (from p in dc.ART_M_VENDOR_MATGROUP where p.ART_M_VENDOR_MATGROUP_ID == ART_M_VENDOR_MATGROUP_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_M_VENDOR_MATGROUP_ID(int? ART_M_VENDOR_MATGROUP_ID, ARTWORKEntities dc) { if (ART_M_VENDOR_MATGROUP_ID == null || ART_M_VENDOR_MATGROUP_ID == 0) return null; else { var temp = (from p in dc.ART_M_VENDOR_MATGROUP where p.ART_M_VENDOR_MATGROUP_ID == ART_M_VENDOR_MATGROUP_ID select p.ART_M_VENDOR_MATGROUP_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_M_VENDOR_MATGROUP> GetByItem(ART_M_VENDOR_MATGROUP Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_VENDOR_MATGROUP>(); else return CriteriaBy((from p in dc.ART_M_VENDOR_MATGROUP select p), Item).ToList(); }
    private static IQueryable<ART_M_VENDOR_MATGROUP> CriteriaBy(IQueryable<ART_M_VENDOR_MATGROUP> q, ART_M_VENDOR_MATGROUP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_VENDOR_MATGROUP_ID)) { doWork = true; q = (from r in q where r.ART_M_VENDOR_MATGROUP_ID == criteria.ART_M_VENDOR_MATGROUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_ID)) { doWork = true; q = (from r in q where r.VENDOR_ID == criteria.VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATGROUP_ID)) { doWork = true; q = (from r in q where r.MATGROUP_ID == criteria.MATGROUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_M_VENDOR_MATGROUP_ID == 0 select r); } return q; }
    public static List<ART_M_VENDOR_MATGROUP> GetByItemContain(ART_M_VENDOR_MATGROUP Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_M_VENDOR_MATGROUP>(); else return CriteriaByContains((from p in dc.ART_M_VENDOR_MATGROUP select p), Item).ToList(); }
    private static IQueryable<ART_M_VENDOR_MATGROUP> CriteriaByContains(IQueryable<ART_M_VENDOR_MATGROUP> q, ART_M_VENDOR_MATGROUP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_M_VENDOR_MATGROUP_ID)) { doWork = true; q = (from r in q where r.ART_M_VENDOR_MATGROUP_ID == criteria.ART_M_VENDOR_MATGROUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_ID)) { doWork = true; q = (from r in q where r.VENDOR_ID.ToString().Contains(criteria.VENDOR_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATGROUP_ID)) { doWork = true; q = (from r in q where r.MATGROUP_ID.ToString().Contains(criteria.MATGROUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_M_VENDOR_MATGROUP_ID == 0 select r); } return q; }
    public static List<ART_M_VENDOR_MATGROUP> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_M_VENDOR_MATGROUP select p).ToList(); }
    public static void SaveOrUpdate(ART_M_VENDOR_MATGROUP Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_M_VENDOR_MATGROUP_ID(Item.ART_M_VENDOR_MATGROUP_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_VENDOR_MATGROUP.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_M_VENDOR_MATGROUP_ID(Item.ART_M_VENDOR_MATGROUP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_VENDOR_MATGROUP>().Local.FirstOrDefault(f => f.ART_M_VENDOR_MATGROUP_ID == Item.ART_M_VENDOR_MATGROUP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_M_VENDOR_MATGROUP Item, ARTWORKEntities dc) { if (GetChkByART_M_VENDOR_MATGROUP_ID(Item.ART_M_VENDOR_MATGROUP_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_VENDOR_MATGROUP.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_M_VENDOR_MATGROUP_ID(Item.ART_M_VENDOR_MATGROUP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_VENDOR_MATGROUP>().Local.FirstOrDefault(f => f.ART_M_VENDOR_MATGROUP_ID == Item.ART_M_VENDOR_MATGROUP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_M_VENDOR_MATGROUP Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_M_VENDOR_MATGROUP.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_M_VENDOR_MATGROUP Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_M_VENDOR_MATGROUP>().Local.FirstOrDefault(f => f.ART_M_VENDOR_MATGROUP_ID == Item.ART_M_VENDOR_MATGROUP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_M_VENDOR_MATGROUP NewItem, ART_M_VENDOR_MATGROUP OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_M_VENDOR_MATGROUP"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_M_VENDOR_MATGROUP_ID(int? ART_M_VENDOR_MATGROUP_ID, ARTWORKEntities dc) { var Item = GetByART_M_VENDOR_MATGROUP_ID(ART_M_VENDOR_MATGROUP_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_SYS_ACTION_SERVICE
{
    public static ART_SYS_ACTION GetByACTION_ID(int? ACTION_ID, ARTWORKEntities dc) { if (ACTION_ID == null || ACTION_ID == 0) return null; else return (from p in dc.ART_SYS_ACTION where p.ACTION_ID == ACTION_ID select p).FirstOrDefault(); }
    private static int? GetChkByACTION_ID(int? ACTION_ID, ARTWORKEntities dc) { if (ACTION_ID == null || ACTION_ID == 0) return null; else { var temp = (from p in dc.ART_SYS_ACTION where p.ACTION_ID == ACTION_ID select p.ACTION_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_SYS_ACTION> GetByItem(ART_SYS_ACTION Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_SYS_ACTION>(); else return CriteriaBy((from p in dc.ART_SYS_ACTION select p), Item).ToList(); }
    private static IQueryable<ART_SYS_ACTION> CriteriaBy(IQueryable<ART_SYS_ACTION> q, ART_SYS_ACTION criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ACTION_ID)) { doWork = true; q = (from r in q where r.ACTION_ID == criteria.ACTION_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_NAME)) { doWork = true; q = (from r in q where r.ACTION_NAME == criteria.ACTION_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ACTION_ID == 0 select r); } return q; }
    public static List<ART_SYS_ACTION> GetByItemContain(ART_SYS_ACTION Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_SYS_ACTION>(); else return CriteriaByContains((from p in dc.ART_SYS_ACTION select p), Item).ToList(); }
    private static IQueryable<ART_SYS_ACTION> CriteriaByContains(IQueryable<ART_SYS_ACTION> q, ART_SYS_ACTION criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ACTION_ID)) { doWork = true; q = (from r in q where r.ACTION_ID == criteria.ACTION_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_NAME)) { doWork = true; q = (from r in q where r.ACTION_NAME.Contains(criteria.ACTION_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ACTION_ID == 0 select r); } return q; }
    public static List<ART_SYS_ACTION> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_SYS_ACTION select p).ToList(); }
    public static void SaveOrUpdate(ART_SYS_ACTION Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByACTION_ID(Item.ACTION_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_ACTION.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByACTION_ID(Item.ACTION_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_ACTION>().Local.FirstOrDefault(f => f.ACTION_ID == Item.ACTION_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_SYS_ACTION Item, ARTWORKEntities dc) { if (GetChkByACTION_ID(Item.ACTION_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_ACTION.Add(Item); dc.SaveChanges(); } else { var temp = GetByACTION_ID(Item.ACTION_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_ACTION>().Local.FirstOrDefault(f => f.ACTION_ID == Item.ACTION_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_SYS_ACTION Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_ACTION.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_SYS_ACTION Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_ACTION>().Local.FirstOrDefault(f => f.ACTION_ID == Item.ACTION_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_SYS_ACTION NewItem, ART_SYS_ACTION OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_SYS_ACTION"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByACTION_ID(int? ACTION_ID, ARTWORKEntities dc) { var Item = GetByACTION_ID(ACTION_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_SYS_LOG_SERVICE
{
    public static ART_SYS_LOG GetByLOG_ID(int? LOG_ID, ARTWORKEntities dc) { if (LOG_ID == null || LOG_ID == 0) return null; else return (from p in dc.ART_SYS_LOG where p.LOG_ID == LOG_ID select p).FirstOrDefault(); }
    private static int? GetChkByLOG_ID(int? LOG_ID, ARTWORKEntities dc) { if (LOG_ID == null || LOG_ID == 0) return null; else { var temp = (from p in dc.ART_SYS_LOG where p.LOG_ID == LOG_ID select p.LOG_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_SYS_LOG> GetByItem(ART_SYS_LOG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_SYS_LOG>(); else return CriteriaBy((from p in dc.ART_SYS_LOG select p), Item).ToList(); }
    private static IQueryable<ART_SYS_LOG> CriteriaBy(IQueryable<ART_SYS_LOG> q, ART_SYS_LOG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.LOG_ID)) { doWork = true; q = (from r in q where r.LOG_ID == criteria.LOG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TABLE_NAME)) { doWork = true; q = (from r in q where r.TABLE_NAME == criteria.TABLE_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION)) { doWork = true; q = (from r in q where r.ACTION == criteria.ACTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NEW_VALUE)) { doWork = true; q = (from r in q where r.NEW_VALUE == criteria.NEW_VALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_VALUE)) { doWork = true; q = (from r in q where r.OLD_VALUE == criteria.OLD_VALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.ERROR_MSG)) { doWork = true; q = (from r in q where r.ERROR_MSG == criteria.ERROR_MSG select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.LOG_ID == 0 select r); } return q; }
    public static List<ART_SYS_LOG> GetByItemContain(ART_SYS_LOG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_SYS_LOG>(); else return CriteriaByContains((from p in dc.ART_SYS_LOG select p), Item).ToList(); }
    private static IQueryable<ART_SYS_LOG> CriteriaByContains(IQueryable<ART_SYS_LOG> q, ART_SYS_LOG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.LOG_ID)) { doWork = true; q = (from r in q where r.LOG_ID == criteria.LOG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TABLE_NAME)) { doWork = true; q = (from r in q where r.TABLE_NAME.Contains(criteria.TABLE_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION)) { doWork = true; q = (from r in q where r.ACTION.Contains(criteria.ACTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NEW_VALUE)) { doWork = true; q = (from r in q where r.NEW_VALUE.Contains(criteria.NEW_VALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_VALUE)) { doWork = true; q = (from r in q where r.OLD_VALUE.Contains(criteria.OLD_VALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ERROR_MSG)) { doWork = true; q = (from r in q where r.ERROR_MSG.Contains(criteria.ERROR_MSG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.LOG_ID == 0 select r); } return q; }
    public static List<ART_SYS_LOG> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_SYS_LOG select p).ToList(); }
    public static void SaveOrUpdate(ART_SYS_LOG Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByLOG_ID(Item.LOG_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByLOG_ID(Item.LOG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_LOG>().Local.FirstOrDefault(f => f.LOG_ID == Item.LOG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_SYS_LOG Item, ARTWORKEntities dc) { if (GetChkByLOG_ID(Item.LOG_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); } else { var temp = GetByLOG_ID(Item.LOG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_LOG>().Local.FirstOrDefault(f => f.LOG_ID == Item.LOG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_SYS_LOG Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_SYS_LOG Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_LOG>().Local.FirstOrDefault(f => f.LOG_ID == Item.LOG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_SYS_LOG NewItem, ART_SYS_LOG OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_SYS_LOG"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByLOG_ID(int? LOG_ID, ARTWORKEntities dc) { var Item = GetByLOG_ID(LOG_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_SYS_LOG_EMAIL_SERVICE
{
    public static ART_SYS_LOG_EMAIL GetByLOG_EMAIL_ID(int? LOG_EMAIL_ID, ARTWORKEntities dc) { if (LOG_EMAIL_ID == null || LOG_EMAIL_ID == 0) return null; else return (from p in dc.ART_SYS_LOG_EMAIL where p.LOG_EMAIL_ID == LOG_EMAIL_ID select p).FirstOrDefault(); }
    private static int? GetChkByLOG_EMAIL_ID(int? LOG_EMAIL_ID, ARTWORKEntities dc) { if (LOG_EMAIL_ID == null || LOG_EMAIL_ID == 0) return null; else { var temp = (from p in dc.ART_SYS_LOG_EMAIL where p.LOG_EMAIL_ID == LOG_EMAIL_ID select p.LOG_EMAIL_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_SYS_LOG_EMAIL> GetByItem(ART_SYS_LOG_EMAIL Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_SYS_LOG_EMAIL>(); else return CriteriaBy((from p in dc.ART_SYS_LOG_EMAIL select p), Item).ToList(); }
    private static IQueryable<ART_SYS_LOG_EMAIL> CriteriaBy(IQueryable<ART_SYS_LOG_EMAIL> q, ART_SYS_LOG_EMAIL criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.LOG_EMAIL_ID)) { doWork = true; q = (from r in q where r.LOG_EMAIL_ID == criteria.LOG_EMAIL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.EMAIL_TEMPLATE_CODE)) { doWork = true; q = (from r in q where r.EMAIL_TEMPLATE_CODE == criteria.EMAIL_TEMPLATE_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SUBJECT)) { doWork = true; q = (from r in q where r.SUBJECT == criteria.SUBJECT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEND_FROM)) { doWork = true; q = (from r in q where r.SEND_FROM == criteria.SEND_FROM select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEND_TO)) { doWork = true; q = (from r in q where r.SEND_TO == criteria.SEND_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.CC)) { doWork = true; q = (from r in q where r.CC == criteria.CC select r); } if (!CheckValue.EqualsDefaultValue(criteria.BODY)) { doWork = true; q = (from r in q where r.BODY == criteria.BODY select r); } if (!CheckValue.EqualsDefaultValue(criteria.STATUS)) { doWork = true; q = (from r in q where r.STATUS == criteria.STATUS select r); } if (!CheckValue.EqualsDefaultValue(criteria.MSG)) { doWork = true; q = (from r in q where r.MSG == criteria.MSG select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.LOG_EMAIL_ID == 0 select r); } return q; }
    public static List<ART_SYS_LOG_EMAIL> GetByItemContain(ART_SYS_LOG_EMAIL Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_SYS_LOG_EMAIL>(); else return CriteriaByContains((from p in dc.ART_SYS_LOG_EMAIL select p), Item).ToList(); }
    private static IQueryable<ART_SYS_LOG_EMAIL> CriteriaByContains(IQueryable<ART_SYS_LOG_EMAIL> q, ART_SYS_LOG_EMAIL criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.LOG_EMAIL_ID)) { doWork = true; q = (from r in q where r.LOG_EMAIL_ID == criteria.LOG_EMAIL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.EMAIL_TEMPLATE_CODE)) { doWork = true; q = (from r in q where r.EMAIL_TEMPLATE_CODE.Contains(criteria.EMAIL_TEMPLATE_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SUBJECT)) { doWork = true; q = (from r in q where r.SUBJECT.Contains(criteria.SUBJECT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEND_FROM)) { doWork = true; q = (from r in q where r.SEND_FROM.Contains(criteria.SEND_FROM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEND_TO)) { doWork = true; q = (from r in q where r.SEND_TO.Contains(criteria.SEND_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CC)) { doWork = true; q = (from r in q where r.CC.Contains(criteria.CC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BODY)) { doWork = true; q = (from r in q where r.BODY.Contains(criteria.BODY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STATUS)) { doWork = true; q = (from r in q where r.STATUS.Contains(criteria.STATUS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MSG)) { doWork = true; q = (from r in q where r.MSG.Contains(criteria.MSG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.LOG_EMAIL_ID == 0 select r); } return q; }
    public static List<ART_SYS_LOG_EMAIL> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_SYS_LOG_EMAIL select p).ToList(); }
    public static void SaveOrUpdate(ART_SYS_LOG_EMAIL Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByLOG_EMAIL_ID(Item.LOG_EMAIL_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_LOG_EMAIL.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByLOG_EMAIL_ID(Item.LOG_EMAIL_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_LOG_EMAIL>().Local.FirstOrDefault(f => f.LOG_EMAIL_ID == Item.LOG_EMAIL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_SYS_LOG_EMAIL Item, ARTWORKEntities dc) { if (GetChkByLOG_EMAIL_ID(Item.LOG_EMAIL_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_LOG_EMAIL.Add(Item); dc.SaveChanges(); } else { var temp = GetByLOG_EMAIL_ID(Item.LOG_EMAIL_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_LOG_EMAIL>().Local.FirstOrDefault(f => f.LOG_EMAIL_ID == Item.LOG_EMAIL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_SYS_LOG_EMAIL Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_LOG_EMAIL.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_SYS_LOG_EMAIL Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_LOG_EMAIL>().Local.FirstOrDefault(f => f.LOG_EMAIL_ID == Item.LOG_EMAIL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_SYS_LOG_EMAIL NewItem, ART_SYS_LOG_EMAIL OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_SYS_LOG_EMAIL"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByLOG_EMAIL_ID(int? LOG_EMAIL_ID, ARTWORKEntities dc) { var Item = GetByLOG_EMAIL_ID(LOG_EMAIL_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_SYS_LOG_INTERFACE_SERVICE
{
    public static ART_SYS_LOG_INTERFACE GetByLOG_INTERFACE_ID(int? LOG_INTERFACE_ID, ARTWORKEntities dc) { if (LOG_INTERFACE_ID == null || LOG_INTERFACE_ID == 0) return null; else return (from p in dc.ART_SYS_LOG_INTERFACE where p.LOG_INTERFACE_ID == LOG_INTERFACE_ID select p).FirstOrDefault(); }
    private static int? GetChkByLOG_INTERFACE_ID(int? LOG_INTERFACE_ID, ARTWORKEntities dc) { if (LOG_INTERFACE_ID == null || LOG_INTERFACE_ID == 0) return null; else { var temp = (from p in dc.ART_SYS_LOG_INTERFACE where p.LOG_INTERFACE_ID == LOG_INTERFACE_ID select p.LOG_INTERFACE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_SYS_LOG_INTERFACE> GetByItem(ART_SYS_LOG_INTERFACE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_SYS_LOG_INTERFACE>(); else return CriteriaBy((from p in dc.ART_SYS_LOG_INTERFACE select p), Item).ToList(); }
    private static IQueryable<ART_SYS_LOG_INTERFACE> CriteriaBy(IQueryable<ART_SYS_LOG_INTERFACE> q, ART_SYS_LOG_INTERFACE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.LOG_INTERFACE_ID)) { doWork = true; q = (from r in q where r.LOG_INTERFACE_ID == criteria.LOG_INTERFACE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MODULE)) { doWork = true; q = (from r in q where r.MODULE == criteria.MODULE select r); } if (!CheckValue.EqualsDefaultValue(criteria.FUNCTION_NAME)) { doWork = true; q = (from r in q where r.FUNCTION_NAME == criteria.FUNCTION_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.INPUT_FOR_TRACE)) { doWork = true; q = (from r in q where r.INPUT_FOR_TRACE == criteria.INPUT_FOR_TRACE select r); } if (!CheckValue.EqualsDefaultValue(criteria.OUTPUT_FOR_TRACE)) { doWork = true; q = (from r in q where r.OUTPUT_FOR_TRACE == criteria.OUTPUT_FOR_TRACE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CALL_DATETIME)) { doWork = true; q = (from r in q where r.CALL_DATETIME == criteria.CALL_DATETIME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.LOG_INTERFACE_ID == 0 select r); } return q; }
    public static List<ART_SYS_LOG_INTERFACE> GetByItemContain(ART_SYS_LOG_INTERFACE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_SYS_LOG_INTERFACE>(); else return CriteriaByContains((from p in dc.ART_SYS_LOG_INTERFACE select p), Item).ToList(); }
    private static IQueryable<ART_SYS_LOG_INTERFACE> CriteriaByContains(IQueryable<ART_SYS_LOG_INTERFACE> q, ART_SYS_LOG_INTERFACE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.LOG_INTERFACE_ID)) { doWork = true; q = (from r in q where r.LOG_INTERFACE_ID == criteria.LOG_INTERFACE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MODULE)) { doWork = true; q = (from r in q where r.MODULE.Contains(criteria.MODULE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FUNCTION_NAME)) { doWork = true; q = (from r in q where r.FUNCTION_NAME.Contains(criteria.FUNCTION_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INPUT_FOR_TRACE)) { doWork = true; q = (from r in q where r.INPUT_FOR_TRACE.Contains(criteria.INPUT_FOR_TRACE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OUTPUT_FOR_TRACE)) { doWork = true; q = (from r in q where r.OUTPUT_FOR_TRACE.Contains(criteria.OUTPUT_FOR_TRACE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.LOG_INTERFACE_ID == 0 select r); } return q; }
    public static List<ART_SYS_LOG_INTERFACE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_SYS_LOG_INTERFACE select p).ToList(); }
    public static void SaveOrUpdate(ART_SYS_LOG_INTERFACE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByLOG_INTERFACE_ID(Item.LOG_INTERFACE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_LOG_INTERFACE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByLOG_INTERFACE_ID(Item.LOG_INTERFACE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_LOG_INTERFACE>().Local.FirstOrDefault(f => f.LOG_INTERFACE_ID == Item.LOG_INTERFACE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_SYS_LOG_INTERFACE Item, ARTWORKEntities dc) { if (GetChkByLOG_INTERFACE_ID(Item.LOG_INTERFACE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_LOG_INTERFACE.Add(Item); dc.SaveChanges(); } else { var temp = GetByLOG_INTERFACE_ID(Item.LOG_INTERFACE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_LOG_INTERFACE>().Local.FirstOrDefault(f => f.LOG_INTERFACE_ID == Item.LOG_INTERFACE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_SYS_LOG_INTERFACE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_LOG_INTERFACE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_SYS_LOG_INTERFACE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_LOG_INTERFACE>().Local.FirstOrDefault(f => f.LOG_INTERFACE_ID == Item.LOG_INTERFACE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_SYS_LOG_INTERFACE NewItem, ART_SYS_LOG_INTERFACE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_SYS_LOG_INTERFACE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByLOG_INTERFACE_ID(int? LOG_INTERFACE_ID, ARTWORKEntities dc) { var Item = GetByLOG_INTERFACE_ID(LOG_INTERFACE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_SYS_RUNNING_NO_SERVICE
{
    public static ART_SYS_RUNNING_NO GetByRUNNING_ID(int? RUNNING_ID, ARTWORKEntities dc) { if (RUNNING_ID == null || RUNNING_ID == 0) return null; else return (from p in dc.ART_SYS_RUNNING_NO where p.RUNNING_ID == RUNNING_ID select p).FirstOrDefault(); }
    private static int? GetChkByRUNNING_ID(int? RUNNING_ID, ARTWORKEntities dc) { if (RUNNING_ID == null || RUNNING_ID == 0) return null; else { var temp = (from p in dc.ART_SYS_RUNNING_NO where p.RUNNING_ID == RUNNING_ID select p.RUNNING_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_SYS_RUNNING_NO> GetByItem(ART_SYS_RUNNING_NO Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_SYS_RUNNING_NO>(); else return CriteriaBy((from p in dc.ART_SYS_RUNNING_NO select p), Item).ToList(); }
    private static IQueryable<ART_SYS_RUNNING_NO> CriteriaBy(IQueryable<ART_SYS_RUNNING_NO> q, ART_SYS_RUNNING_NO criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.RUNNING_ID)) { doWork = true; q = (from r in q where r.RUNNING_ID == criteria.RUNNING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PREFIX)) { doWork = true; q = (from r in q where r.PREFIX == criteria.PREFIX select r); } if (!CheckValue.EqualsDefaultValue(criteria.RUNNING_NO)) { doWork = true; q = (from r in q where r.RUNNING_NO == criteria.RUNNING_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.RUNNING_YEAR)) { doWork = true; q = (from r in q where r.RUNNING_YEAR == criteria.RUNNING_YEAR select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE)) { doWork = true; q = (from r in q where r.TYPE == criteria.TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.RUNNING_ID == 0 select r); } return q; }
    public static List<ART_SYS_RUNNING_NO> GetByItemContain(ART_SYS_RUNNING_NO Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_SYS_RUNNING_NO>(); else return CriteriaByContains((from p in dc.ART_SYS_RUNNING_NO select p), Item).ToList(); }
    private static IQueryable<ART_SYS_RUNNING_NO> CriteriaByContains(IQueryable<ART_SYS_RUNNING_NO> q, ART_SYS_RUNNING_NO criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.RUNNING_ID)) { doWork = true; q = (from r in q where r.RUNNING_ID == criteria.RUNNING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PREFIX)) { doWork = true; q = (from r in q where r.PREFIX.Contains(criteria.PREFIX) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RUNNING_NO)) { doWork = true; q = (from r in q where r.RUNNING_NO.ToString().Contains(criteria.RUNNING_NO.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RUNNING_YEAR)) { doWork = true; q = (from r in q where r.RUNNING_YEAR.ToString().Contains(criteria.RUNNING_YEAR.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE)) { doWork = true; q = (from r in q where r.TYPE.Contains(criteria.TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.RUNNING_ID == 0 select r); } return q; }
    public static List<ART_SYS_RUNNING_NO> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_SYS_RUNNING_NO select p).ToList(); }
    public static void SaveOrUpdate(ART_SYS_RUNNING_NO Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByRUNNING_ID(Item.RUNNING_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_RUNNING_NO.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByRUNNING_ID(Item.RUNNING_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_RUNNING_NO>().Local.FirstOrDefault(f => f.RUNNING_ID == Item.RUNNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_SYS_RUNNING_NO Item, ARTWORKEntities dc) { if (GetChkByRUNNING_ID(Item.RUNNING_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_RUNNING_NO.Add(Item); dc.SaveChanges(); } else { var temp = GetByRUNNING_ID(Item.RUNNING_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_RUNNING_NO>().Local.FirstOrDefault(f => f.RUNNING_ID == Item.RUNNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_SYS_RUNNING_NO Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_SYS_RUNNING_NO.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_SYS_RUNNING_NO Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_SYS_RUNNING_NO>().Local.FirstOrDefault(f => f.RUNNING_ID == Item.RUNNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_SYS_RUNNING_NO NewItem, ART_SYS_RUNNING_NO OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_SYS_RUNNING_NO"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByRUNNING_ID(int? RUNNING_ID, ARTWORKEntities dc) { var Item = GetByRUNNING_ID(RUNNING_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_TEMP_CONTAIN_SERVICE
{
    public static ART_TEMP_CONTAIN GetByCONTAIN_ID(int? CONTAIN_ID, ARTWORKEntities dc) { if (CONTAIN_ID == null || CONTAIN_ID == 0) return null; else return (from p in dc.ART_TEMP_CONTAIN where p.CONTAIN_ID == CONTAIN_ID select p).FirstOrDefault(); }
    private static int? GetChkByCONTAIN_ID(int? CONTAIN_ID, ARTWORKEntities dc) { if (CONTAIN_ID == null || CONTAIN_ID == 0) return null; else { var temp = (from p in dc.ART_TEMP_CONTAIN where p.CONTAIN_ID == CONTAIN_ID select p.CONTAIN_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_TEMP_CONTAIN> GetByItem(ART_TEMP_CONTAIN Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_TEMP_CONTAIN>(); else return CriteriaBy((from p in dc.ART_TEMP_CONTAIN select p), Item).ToList(); }
    private static IQueryable<ART_TEMP_CONTAIN> CriteriaBy(IQueryable<ART_TEMP_CONTAIN> q, ART_TEMP_CONTAIN criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CONTAIN_ID)) { doWork = true; q = (from r in q where r.CONTAIN_ID == criteria.CONTAIN_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.GUID)) { doWork = true; q = (from r in q where r.GUID == criteria.GUID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ID_TO_QUERY)) { doWork = true; q = (from r in q where r.ID_TO_QUERY == criteria.ID_TO_QUERY select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.CONTAIN_ID == 0 select r); } return q; }
    public static List<ART_TEMP_CONTAIN> GetByItemContain(ART_TEMP_CONTAIN Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_TEMP_CONTAIN>(); else return CriteriaByContains((from p in dc.ART_TEMP_CONTAIN select p), Item).ToList(); }
    private static IQueryable<ART_TEMP_CONTAIN> CriteriaByContains(IQueryable<ART_TEMP_CONTAIN> q, ART_TEMP_CONTAIN criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CONTAIN_ID)) { doWork = true; q = (from r in q where r.CONTAIN_ID == criteria.CONTAIN_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.GUID)) { doWork = true; q = (from r in q where r.GUID.Contains(criteria.GUID) select r); } if (!doWork) { q = (from r in q where r.CONTAIN_ID == 0 select r); } return q; }
    public static List<ART_TEMP_CONTAIN> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_TEMP_CONTAIN select p).ToList(); }
    public static void SaveOrUpdate(ART_TEMP_CONTAIN Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCONTAIN_ID(Item.CONTAIN_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_TEMP_CONTAIN.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCONTAIN_ID(Item.CONTAIN_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_TEMP_CONTAIN>().Local.FirstOrDefault(f => f.CONTAIN_ID == Item.CONTAIN_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_TEMP_CONTAIN Item, ARTWORKEntities dc) { if (GetChkByCONTAIN_ID(Item.CONTAIN_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_TEMP_CONTAIN.Add(Item); dc.SaveChanges(); } else { var temp = GetByCONTAIN_ID(Item.CONTAIN_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_TEMP_CONTAIN>().Local.FirstOrDefault(f => f.CONTAIN_ID == Item.CONTAIN_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_TEMP_CONTAIN Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_TEMP_CONTAIN.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_TEMP_CONTAIN Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_TEMP_CONTAIN>().Local.FirstOrDefault(f => f.CONTAIN_ID == Item.CONTAIN_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_TEMP_CONTAIN NewItem, ART_TEMP_CONTAIN OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_TEMP_CONTAIN"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCONTAIN_ID(int? CONTAIN_ID, ARTWORKEntities dc) { var Item = GetByCONTAIN_ID(CONTAIN_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_ATTACHMENT_SERVICE
{
    public static ART_WF_ARTWORK_ATTACHMENT GetByARTWORK_ATTACHMENT_ID(int? ARTWORK_ATTACHMENT_ID, ARTWORKEntities dc) { if (ARTWORK_ATTACHMENT_ID == null || ARTWORK_ATTACHMENT_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_ATTACHMENT where p.ARTWORK_ATTACHMENT_ID == ARTWORK_ATTACHMENT_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_ATTACHMENT_ID(int? ARTWORK_ATTACHMENT_ID, ARTWORKEntities dc) { if (ARTWORK_ATTACHMENT_ID == null || ARTWORK_ATTACHMENT_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_ATTACHMENT where p.ARTWORK_ATTACHMENT_ID == ARTWORK_ATTACHMENT_ID select p.ARTWORK_ATTACHMENT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_ATTACHMENT> GetByItem(ART_WF_ARTWORK_ATTACHMENT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_ATTACHMENT>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_ATTACHMENT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_ATTACHMENT> CriteriaBy(IQueryable<ART_WF_ARTWORK_ATTACHMENT> q, ART_WF_ARTWORK_ATTACHMENT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_ATTACHMENT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_ATTACHMENT_ID == criteria.ARTWORK_ATTACHMENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NODE_ID)) { doWork = true; q = (from r in q where r.NODE_ID == criteria.NODE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID)) { doWork = true; q = (from r in q where r.ROLE_ID == criteria.ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.FILE_NAME)) { doWork = true; q = (from r in q where r.FILE_NAME == criteria.FILE_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXTENSION)) { doWork = true; q = (from r in q where r.EXTENSION == criteria.EXTENSION select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE)) { doWork = true; q = (from r in q where r.SIZE == criteria.SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTENT_TYPE)) { doWork = true; q = (from r in q where r.CONTENT_TYPE == criteria.CONTENT_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_ID)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_ID == criteria.STEP_ARTWORK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.VERSION)) { doWork = true; q = (from r in q where r.VERSION == criteria.VERSION select r); } if (!CheckValue.EqualsDefaultValue(criteria.VERSION2)) { doWork = true; q = (from r in q where r.VERSION2 == criteria.VERSION2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_INTERNAL)) { doWork = true; q = (from r in q where r.IS_INTERNAL == criteria.IS_INTERNAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_VENDOR)) { doWork = true; q = (from r in q where r.IS_VENDOR == criteria.IS_VENDOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_CUSTOMER)) { doWork = true; q = (from r in q where r.IS_CUSTOMER == criteria.IS_CUSTOMER select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_SYSTEM)) { doWork = true; q = (from r in q where r.IS_SYSTEM == criteria.IS_SYSTEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_ATTACHMENT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_ATTACHMENT> GetByItemContain(ART_WF_ARTWORK_ATTACHMENT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_ATTACHMENT>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_ATTACHMENT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_ATTACHMENT> CriteriaByContains(IQueryable<ART_WF_ARTWORK_ATTACHMENT> q, ART_WF_ARTWORK_ATTACHMENT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_ATTACHMENT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_ATTACHMENT_ID == criteria.ARTWORK_ATTACHMENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FILE_NAME)) { doWork = true; q = (from r in q where r.FILE_NAME.Contains(criteria.FILE_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXTENSION)) { doWork = true; q = (from r in q where r.EXTENSION.Contains(criteria.EXTENSION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTENT_TYPE)) { doWork = true; q = (from r in q where r.CONTENT_TYPE.Contains(criteria.CONTENT_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VERSION2)) { doWork = true; q = (from r in q where r.VERSION2.Contains(criteria.VERSION2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_INTERNAL)) { doWork = true; q = (from r in q where r.IS_INTERNAL.Contains(criteria.IS_INTERNAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_VENDOR)) { doWork = true; q = (from r in q where r.IS_VENDOR.Contains(criteria.IS_VENDOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_CUSTOMER)) { doWork = true; q = (from r in q where r.IS_CUSTOMER.Contains(criteria.IS_CUSTOMER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_SYSTEM)) { doWork = true; q = (from r in q where r.IS_SYSTEM.Contains(criteria.IS_SYSTEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_ATTACHMENT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_ATTACHMENT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_ATTACHMENT select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_ATTACHMENT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_ATTACHMENT_ID(Item.ARTWORK_ATTACHMENT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_ATTACHMENT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_ATTACHMENT_ID(Item.ARTWORK_ATTACHMENT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_ATTACHMENT>().Local.FirstOrDefault(f => f.ARTWORK_ATTACHMENT_ID == Item.ARTWORK_ATTACHMENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_ATTACHMENT Item, ARTWORKEntities dc) { if (GetChkByARTWORK_ATTACHMENT_ID(Item.ARTWORK_ATTACHMENT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_ATTACHMENT.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_ATTACHMENT_ID(Item.ARTWORK_ATTACHMENT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_ATTACHMENT>().Local.FirstOrDefault(f => f.ARTWORK_ATTACHMENT_ID == Item.ARTWORK_ATTACHMENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_ATTACHMENT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_ATTACHMENT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_ATTACHMENT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_ATTACHMENT>().Local.FirstOrDefault(f => f.ARTWORK_ATTACHMENT_ID == Item.ARTWORK_ATTACHMENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_ATTACHMENT NewItem, ART_WF_ARTWORK_ATTACHMENT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_ATTACHMENT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_ATTACHMENT_ID(int? ARTWORK_ATTACHMENT_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_ATTACHMENT_ID(ARTWORK_ATTACHMENT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_MAPPING_PO_SERVICE
{
    public static ART_WF_ARTWORK_MAPPING_PO GetByARTWORK_MAPPING_PO_ID(int? ARTWORK_MAPPING_PO_ID, ARTWORKEntities dc) { if (ARTWORK_MAPPING_PO_ID == null || ARTWORK_MAPPING_PO_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_MAPPING_PO where p.ARTWORK_MAPPING_PO_ID == ARTWORK_MAPPING_PO_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_MAPPING_PO_ID(int? ARTWORK_MAPPING_PO_ID, ARTWORKEntities dc) { if (ARTWORK_MAPPING_PO_ID == null || ARTWORK_MAPPING_PO_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_MAPPING_PO where p.ARTWORK_MAPPING_PO_ID == ARTWORK_MAPPING_PO_ID select p.ARTWORK_MAPPING_PO_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_MAPPING_PO> GetByItem(ART_WF_ARTWORK_MAPPING_PO Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_MAPPING_PO>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_MAPPING_PO select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_MAPPING_PO> CriteriaBy(IQueryable<ART_WF_ARTWORK_MAPPING_PO> q, ART_WF_ARTWORK_MAPPING_PO criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_MAPPING_PO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_MAPPING_PO_ID == criteria.ARTWORK_MAPPING_PO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_NO)) { doWork = true; q = (from r in q where r.ARTWORK_NO == criteria.ARTWORK_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_NO)) { doWork = true; q = (from r in q where r.PO_NO == criteria.PO_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_ITEM)) { doWork = true; q = (from r in q where r.PO_ITEM == criteria.PO_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_NO)) { doWork = true; q = (from r in q where r.SO_NO == criteria.SO_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_ITEM)) { doWork = true; q = (from r in q where r.SO_ITEM == criteria.SO_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO == criteria.MATERIAL_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_MAPPING_PO_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_MAPPING_PO> GetByItemContain(ART_WF_ARTWORK_MAPPING_PO Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_MAPPING_PO>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_MAPPING_PO select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_MAPPING_PO> CriteriaByContains(IQueryable<ART_WF_ARTWORK_MAPPING_PO> q, ART_WF_ARTWORK_MAPPING_PO criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_MAPPING_PO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_MAPPING_PO_ID == criteria.ARTWORK_MAPPING_PO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_NO)) { doWork = true; q = (from r in q where r.ARTWORK_NO.Contains(criteria.ARTWORK_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_NO)) { doWork = true; q = (from r in q where r.PO_NO.Contains(criteria.PO_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_ITEM)) { doWork = true; q = (from r in q where r.PO_ITEM.Contains(criteria.PO_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_NO)) { doWork = true; q = (from r in q where r.SO_NO.Contains(criteria.SO_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_ITEM)) { doWork = true; q = (from r in q where r.SO_ITEM.Contains(criteria.SO_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO.Contains(criteria.MATERIAL_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_MAPPING_PO_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_MAPPING_PO> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_MAPPING_PO select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_MAPPING_PO Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_MAPPING_PO_ID(Item.ARTWORK_MAPPING_PO_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_MAPPING_PO.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_MAPPING_PO_ID(Item.ARTWORK_MAPPING_PO_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_MAPPING_PO>().Local.FirstOrDefault(f => f.ARTWORK_MAPPING_PO_ID == Item.ARTWORK_MAPPING_PO_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_MAPPING_PO Item, ARTWORKEntities dc) { if (GetChkByARTWORK_MAPPING_PO_ID(Item.ARTWORK_MAPPING_PO_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_MAPPING_PO.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_MAPPING_PO_ID(Item.ARTWORK_MAPPING_PO_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_MAPPING_PO>().Local.FirstOrDefault(f => f.ARTWORK_MAPPING_PO_ID == Item.ARTWORK_MAPPING_PO_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_MAPPING_PO Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_MAPPING_PO.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_MAPPING_PO Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_MAPPING_PO>().Local.FirstOrDefault(f => f.ARTWORK_MAPPING_PO_ID == Item.ARTWORK_MAPPING_PO_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_MAPPING_PO NewItem, ART_WF_ARTWORK_MAPPING_PO OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_MAPPING_PO"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_MAPPING_PO_ID(int? ARTWORK_MAPPING_PO_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_MAPPING_PO_ID(ARTWORK_MAPPING_PO_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_MATERIAL_LOCK_SERVICE
{
    public static ART_WF_ARTWORK_MATERIAL_LOCK GetByMATERIAL_LOCK_ID(int? MATERIAL_LOCK_ID, ARTWORKEntities dc) { if (MATERIAL_LOCK_ID == null || MATERIAL_LOCK_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK where p.MATERIAL_LOCK_ID == MATERIAL_LOCK_ID select p).FirstOrDefault(); }
    private static int? GetChkByMATERIAL_LOCK_ID(int? MATERIAL_LOCK_ID, ARTWORKEntities dc) { if (MATERIAL_LOCK_ID == null || MATERIAL_LOCK_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK where p.MATERIAL_LOCK_ID == MATERIAL_LOCK_ID select p.MATERIAL_LOCK_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_MATERIAL_LOCK> GetByItem(ART_WF_ARTWORK_MATERIAL_LOCK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_MATERIAL_LOCK>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_MATERIAL_LOCK> CriteriaBy(IQueryable<ART_WF_ARTWORK_MATERIAL_LOCK> q, ART_WF_ARTWORK_MATERIAL_LOCK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_LOCK_ID)) { doWork = true; q = (from r in q where r.MATERIAL_LOCK_ID == criteria.MATERIAL_LOCK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO == criteria.MATERIAL_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION == criteria.MATERIAL_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.STATUS)) { doWork = true; q = (from r in q where r.STATUS == criteria.STATUS select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNLOCK_DATE_FROM)) { doWork = true; q = (from r in q where r.UNLOCK_DATE_FROM == criteria.UNLOCK_DATE_FROM select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNLOCK_DATE_TO)) { doWork = true; q = (from r in q where r.UNLOCK_DATE_TO == criteria.UNLOCK_DATE_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PIC)) { doWork = true; q = (from r in q where r.PIC == criteria.PIC select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_FORM_NO)) { doWork = true; q = (from r in q where r.REQUEST_FORM_NO == criteria.REQUEST_FORM_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_NO)) { doWork = true; q = (from r in q where r.ARTWORK_NO == criteria.ARTWORK_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_NO)) { doWork = true; q = (from r in q where r.MOCKUP_NO == criteria.MOCKUP_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_FORM_ID)) { doWork = true; q = (from r in q where r.REQUEST_FORM_ID == criteria.REQUEST_FORM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_ID)) { doWork = true; q = (from r in q where r.ARTWORK_ID == criteria.ARTWORK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_TYPE)) { doWork = true; q = (from r in q where r.PACKAGING_TYPE == criteria.PACKAGING_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE == criteria.PRIMARY_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE == criteria.PRIMARY_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_STYLE)) { doWork = true; q = (from r in q where r.PACKAGING_STYLE == criteria.PACKAGING_STYLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE == criteria.PACK_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PG_OWNER)) { doWork = true; q = (from r in q where r.PG_OWNER == criteria.PG_OWNER select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_HAS_FILES)) { doWork = true; q = (from r in q where r.IS_HAS_FILES == criteria.IS_HAS_FILES select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_UNLOCK)) { doWork = true; q = (from r in q where r.REMARK_UNLOCK == criteria.REMARK_UNLOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_LOCK)) { doWork = true; q = (from r in q where r.REMARK_LOCK == criteria.REMARK_LOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE_LOCK)) { doWork = true; q = (from r in q where r.UPDATE_DATE_LOCK == criteria.UPDATE_DATE_LOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY_LOCK)) { doWork = true; q = (from r in q where r.UPDATE_BY_LOCK == criteria.UPDATE_BY_LOCK select r); } if (!doWork) { q = (from r in q where r.MATERIAL_LOCK_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_MATERIAL_LOCK> GetByItemContain(ART_WF_ARTWORK_MATERIAL_LOCK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_MATERIAL_LOCK>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_MATERIAL_LOCK> CriteriaByContains(IQueryable<ART_WF_ARTWORK_MATERIAL_LOCK> q, ART_WF_ARTWORK_MATERIAL_LOCK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_LOCK_ID)) { doWork = true; q = (from r in q where r.MATERIAL_LOCK_ID == criteria.MATERIAL_LOCK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO.Contains(criteria.MATERIAL_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION.Contains(criteria.MATERIAL_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STATUS)) { doWork = true; q = (from r in q where r.STATUS.Contains(criteria.STATUS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PIC)) { doWork = true; q = (from r in q where r.PIC.Contains(criteria.PIC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_FORM_NO)) { doWork = true; q = (from r in q where r.REQUEST_FORM_NO.Contains(criteria.REQUEST_FORM_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_NO)) { doWork = true; q = (from r in q where r.ARTWORK_NO.Contains(criteria.ARTWORK_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_NO)) { doWork = true; q = (from r in q where r.MOCKUP_NO.Contains(criteria.MOCKUP_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_TYPE)) { doWork = true; q = (from r in q where r.PACKAGING_TYPE.Contains(criteria.PACKAGING_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE.Contains(criteria.PRIMARY_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE.Contains(criteria.PRIMARY_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_STYLE)) { doWork = true; q = (from r in q where r.PACKAGING_STYLE.Contains(criteria.PACKAGING_STYLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE.Contains(criteria.PACK_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PG_OWNER)) { doWork = true; q = (from r in q where r.PG_OWNER.Contains(criteria.PG_OWNER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_HAS_FILES)) { doWork = true; q = (from r in q where r.IS_HAS_FILES.Contains(criteria.IS_HAS_FILES) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_UNLOCK)) { doWork = true; q = (from r in q where r.REMARK_UNLOCK.Contains(criteria.REMARK_UNLOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_LOCK)) { doWork = true; q = (from r in q where r.REMARK_LOCK.Contains(criteria.REMARK_LOCK) select r); } if (!doWork) { q = (from r in q where r.MATERIAL_LOCK_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_MATERIAL_LOCK> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_MATERIAL_LOCK Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMATERIAL_LOCK_ID(Item.MATERIAL_LOCK_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_MATERIAL_LOCK.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMATERIAL_LOCK_ID(Item.MATERIAL_LOCK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_MATERIAL_LOCK>().Local.FirstOrDefault(f => f.MATERIAL_LOCK_ID == Item.MATERIAL_LOCK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_MATERIAL_LOCK Item, ARTWORKEntities dc) { if (GetChkByMATERIAL_LOCK_ID(Item.MATERIAL_LOCK_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_MATERIAL_LOCK.Add(Item); dc.SaveChanges(); } else { var temp = GetByMATERIAL_LOCK_ID(Item.MATERIAL_LOCK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_MATERIAL_LOCK>().Local.FirstOrDefault(f => f.MATERIAL_LOCK_ID == Item.MATERIAL_LOCK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_MATERIAL_LOCK Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_MATERIAL_LOCK.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_MATERIAL_LOCK Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_MATERIAL_LOCK>().Local.FirstOrDefault(f => f.MATERIAL_LOCK_ID == Item.MATERIAL_LOCK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_MATERIAL_LOCK NewItem, ART_WF_ARTWORK_MATERIAL_LOCK OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_MATERIAL_LOCK"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMATERIAL_LOCK_ID(int? MATERIAL_LOCK_ID, ARTWORKEntities dc) { var Item = GetByMATERIAL_LOCK_ID(MATERIAL_LOCK_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL_SERVICE
{
    public static ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL GetByMATERIAL_LOCK_DETAIL_ID(int? MATERIAL_LOCK_DETAIL_ID, ARTWORKEntities dc) { if (MATERIAL_LOCK_DETAIL_ID == null || MATERIAL_LOCK_DETAIL_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL where p.MATERIAL_LOCK_DETAIL_ID == MATERIAL_LOCK_DETAIL_ID select p).FirstOrDefault(); }
    private static int? GetChkByMATERIAL_LOCK_DETAIL_ID(int? MATERIAL_LOCK_DETAIL_ID, ARTWORKEntities dc) { if (MATERIAL_LOCK_DETAIL_ID == null || MATERIAL_LOCK_DETAIL_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL where p.MATERIAL_LOCK_DETAIL_ID == MATERIAL_LOCK_DETAIL_ID select p.MATERIAL_LOCK_DETAIL_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL> GetByItem(ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL> CriteriaBy(IQueryable<ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL> q, ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_LOCK_DETAIL_ID)) { doWork = true; q = (from r in q where r.MATERIAL_LOCK_DETAIL_ID == criteria.MATERIAL_LOCK_DETAIL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_LOCK_ID)) { doWork = true; q = (from r in q where r.MATERIAL_LOCK_ID == criteria.MATERIAL_LOCK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO == criteria.MATERIAL_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO == criteria.SOLD_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO == criteria.SHIP_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY == criteria.COUNTRY select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE == criteria.ZONE select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND)) { doWork = true; q = (from r in q where r.BRAND == criteria.BRAND select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MATERIAL_LOCK_DETAIL_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL> GetByItemContain(ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL> CriteriaByContains(IQueryable<ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL> q, ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_LOCK_DETAIL_ID)) { doWork = true; q = (from r in q where r.MATERIAL_LOCK_DETAIL_ID == criteria.MATERIAL_LOCK_DETAIL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_LOCK_ID)) { doWork = true; q = (from r in q where r.MATERIAL_LOCK_ID.ToString().Contains(criteria.MATERIAL_LOCK_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO.Contains(criteria.MATERIAL_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO.Contains(criteria.SOLD_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO.Contains(criteria.SHIP_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY.Contains(criteria.COUNTRY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE.Contains(criteria.ZONE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND)) { doWork = true; q = (from r in q where r.BRAND.Contains(criteria.BRAND) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MATERIAL_LOCK_DETAIL_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMATERIAL_LOCK_DETAIL_ID(Item.MATERIAL_LOCK_DETAIL_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMATERIAL_LOCK_DETAIL_ID(Item.MATERIAL_LOCK_DETAIL_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL>().Local.FirstOrDefault(f => f.MATERIAL_LOCK_DETAIL_ID == Item.MATERIAL_LOCK_DETAIL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL Item, ARTWORKEntities dc) { if (GetChkByMATERIAL_LOCK_DETAIL_ID(Item.MATERIAL_LOCK_DETAIL_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL.Add(Item); dc.SaveChanges(); } else { var temp = GetByMATERIAL_LOCK_DETAIL_ID(Item.MATERIAL_LOCK_DETAIL_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL>().Local.FirstOrDefault(f => f.MATERIAL_LOCK_DETAIL_ID == Item.MATERIAL_LOCK_DETAIL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL>().Local.FirstOrDefault(f => f.MATERIAL_LOCK_DETAIL_ID == Item.MATERIAL_LOCK_DETAIL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL NewItem, ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_MATERIAL_LOCK_DETAIL"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMATERIAL_LOCK_DETAIL_ID(int? MATERIAL_LOCK_DETAIL_ID, ARTWORKEntities dc) { var Item = GetByMATERIAL_LOCK_DETAIL_ID(MATERIAL_LOCK_DETAIL_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_MATERIAL_LOCK_LOG_SERVICE
{
    public static ART_WF_ARTWORK_MATERIAL_LOCK_LOG GetByMATERIAL_LOCK_LOG_ID(int? MATERIAL_LOCK_LOG_ID, ARTWORKEntities dc) { if (MATERIAL_LOCK_LOG_ID == null || MATERIAL_LOCK_LOG_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK_LOG where p.MATERIAL_LOCK_LOG_ID == MATERIAL_LOCK_LOG_ID select p).FirstOrDefault(); }
    private static int? GetChkByMATERIAL_LOCK_LOG_ID(int? MATERIAL_LOCK_LOG_ID, ARTWORKEntities dc) { if (MATERIAL_LOCK_LOG_ID == null || MATERIAL_LOCK_LOG_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK_LOG where p.MATERIAL_LOCK_LOG_ID == MATERIAL_LOCK_LOG_ID select p.MATERIAL_LOCK_LOG_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_MATERIAL_LOCK_LOG> GetByItem(ART_WF_ARTWORK_MATERIAL_LOCK_LOG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_MATERIAL_LOCK_LOG>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK_LOG select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_MATERIAL_LOCK_LOG> CriteriaBy(IQueryable<ART_WF_ARTWORK_MATERIAL_LOCK_LOG> q, ART_WF_ARTWORK_MATERIAL_LOCK_LOG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_LOCK_LOG_ID)) { doWork = true; q = (from r in q where r.MATERIAL_LOCK_LOG_ID == criteria.MATERIAL_LOCK_LOG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_LOCK_ID)) { doWork = true; q = (from r in q where r.MATERIAL_LOCK_ID == criteria.MATERIAL_LOCK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO == criteria.MATERIAL_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.STATUS)) { doWork = true; q = (from r in q where r.STATUS == criteria.STATUS select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNLOCK_DATE_FROM)) { doWork = true; q = (from r in q where r.UNLOCK_DATE_FROM == criteria.UNLOCK_DATE_FROM select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNLOCK_DATE_TO)) { doWork = true; q = (from r in q where r.UNLOCK_DATE_TO == criteria.UNLOCK_DATE_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_UNLOCK)) { doWork = true; q = (from r in q where r.REMARK_UNLOCK == criteria.REMARK_UNLOCK select r); } if (!doWork) { q = (from r in q where r.MATERIAL_LOCK_LOG_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_MATERIAL_LOCK_LOG> GetByItemContain(ART_WF_ARTWORK_MATERIAL_LOCK_LOG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_MATERIAL_LOCK_LOG>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK_LOG select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_MATERIAL_LOCK_LOG> CriteriaByContains(IQueryable<ART_WF_ARTWORK_MATERIAL_LOCK_LOG> q, ART_WF_ARTWORK_MATERIAL_LOCK_LOG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_LOCK_LOG_ID)) { doWork = true; q = (from r in q where r.MATERIAL_LOCK_LOG_ID == criteria.MATERIAL_LOCK_LOG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_LOCK_ID)) { doWork = true; q = (from r in q where r.MATERIAL_LOCK_ID.ToString().Contains(criteria.MATERIAL_LOCK_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO.Contains(criteria.MATERIAL_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STATUS)) { doWork = true; q = (from r in q where r.STATUS.Contains(criteria.STATUS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_UNLOCK)) { doWork = true; q = (from r in q where r.REMARK_UNLOCK.Contains(criteria.REMARK_UNLOCK) select r); } if (!doWork) { q = (from r in q where r.MATERIAL_LOCK_LOG_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_MATERIAL_LOCK_LOG> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_MATERIAL_LOCK_LOG select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_MATERIAL_LOCK_LOG Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMATERIAL_LOCK_LOG_ID(Item.MATERIAL_LOCK_LOG_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_MATERIAL_LOCK_LOG.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMATERIAL_LOCK_LOG_ID(Item.MATERIAL_LOCK_LOG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_MATERIAL_LOCK_LOG>().Local.FirstOrDefault(f => f.MATERIAL_LOCK_LOG_ID == Item.MATERIAL_LOCK_LOG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_MATERIAL_LOCK_LOG Item, ARTWORKEntities dc) { if (GetChkByMATERIAL_LOCK_LOG_ID(Item.MATERIAL_LOCK_LOG_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_MATERIAL_LOCK_LOG.Add(Item); dc.SaveChanges(); } else { var temp = GetByMATERIAL_LOCK_LOG_ID(Item.MATERIAL_LOCK_LOG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_MATERIAL_LOCK_LOG>().Local.FirstOrDefault(f => f.MATERIAL_LOCK_LOG_ID == Item.MATERIAL_LOCK_LOG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_MATERIAL_LOCK_LOG Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_MATERIAL_LOCK_LOG.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_MATERIAL_LOCK_LOG Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_MATERIAL_LOCK_LOG>().Local.FirstOrDefault(f => f.MATERIAL_LOCK_LOG_ID == Item.MATERIAL_LOCK_LOG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_MATERIAL_LOCK_LOG NewItem, ART_WF_ARTWORK_MATERIAL_LOCK_LOG OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_MATERIAL_LOCK_LOG"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMATERIAL_LOCK_LOG_ID(int? MATERIAL_LOCK_LOG_ID, ARTWORKEntities dc) { var Item = GetByMATERIAL_LOCK_LOG_ID(MATERIAL_LOCK_LOG_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS GetByARTWORK_SUB_ID(int? ARTWORK_SUB_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_ID == null || ARTWORK_SUB_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS where p.ARTWORK_SUB_ID == ARTWORK_SUB_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_SUB_ID(int? ARTWORK_SUB_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_ID == null || ARTWORK_SUB_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS where p.ARTWORK_SUB_ID == ARTWORK_SUB_ID select p.ARTWORK_SUB_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS> GetByItem(ART_WF_ARTWORK_PROCESS Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS> q, ART_WF_ARTWORK_PROCESS criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_ITEM_ID)) { doWork = true; q = (from r in q where r.ARTWORK_ITEM_ID == criteria.ARTWORK_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PARENT_ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.PARENT_ARTWORK_SUB_ID == criteria.PARENT_ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_ID)) { doWork = true; q = (from r in q where r.CURRENT_STEP_ID == criteria.CURRENT_STEP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_ID)) { doWork = true; q = (from r in q where r.CURRENT_USER_ID == criteria.CURRENT_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_ROLE_ID)) { doWork = true; q = (from r in q where r.CURRENT_ROLE_ID == criteria.CURRENT_ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_VENDOR_ID)) { doWork = true; q = (from r in q where r.CURRENT_VENDOR_ID == criteria.CURRENT_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CURRENT_CUSTOMER_ID == criteria.CURRENT_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END == criteria.IS_END select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_FOLDER_NODE_ID)) { doWork = true; q = (from r in q where r.ARTWORK_FOLDER_NODE_ID == criteria.ARTWORK_FOLDER_NODE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE == criteria.IS_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_TERMINATE)) { doWork = true; q = (from r in q where r.REMARK_TERMINATE == criteria.REMARK_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_KILLPROCESS)) { doWork = true; q = (from r in q where r.REMARK_KILLPROCESS == criteria.REMARK_KILLPROCESS select r); } if (!CheckValue.EqualsDefaultValue(criteria.TERMINATE_REASON_CODE)) { doWork = true; q = (from r in q where r.TERMINATE_REASON_CODE == criteria.TERMINATE_REASON_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE == criteria.IS_DELEGATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_STEP_DURATION_EXTEND)) { doWork = true; q = (from r in q where r.IS_STEP_DURATION_EXTEND == criteria.IS_STEP_DURATION_EXTEND select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_DURATION_EXTEND_REASON_ID)) { doWork = true; q = (from r in q where r.STEP_DURATION_EXTEND_REASON_ID == criteria.STEP_DURATION_EXTEND_REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_DURATION_EXTEND_REMARK)) { doWork = true; q = (from r in q where r.STEP_DURATION_EXTEND_REMARK == criteria.STEP_DURATION_EXTEND_REMARK select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS> GetByItemContain(ART_WF_ARTWORK_PROCESS Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS> q, ART_WF_ARTWORK_PROCESS criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_ITEM_ID)) { doWork = true; q = (from r in q where r.ARTWORK_ITEM_ID.ToString().Contains(criteria.ARTWORK_ITEM_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END.Contains(criteria.IS_END) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE.Contains(criteria.IS_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_TERMINATE)) { doWork = true; q = (from r in q where r.REMARK_TERMINATE.Contains(criteria.REMARK_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_KILLPROCESS)) { doWork = true; q = (from r in q where r.REMARK_KILLPROCESS.Contains(criteria.REMARK_KILLPROCESS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE.Contains(criteria.IS_DELEGATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_STEP_DURATION_EXTEND)) { doWork = true; q = (from r in q where r.IS_STEP_DURATION_EXTEND.Contains(criteria.IS_STEP_DURATION_EXTEND) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_DURATION_EXTEND_REMARK)) { doWork = true; q = (from r in q where r.STEP_DURATION_EXTEND_REMARK.Contains(criteria.STEP_DURATION_EXTEND_REMARK) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_SUB_ID(Item.ARTWORK_SUB_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_SUB_ID(Item.ARTWORK_SUB_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS>().Local.FirstOrDefault(f => f.ARTWORK_SUB_ID == Item.ARTWORK_SUB_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS Item, ARTWORKEntities dc) { if (GetChkByARTWORK_SUB_ID(Item.ARTWORK_SUB_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_SUB_ID(Item.ARTWORK_SUB_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS>().Local.FirstOrDefault(f => f.ARTWORK_SUB_ID == Item.ARTWORK_SUB_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS>().Local.FirstOrDefault(f => f.ARTWORK_SUB_ID == Item.ARTWORK_SUB_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS NewItem, ART_WF_ARTWORK_PROCESS OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_SUB_ID(int? ARTWORK_SUB_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_SUB_ID(ARTWORK_SUB_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK where p.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK where p.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID select p.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK> GetByItem(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK> GetByItemContain(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK NewItem, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID(ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK where p.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK where p.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID select p.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK> GetByItem(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK> GetByItemContain(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK NewItem, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID(ARTWORK_PROCESS_AFTER_CUSTOMER_GM_MK_BY_MK_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC where p.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC where p.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID select p.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC> GetByItem(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC> GetByItemContain(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC NewItem, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID(ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC where p.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC where p.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID select p.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC> GetByItem(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC> GetByItemContain(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC NewItem, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID(ARTWORK_PROCESS_AFTER_CUSTOMER_GM_QC_BY_QC_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK GetByARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK where p.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK where p.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID select p.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK> GetByItem(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK> GetByItemContain(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK NewItem, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID(ARTWORK_PROCESS_AFTER_CUSTOMER_MK_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC GetByARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC where p.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC where p.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID select p.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC> GetByItem(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.APPROVE)) { doWork = true; q = (from r in q where r.APPROVE == criteria.APPROVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC> GetByItemContain(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.APPROVE)) { doWork = true; q = (from r in q where r.APPROVE.Contains(criteria.APPROVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC NewItem, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID(ARTWORK_PROCESS_AFTER_CUSTOMER_MK_BY_QC_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA GetByARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA where p.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA where p.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID select p.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA> GetByItem(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA> GetByItemContain(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA NewItem, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID(ARTWORK_PROCESS_AFTER_CUSTOMER_PA_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK GetByARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK where p.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK where p.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID select p.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK> GetByItem(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.APPROVE)) { doWork = true; q = (from r in q where r.APPROVE == criteria.APPROVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK> GetByItemContain(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.APPROVE)) { doWork = true; q = (from r in q where r.APPROVE.Contains(criteria.APPROVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK NewItem, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID(ARTWORK_PROCESS_AFTER_CUSTOMER_PA_BY_MK_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC GetByARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC where p.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC where p.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID select p.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC> GetByItem(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.APPROVE)) { doWork = true; q = (from r in q where r.APPROVE == criteria.APPROVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC> GetByItemContain(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.APPROVE)) { doWork = true; q = (from r in q where r.APPROVE.Contains(criteria.APPROVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC NewItem, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID(ARTWORK_PROCESS_AFTER_CUSTOMER_QC_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK GetByARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK where p.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == null || ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK where p.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID select p.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK> GetByItem(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.APPROVE)) { doWork = true; q = (from r in q where r.APPROVE == criteria.APPROVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION_ADJUST)) { doWork = true; q = (from r in q where r.DECISION_ADJUST == criteria.DECISION_ADJUST select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION_CHANGE_DETAIL)) { doWork = true; q = (from r in q where r.DECISION_CHANGE_DETAIL == criteria.DECISION_CHANGE_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION_NONCOMPLIANCE)) { doWork = true; q = (from r in q where r.DECISION_NONCOMPLIANCE == criteria.DECISION_NONCOMPLIANCE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK> GetByItemContain(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK> q, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == criteria.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.APPROVE)) { doWork = true; q = (from r in q where r.APPROVE.Contains(criteria.APPROVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION_ADJUST)) { doWork = true; q = (from r in q where r.DECISION_ADJUST.Contains(criteria.DECISION_ADJUST) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION_CHANGE_DETAIL)) { doWork = true; q = (from r in q where r.DECISION_CHANGE_DETAIL.Contains(criteria.DECISION_CHANGE_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION_NONCOMPLIANCE)) { doWork = true; q = (from r in q where r.DECISION_NONCOMPLIANCE.Contains(criteria.DECISION_NONCOMPLIANCE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID(Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID == Item.ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK NewItem, ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID(int? ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID(ARTWORK_PROCESS_AFTER_CUSTOMER_QC_BY_MK_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER GetByASSIGN_SO_HEADER_ID(int? ASSIGN_SO_HEADER_ID, ARTWORKEntities dc) { if (ASSIGN_SO_HEADER_ID == null || ASSIGN_SO_HEADER_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER where p.ASSIGN_SO_HEADER_ID == ASSIGN_SO_HEADER_ID select p).FirstOrDefault(); }
    private static int? GetChkByASSIGN_SO_HEADER_ID(int? ASSIGN_SO_HEADER_ID, ARTWORKEntities dc) { if (ASSIGN_SO_HEADER_ID == null || ASSIGN_SO_HEADER_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER where p.ASSIGN_SO_HEADER_ID == ASSIGN_SO_HEADER_ID select p.ASSIGN_SO_HEADER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER> GetByItem(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER> q, ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_HEADER_ID == criteria.ASSIGN_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_SO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_SO_ID == criteria.ARTWORK_PROCESS_SO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO == criteria.SOLD_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME == criteria.SOLD_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_SHIPMENT_DATE)) { doWork = true; q = (from r in q where r.LAST_SHIPMENT_DATE == criteria.LAST_SHIPMENT_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE_1_2)) { doWork = true; q = (from r in q where r.DATE_1_2 == criteria.DATE_1_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_ON)) { doWork = true; q = (from r in q where r.CREATE_ON == criteria.CREATE_ON select r); } if (!CheckValue.EqualsDefaultValue(criteria.RDD)) { doWork = true; q = (from r in q where r.RDD == criteria.RDD select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM == criteria.PAYMENT_TERM select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO == criteria.LC_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXPIRED_DATE)) { doWork = true; q = (from r in q where r.EXPIRED_DATE == criteria.EXPIRED_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO == criteria.SHIP_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME == criteria.SHIP_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO == criteria.SOLD_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO == criteria.SHIP_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP == criteria.SALES_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO == criteria.MARKETING_CO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME == criteria.MARKETING_CO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING == criteria.MARKETING select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME == criteria.MARKETING_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP == criteria.MARKETING_ORDER_SAP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME == criteria.MARKETING_ORDER_SAP_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG == criteria.SALES_ORG select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL == criteria.DISTRIBUTION_CHANNEL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION == criteria.DIVITION select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE == criteria.SALES_ORDER_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1 == criteria.HEADER_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2 == criteria.HEADER_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3 == criteria.HEADER_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ASSIGN_SO_HEADER_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER> GetByItemContain(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER> q, ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_HEADER_ID == criteria.ASSIGN_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_SO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_SO_ID.ToString().Contains(criteria.ARTWORK_PROCESS_SO_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO.Contains(criteria.SOLD_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME.Contains(criteria.SOLD_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM.Contains(criteria.PAYMENT_TERM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO.Contains(criteria.LC_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO.Contains(criteria.SHIP_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME.Contains(criteria.SHIP_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO.Contains(criteria.SOLD_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO.Contains(criteria.SHIP_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP.Contains(criteria.SALES_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO.Contains(criteria.MARKETING_CO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME.Contains(criteria.MARKETING_CO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING.Contains(criteria.MARKETING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME.Contains(criteria.MARKETING_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP.Contains(criteria.MARKETING_ORDER_SAP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME.Contains(criteria.MARKETING_ORDER_SAP_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG.Contains(criteria.SALES_ORG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL.Contains(criteria.DISTRIBUTION_CHANNEL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION.Contains(criteria.DIVITION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE.Contains(criteria.SALES_ORDER_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1.Contains(criteria.HEADER_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2.Contains(criteria.HEADER_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3.Contains(criteria.HEADER_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ASSIGN_SO_HEADER_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByASSIGN_SO_HEADER_ID(Item.ASSIGN_SO_HEADER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByASSIGN_SO_HEADER_ID(Item.ASSIGN_SO_HEADER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER>().Local.FirstOrDefault(f => f.ASSIGN_SO_HEADER_ID == Item.ASSIGN_SO_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER Item, ARTWORKEntities dc) { if (GetChkByASSIGN_SO_HEADER_ID(Item.ASSIGN_SO_HEADER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER.Add(Item); dc.SaveChanges(); } else { var temp = GetByASSIGN_SO_HEADER_ID(Item.ASSIGN_SO_HEADER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER>().Local.FirstOrDefault(f => f.ASSIGN_SO_HEADER_ID == Item.ASSIGN_SO_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER>().Local.FirstOrDefault(f => f.ASSIGN_SO_HEADER_ID == Item.ASSIGN_SO_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER NewItem, ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_ASSIGN_SO_HEADER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByASSIGN_SO_HEADER_ID(int? ASSIGN_SO_HEADER_ID, ARTWORKEntities dc) { var Item = GetByASSIGN_SO_HEADER_ID(ASSIGN_SO_HEADER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM GetByASSIGN_SO_ITEM_ID(int? ASSIGN_SO_ITEM_ID, ARTWORKEntities dc) { if (ASSIGN_SO_ITEM_ID == null || ASSIGN_SO_ITEM_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM where p.ASSIGN_SO_ITEM_ID == ASSIGN_SO_ITEM_ID select p).FirstOrDefault(); }
    private static int? GetChkByASSIGN_SO_ITEM_ID(int? ASSIGN_SO_ITEM_ID, ARTWORKEntities dc) { if (ASSIGN_SO_ITEM_ID == null || ASSIGN_SO_ITEM_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM where p.ASSIGN_SO_ITEM_ID == ASSIGN_SO_ITEM_ID select p.ASSIGN_SO_ITEM_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM> GetByItem(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM> q, ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_ITEM_ID == criteria.ASSIGN_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_HEADER_ID == criteria.ASSIGN_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_SO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_SO_ID == criteria.ARTWORK_PROCESS_SO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM)) { doWork = true; q = (from r in q where r.ITEM == criteria.ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION == criteria.MATERIAL_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_QTY)) { doWork = true; q = (from r in q where r.ORDER_QTY == criteria.ORDER_QTY select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT == criteria.ORDER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_FROM)) { doWork = true; q = (from r in q where r.ETD_DATE_FROM == criteria.ETD_DATE_FROM select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_TO)) { doWork = true; q = (from r in q where r.ETD_DATE_TO == criteria.ETD_DATE_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE == criteria.OLD_MATERIAL_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE == criteria.PACK_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT == criteria.VALUME_PER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT == criteria.VALUME_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT == criteria.SIZE_DRAIN_WT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO == criteria.PROD_INSP_MEMO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE == criteria.REJECTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION == criteria.REJECTION_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT == criteria.PORT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA == criteria.VIA select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO == criteria.IN_TRANSIT_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION == criteria.BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID == criteria.ADDITIONAL_BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION == criteria.ADDITIONAL_BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT == criteria.PRODUCTION_PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE == criteria.ZONE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY == criteria.COUNTRY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY == criteria.PRODUCTION_HIERARCHY select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER == criteria.MRP_CONTROLLER select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK == criteria.STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1 == criteria.ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2 == criteria.ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3 == criteria.ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ASSIGN_SO_ITEM_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM> GetByItemContain(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM> q, ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_ITEM_ID == criteria.ASSIGN_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_HEADER_ID.ToString().Contains(criteria.ASSIGN_SO_HEADER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_SO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_SO_ID.ToString().Contains(criteria.ARTWORK_PROCESS_SO_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION.Contains(criteria.MATERIAL_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT.Contains(criteria.ORDER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE.Contains(criteria.OLD_MATERIAL_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE.Contains(criteria.PACK_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT.Contains(criteria.VALUME_PER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT.Contains(criteria.VALUME_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT.Contains(criteria.SIZE_DRAIN_WT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO.Contains(criteria.PROD_INSP_MEMO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE.Contains(criteria.REJECTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION.Contains(criteria.REJECTION_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT.Contains(criteria.PORT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA.Contains(criteria.VIA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO.Contains(criteria.IN_TRANSIT_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID.Contains(criteria.BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION.Contains(criteria.BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID.Contains(criteria.ADDITIONAL_BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION.Contains(criteria.ADDITIONAL_BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT.Contains(criteria.PRODUCTION_PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE.Contains(criteria.ZONE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY.Contains(criteria.COUNTRY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY.Contains(criteria.PRODUCTION_HIERARCHY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER.Contains(criteria.MRP_CONTROLLER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK.Contains(criteria.STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1.Contains(criteria.ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2.Contains(criteria.ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3.Contains(criteria.ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ASSIGN_SO_ITEM_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByASSIGN_SO_ITEM_ID(Item.ASSIGN_SO_ITEM_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByASSIGN_SO_ITEM_ID(Item.ASSIGN_SO_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM>().Local.FirstOrDefault(f => f.ASSIGN_SO_ITEM_ID == Item.ASSIGN_SO_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM Item, ARTWORKEntities dc) { if (GetChkByASSIGN_SO_ITEM_ID(Item.ASSIGN_SO_ITEM_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM.Add(Item); dc.SaveChanges(); } else { var temp = GetByASSIGN_SO_ITEM_ID(Item.ASSIGN_SO_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM>().Local.FirstOrDefault(f => f.ASSIGN_SO_ITEM_ID == Item.ASSIGN_SO_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM>().Local.FirstOrDefault(f => f.ASSIGN_SO_ITEM_ID == Item.ASSIGN_SO_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM NewItem, ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByASSIGN_SO_ITEM_ID(int? ASSIGN_SO_ITEM_ID, ARTWORKEntities dc) { var Item = GetByASSIGN_SO_ITEM_ID(ASSIGN_SO_ITEM_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT GetByASSIGN_SO_ITEM_COMPONENT_ID(int? ASSIGN_SO_ITEM_COMPONENT_ID, ARTWORKEntities dc) { if (ASSIGN_SO_ITEM_COMPONENT_ID == null || ASSIGN_SO_ITEM_COMPONENT_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT where p.ASSIGN_SO_ITEM_COMPONENT_ID == ASSIGN_SO_ITEM_COMPONENT_ID select p).FirstOrDefault(); }
    private static int? GetChkByASSIGN_SO_ITEM_COMPONENT_ID(int? ASSIGN_SO_ITEM_COMPONENT_ID, ARTWORKEntities dc) { if (ASSIGN_SO_ITEM_COMPONENT_ID == null || ASSIGN_SO_ITEM_COMPONENT_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT where p.ASSIGN_SO_ITEM_COMPONENT_ID == ASSIGN_SO_ITEM_COMPONENT_ID select p.ASSIGN_SO_ITEM_COMPONENT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT> GetByItem(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT> q, ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_ITEM_COMPONENT_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_ITEM_COMPONENT_ID == criteria.ASSIGN_SO_ITEM_COMPONENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_ITEM_ID == criteria.ASSIGN_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_SO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_SO_ID == criteria.ARTWORK_PROCESS_SO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM == criteria.COMPONENT_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL == criteria.COMPONENT_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION == criteria.DECRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.QUANTITY)) { doWork = true; q = (from r in q where r.QUANTITY == criteria.QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT == criteria.UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK == criteria.STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1 == criteria.BOM_ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2 == criteria.BOM_ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3 == criteria.BOM_ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ASSIGN_SO_ITEM_COMPONENT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT> GetByItemContain(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT> q, ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_ITEM_COMPONENT_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_ITEM_COMPONENT_ID == criteria.ASSIGN_SO_ITEM_COMPONENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_ITEM_ID.ToString().Contains(criteria.ASSIGN_SO_ITEM_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_SO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_SO_ID.ToString().Contains(criteria.ARTWORK_PROCESS_SO_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM.Contains(criteria.COMPONENT_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL.Contains(criteria.COMPONENT_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION.Contains(criteria.DECRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT.Contains(criteria.UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK.Contains(criteria.STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1.Contains(criteria.BOM_ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2.Contains(criteria.BOM_ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3.Contains(criteria.BOM_ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ASSIGN_SO_ITEM_COMPONENT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByASSIGN_SO_ITEM_COMPONENT_ID(Item.ASSIGN_SO_ITEM_COMPONENT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByASSIGN_SO_ITEM_COMPONENT_ID(Item.ASSIGN_SO_ITEM_COMPONENT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT>().Local.FirstOrDefault(f => f.ASSIGN_SO_ITEM_COMPONENT_ID == Item.ASSIGN_SO_ITEM_COMPONENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT Item, ARTWORKEntities dc) { if (GetChkByASSIGN_SO_ITEM_COMPONENT_ID(Item.ASSIGN_SO_ITEM_COMPONENT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT.Add(Item); dc.SaveChanges(); } else { var temp = GetByASSIGN_SO_ITEM_COMPONENT_ID(Item.ASSIGN_SO_ITEM_COMPONENT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT>().Local.FirstOrDefault(f => f.ASSIGN_SO_ITEM_COMPONENT_ID == Item.ASSIGN_SO_ITEM_COMPONENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT>().Local.FirstOrDefault(f => f.ASSIGN_SO_ITEM_COMPONENT_ID == Item.ASSIGN_SO_ITEM_COMPONENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT NewItem, ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_ASSIGN_SO_ITEM_COMPONENT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByASSIGN_SO_ITEM_COMPONENT_ID(int? ASSIGN_SO_ITEM_COMPONENT_ID, ARTWORKEntities dc) { var Item = GetByASSIGN_SO_ITEM_COMPONENT_ID(ASSIGN_SO_ITEM_COMPONENT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT GetByASSIGN_SO_LONG_TEXT_ID(int? ASSIGN_SO_LONG_TEXT_ID, ARTWORKEntities dc) { if (ASSIGN_SO_LONG_TEXT_ID == null || ASSIGN_SO_LONG_TEXT_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT where p.ASSIGN_SO_LONG_TEXT_ID == ASSIGN_SO_LONG_TEXT_ID select p).FirstOrDefault(); }
    private static int? GetChkByASSIGN_SO_LONG_TEXT_ID(int? ASSIGN_SO_LONG_TEXT_ID, ARTWORKEntities dc) { if (ASSIGN_SO_LONG_TEXT_ID == null || ASSIGN_SO_LONG_TEXT_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT where p.ASSIGN_SO_LONG_TEXT_ID == ASSIGN_SO_LONG_TEXT_ID select p.ASSIGN_SO_LONG_TEXT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT> GetByItem(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT> q, ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_LONG_TEXT_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_LONG_TEXT_ID == criteria.ASSIGN_SO_LONG_TEXT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_SO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_SO_ID == criteria.ARTWORK_PROCESS_SO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEXT_NAME)) { doWork = true; q = (from r in q where r.TEXT_NAME == criteria.TEXT_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEXT_ID)) { doWork = true; q = (from r in q where r.TEXT_ID == criteria.TEXT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEXT_LANGUAGE)) { doWork = true; q = (from r in q where r.TEXT_LANGUAGE == criteria.TEXT_LANGUAGE select r); } if (!CheckValue.EqualsDefaultValue(criteria.LINE_ID)) { doWork = true; q = (from r in q where r.LINE_ID == criteria.LINE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.LINE_TEXT)) { doWork = true; q = (from r in q where r.LINE_TEXT == criteria.LINE_TEXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ASSIGN_SO_LONG_TEXT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT> GetByItemContain(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT> q, ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_LONG_TEXT_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_LONG_TEXT_ID == criteria.ASSIGN_SO_LONG_TEXT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_SO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_SO_ID.ToString().Contains(criteria.ARTWORK_PROCESS_SO_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEXT_NAME)) { doWork = true; q = (from r in q where r.TEXT_NAME.Contains(criteria.TEXT_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEXT_ID)) { doWork = true; q = (from r in q where r.TEXT_ID.Contains(criteria.TEXT_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEXT_LANGUAGE)) { doWork = true; q = (from r in q where r.TEXT_LANGUAGE.Contains(criteria.TEXT_LANGUAGE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LINE_ID)) { doWork = true; q = (from r in q where r.LINE_ID.ToString().Contains(criteria.LINE_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LINE_TEXT)) { doWork = true; q = (from r in q where r.LINE_TEXT.Contains(criteria.LINE_TEXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ASSIGN_SO_LONG_TEXT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByASSIGN_SO_LONG_TEXT_ID(Item.ASSIGN_SO_LONG_TEXT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByASSIGN_SO_LONG_TEXT_ID(Item.ASSIGN_SO_LONG_TEXT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT>().Local.FirstOrDefault(f => f.ASSIGN_SO_LONG_TEXT_ID == Item.ASSIGN_SO_LONG_TEXT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT Item, ARTWORKEntities dc) { if (GetChkByASSIGN_SO_LONG_TEXT_ID(Item.ASSIGN_SO_LONG_TEXT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT.Add(Item); dc.SaveChanges(); } else { var temp = GetByASSIGN_SO_LONG_TEXT_ID(Item.ASSIGN_SO_LONG_TEXT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT>().Local.FirstOrDefault(f => f.ASSIGN_SO_LONG_TEXT_ID == Item.ASSIGN_SO_LONG_TEXT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT>().Local.FirstOrDefault(f => f.ASSIGN_SO_LONG_TEXT_ID == Item.ASSIGN_SO_LONG_TEXT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT NewItem, ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_ASSIGN_SO_LONG_TEXT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByASSIGN_SO_LONG_TEXT_ID(int? ASSIGN_SO_LONG_TEXT_ID, ARTWORKEntities dc) { var Item = GetByASSIGN_SO_LONG_TEXT_ID(ASSIGN_SO_LONG_TEXT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_CUSTOMER_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_CUSTOMER GetByARTWORK_PROCESS_CUSTOMER_ID(int? ARTWORK_PROCESS_CUSTOMER_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_CUSTOMER_ID == null || ARTWORK_PROCESS_CUSTOMER_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_CUSTOMER where p.ARTWORK_PROCESS_CUSTOMER_ID == ARTWORK_PROCESS_CUSTOMER_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_CUSTOMER_ID(int? ARTWORK_PROCESS_CUSTOMER_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_CUSTOMER_ID == null || ARTWORK_PROCESS_CUSTOMER_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_CUSTOMER where p.ARTWORK_PROCESS_CUSTOMER_ID == ARTWORK_PROCESS_CUSTOMER_ID select p.ARTWORK_PROCESS_CUSTOMER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_CUSTOMER> GetByItem(ART_WF_ARTWORK_PROCESS_CUSTOMER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_CUSTOMER>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_CUSTOMER select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_CUSTOMER> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_CUSTOMER> q, ART_WF_ARTWORK_PROCESS_CUSTOMER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_CUSTOMER_ID == criteria.ARTWORK_PROCESS_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION_ACTION)) { doWork = true; q = (from r in q where r.DECISION_ACTION == criteria.DECISION_ACTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.APPROVE_SHADE_LIMIT)) { doWork = true; q = (from r in q where r.APPROVE_SHADE_LIMIT == criteria.APPROVE_SHADE_LIMIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION__CHANGE_DETAIL)) { doWork = true; q = (from r in q where r.DECISION__CHANGE_DETAIL == criteria.DECISION__CHANGE_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_CHANGE_DETAIL)) { doWork = true; q = (from r in q where r.COMMENT_CHANGE_DETAIL == criteria.COMMENT_CHANGE_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION__NONCOMPLIANCE)) { doWork = true; q = (from r in q where r.DECISION__NONCOMPLIANCE == criteria.DECISION__NONCOMPLIANCE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_NONCOMPLIANCE)) { doWork = true; q = (from r in q where r.COMMENT_NONCOMPLIANCE == criteria.COMMENT_NONCOMPLIANCE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION__ADJUST)) { doWork = true; q = (from r in q where r.DECISION__ADJUST == criteria.DECISION__ADJUST select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_ADJUST)) { doWork = true; q = (from r in q where r.COMMENT_ADJUST == criteria.COMMENT_ADJUST select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_CUSTOMER_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_CUSTOMER> GetByItemContain(ART_WF_ARTWORK_PROCESS_CUSTOMER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_CUSTOMER>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_CUSTOMER select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_CUSTOMER> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_CUSTOMER> q, ART_WF_ARTWORK_PROCESS_CUSTOMER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_CUSTOMER_ID == criteria.ARTWORK_PROCESS_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION_ACTION)) { doWork = true; q = (from r in q where r.DECISION_ACTION.Contains(criteria.DECISION_ACTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.APPROVE_SHADE_LIMIT)) { doWork = true; q = (from r in q where r.APPROVE_SHADE_LIMIT.Contains(criteria.APPROVE_SHADE_LIMIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION__CHANGE_DETAIL)) { doWork = true; q = (from r in q where r.DECISION__CHANGE_DETAIL.Contains(criteria.DECISION__CHANGE_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_CHANGE_DETAIL)) { doWork = true; q = (from r in q where r.COMMENT_CHANGE_DETAIL.Contains(criteria.COMMENT_CHANGE_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION__NONCOMPLIANCE)) { doWork = true; q = (from r in q where r.DECISION__NONCOMPLIANCE.Contains(criteria.DECISION__NONCOMPLIANCE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_NONCOMPLIANCE)) { doWork = true; q = (from r in q where r.COMMENT_NONCOMPLIANCE.Contains(criteria.COMMENT_NONCOMPLIANCE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION__ADJUST)) { doWork = true; q = (from r in q where r.DECISION__ADJUST.Contains(criteria.DECISION__ADJUST) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_ADJUST)) { doWork = true; q = (from r in q where r.COMMENT_ADJUST.Contains(criteria.COMMENT_ADJUST) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_CUSTOMER_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_CUSTOMER> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_CUSTOMER select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_CUSTOMER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_CUSTOMER_ID(Item.ARTWORK_PROCESS_CUSTOMER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_CUSTOMER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_CUSTOMER_ID(Item.ARTWORK_PROCESS_CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_CUSTOMER>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_CUSTOMER_ID == Item.ARTWORK_PROCESS_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_CUSTOMER Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_CUSTOMER_ID(Item.ARTWORK_PROCESS_CUSTOMER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_CUSTOMER.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_CUSTOMER_ID(Item.ARTWORK_PROCESS_CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_CUSTOMER>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_CUSTOMER_ID == Item.ARTWORK_PROCESS_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_CUSTOMER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_CUSTOMER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_CUSTOMER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_CUSTOMER>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_CUSTOMER_ID == Item.ARTWORK_PROCESS_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_CUSTOMER NewItem, ART_WF_ARTWORK_PROCESS_CUSTOMER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_CUSTOMER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_CUSTOMER_ID(int? ARTWORK_PROCESS_CUSTOMER_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_CUSTOMER_ID(ARTWORK_PROCESS_CUSTOMER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA GetByARTWORK_PROCESS_CUSTOMER_ID(int? ARTWORK_PROCESS_CUSTOMER_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_CUSTOMER_ID == null || ARTWORK_PROCESS_CUSTOMER_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA where p.ARTWORK_PROCESS_CUSTOMER_ID == ARTWORK_PROCESS_CUSTOMER_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_CUSTOMER_ID(int? ARTWORK_PROCESS_CUSTOMER_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_CUSTOMER_ID == null || ARTWORK_PROCESS_CUSTOMER_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA where p.ARTWORK_PROCESS_CUSTOMER_ID == ARTWORK_PROCESS_CUSTOMER_ID select p.ARTWORK_PROCESS_CUSTOMER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA> GetByItem(ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA> q, ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_CUSTOMER_ID == criteria.ARTWORK_PROCESS_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_FORMLABEL)) { doWork = true; q = (from r in q where r.IS_FORMLABEL == criteria.IS_FORMLABEL select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_CHANGEDETAIL)) { doWork = true; q = (from r in q where r.IS_CHANGEDETAIL == criteria.IS_CHANGEDETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_NONCOMPLIANCE)) { doWork = true; q = (from r in q where r.IS_NONCOMPLIANCE == criteria.IS_NONCOMPLIANCE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ADJUST)) { doWork = true; q = (from r in q where r.IS_ADJUST == criteria.IS_ADJUST select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEND_TO_CUSTOMER_TYPE)) { doWork = true; q = (from r in q where r.SEND_TO_CUSTOMER_TYPE == criteria.SEND_TO_CUSTOMER_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION_COMMENT)) { doWork = true; q = (from r in q where r.NUTRITION_COMMENT == criteria.NUTRITION_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS_COMMENT)) { doWork = true; q = (from r in q where r.INGREDIENTS_COMMENT == criteria.INGREDIENTS_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS_COMMENT)) { doWork = true; q = (from r in q where r.ANALYSIS_COMMENT == criteria.ANALYSIS_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM_COMMENT)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM_COMMENT == criteria.HEALTH_CLAIM_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM_COMMENT)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM_COMMENT == criteria.NUTRIENT_CLAIM_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES_COMMENT)) { doWork = true; q = (from r in q where r.SPECIES_COMMENT == criteria.SPECIES_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA_COMMENT)) { doWork = true; q = (from r in q where r.CATCHING_AREA_COMMENT == criteria.CATCHING_AREA_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL_COMMENT)) { doWork = true; q = (from r in q where r.CHECK_DETAIL_COMMENT == criteria.CHECK_DETAIL_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.COURIER_NAME)) { doWork = true; q = (from r in q where r.COURIER_NAME == criteria.COURIER_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_ADJUST)) { doWork = true; q = (from r in q where r.COMMENT_ADJUST == criteria.COMMENT_ADJUST select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_NONCOMPLIANCE)) { doWork = true; q = (from r in q where r.COMMENT_NONCOMPLIANCE == criteria.COMMENT_NONCOMPLIANCE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_FORM_LABEL)) { doWork = true; q = (from r in q where r.COMMENT_FORM_LABEL == criteria.COMMENT_FORM_LABEL select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.QC_COMMENT)) { doWork = true; q = (from r in q where r.QC_COMMENT == criteria.QC_COMMENT select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_CUSTOMER_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA> GetByItemContain(ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA> q, ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_CUSTOMER_ID == criteria.ARTWORK_PROCESS_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_FORMLABEL)) { doWork = true; q = (from r in q where r.IS_FORMLABEL.Contains(criteria.IS_FORMLABEL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_CHANGEDETAIL)) { doWork = true; q = (from r in q where r.IS_CHANGEDETAIL.Contains(criteria.IS_CHANGEDETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_NONCOMPLIANCE)) { doWork = true; q = (from r in q where r.IS_NONCOMPLIANCE.Contains(criteria.IS_NONCOMPLIANCE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ADJUST)) { doWork = true; q = (from r in q where r.IS_ADJUST.Contains(criteria.IS_ADJUST) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEND_TO_CUSTOMER_TYPE)) { doWork = true; q = (from r in q where r.SEND_TO_CUSTOMER_TYPE.Contains(criteria.SEND_TO_CUSTOMER_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION_COMMENT)) { doWork = true; q = (from r in q where r.NUTRITION_COMMENT.Contains(criteria.NUTRITION_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS_COMMENT)) { doWork = true; q = (from r in q where r.INGREDIENTS_COMMENT.Contains(criteria.INGREDIENTS_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS_COMMENT)) { doWork = true; q = (from r in q where r.ANALYSIS_COMMENT.Contains(criteria.ANALYSIS_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM_COMMENT)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM_COMMENT.Contains(criteria.HEALTH_CLAIM_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM_COMMENT)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM_COMMENT.Contains(criteria.NUTRIENT_CLAIM_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES_COMMENT)) { doWork = true; q = (from r in q where r.SPECIES_COMMENT.Contains(criteria.SPECIES_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA_COMMENT)) { doWork = true; q = (from r in q where r.CATCHING_AREA_COMMENT.Contains(criteria.CATCHING_AREA_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL_COMMENT)) { doWork = true; q = (from r in q where r.CHECK_DETAIL_COMMENT.Contains(criteria.CHECK_DETAIL_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COURIER_NAME)) { doWork = true; q = (from r in q where r.COURIER_NAME.Contains(criteria.COURIER_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_ADJUST)) { doWork = true; q = (from r in q where r.COMMENT_ADJUST.Contains(criteria.COMMENT_ADJUST) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_NONCOMPLIANCE)) { doWork = true; q = (from r in q where r.COMMENT_NONCOMPLIANCE.Contains(criteria.COMMENT_NONCOMPLIANCE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_FORM_LABEL)) { doWork = true; q = (from r in q where r.COMMENT_FORM_LABEL.Contains(criteria.COMMENT_FORM_LABEL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.QC_COMMENT)) { doWork = true; q = (from r in q where r.QC_COMMENT.Contains(criteria.QC_COMMENT) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_CUSTOMER_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_CUSTOMER_ID(Item.ARTWORK_PROCESS_CUSTOMER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_CUSTOMER_ID(Item.ARTWORK_PROCESS_CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_CUSTOMER_ID == Item.ARTWORK_PROCESS_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_CUSTOMER_ID(Item.ARTWORK_PROCESS_CUSTOMER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_CUSTOMER_ID(Item.ARTWORK_PROCESS_CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_CUSTOMER_ID == Item.ARTWORK_PROCESS_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_CUSTOMER_ID == Item.ARTWORK_PROCESS_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA NewItem, ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_CUSTOMER_BY_PA"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_CUSTOMER_ID(int? ARTWORK_PROCESS_CUSTOMER_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_CUSTOMER_ID(ARTWORK_PROCESS_CUSTOMER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_MARKETING_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_MARKETING GetByARTWORK_PROCESS_MARKETING_ID(int? ARTWORK_PROCESS_MARKETING_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_MARKETING_ID == null || ARTWORK_PROCESS_MARKETING_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_MARKETING where p.ARTWORK_PROCESS_MARKETING_ID == ARTWORK_PROCESS_MARKETING_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_MARKETING_ID(int? ARTWORK_PROCESS_MARKETING_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_MARKETING_ID == null || ARTWORK_PROCESS_MARKETING_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_MARKETING where p.ARTWORK_PROCESS_MARKETING_ID == ARTWORK_PROCESS_MARKETING_ID select p.ARTWORK_PROCESS_MARKETING_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_MARKETING> GetByItem(ART_WF_ARTWORK_PROCESS_MARKETING Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_MARKETING>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_MARKETING select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_MARKETING> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_MARKETING> q, ART_WF_ARTWORK_PROCESS_MARKETING criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_MARKETING_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_MARKETING_ID == criteria.ARTWORK_PROCESS_MARKETING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_MARKETING_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_MARKETING> GetByItemContain(ART_WF_ARTWORK_PROCESS_MARKETING Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_MARKETING>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_MARKETING select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_MARKETING> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_MARKETING> q, ART_WF_ARTWORK_PROCESS_MARKETING criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_MARKETING_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_MARKETING_ID == criteria.ARTWORK_PROCESS_MARKETING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_MARKETING_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_MARKETING> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_MARKETING select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_MARKETING Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_MARKETING_ID(Item.ARTWORK_PROCESS_MARKETING_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_MARKETING.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_MARKETING_ID(Item.ARTWORK_PROCESS_MARKETING_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_MARKETING>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_MARKETING_ID == Item.ARTWORK_PROCESS_MARKETING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_MARKETING Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_MARKETING_ID(Item.ARTWORK_PROCESS_MARKETING_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_MARKETING.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_MARKETING_ID(Item.ARTWORK_PROCESS_MARKETING_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_MARKETING>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_MARKETING_ID == Item.ARTWORK_PROCESS_MARKETING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_MARKETING Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_MARKETING.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_MARKETING Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_MARKETING>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_MARKETING_ID == Item.ARTWORK_PROCESS_MARKETING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_MARKETING NewItem, ART_WF_ARTWORK_PROCESS_MARKETING OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_MARKETING"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_MARKETING_ID(int? ARTWORK_PROCESS_MARKETING_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_MARKETING_ID(ARTWORK_PROCESS_MARKETING_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA GetByARTWORK_PROCESS_MARKETING_BY_PA_ID(int? ARTWORK_PROCESS_MARKETING_BY_PA_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_MARKETING_BY_PA_ID == null || ARTWORK_PROCESS_MARKETING_BY_PA_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA where p.ARTWORK_PROCESS_MARKETING_BY_PA_ID == ARTWORK_PROCESS_MARKETING_BY_PA_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_MARKETING_BY_PA_ID(int? ARTWORK_PROCESS_MARKETING_BY_PA_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_MARKETING_BY_PA_ID == null || ARTWORK_PROCESS_MARKETING_BY_PA_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA where p.ARTWORK_PROCESS_MARKETING_BY_PA_ID == ARTWORK_PROCESS_MARKETING_BY_PA_ID select p.ARTWORK_PROCESS_MARKETING_BY_PA_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA> GetByItem(ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA> q, ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_MARKETING_BY_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_MARKETING_BY_PA_ID == criteria.ARTWORK_PROCESS_MARKETING_BY_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_MARKETING_BY_PA_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA> GetByItemContain(ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA> q, ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_MARKETING_BY_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_MARKETING_BY_PA_ID == criteria.ARTWORK_PROCESS_MARKETING_BY_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_MARKETING_BY_PA_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_MARKETING_BY_PA_ID(Item.ARTWORK_PROCESS_MARKETING_BY_PA_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_MARKETING_BY_PA_ID(Item.ARTWORK_PROCESS_MARKETING_BY_PA_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_MARKETING_BY_PA_ID == Item.ARTWORK_PROCESS_MARKETING_BY_PA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_MARKETING_BY_PA_ID(Item.ARTWORK_PROCESS_MARKETING_BY_PA_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_MARKETING_BY_PA_ID(Item.ARTWORK_PROCESS_MARKETING_BY_PA_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_MARKETING_BY_PA_ID == Item.ARTWORK_PROCESS_MARKETING_BY_PA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_MARKETING_BY_PA_ID == Item.ARTWORK_PROCESS_MARKETING_BY_PA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA NewItem, ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_MARKETING_BY_PA"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_MARKETING_BY_PA_ID(int? ARTWORK_PROCESS_MARKETING_BY_PA_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_MARKETING_BY_PA_ID(ARTWORK_PROCESS_MARKETING_BY_PA_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PA_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PA GetByARTWORK_SUB_PA_ID(int? ARTWORK_SUB_PA_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_ID == null || ARTWORK_SUB_PA_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PA where p.ARTWORK_SUB_PA_ID == ARTWORK_SUB_PA_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_SUB_PA_ID(int? ARTWORK_SUB_PA_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_ID == null || ARTWORK_SUB_PA_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PA where p.ARTWORK_SUB_PA_ID == ARTWORK_SUB_PA_ID select p.ARTWORK_SUB_PA_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PA> GetByItem(ART_WF_ARTWORK_PROCESS_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PA> q, ART_WF_ARTWORK_PROCESS_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID == criteria.ARTWORK_SUB_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PA_USER_ID)) { doWork = true; q = (from r in q where r.PA_USER_ID == criteria.PA_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PG_USER_ID)) { doWork = true; q = (from r in q where r.PG_USER_ID == criteria.PG_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_GROUP_ID)) { doWork = true; q = (from r in q where r.MATERIAL_GROUP_ID == criteria.MATERIAL_GROUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO == criteria.MATERIAL_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.RD_REFERENCE_NO_ID)) { doWork = true; q = (from r in q where r.RD_REFERENCE_NO_ID == criteria.RD_REFERENCE_NO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE_ID)) { doWork = true; q = (from r in q where r.PRODUCT_CODE_ID == criteria.PRODUCT_CODE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_ID)) { doWork = true; q = (from r in q where r.TYPE_OF_ID == criteria.TYPE_OF_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_OTHER)) { doWork = true; q = (from r in q where r.TYPE_OF_OTHER == criteria.TYPE_OF_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_ID == criteria.PRIMARY_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER == criteria.PRIMARY_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_ID)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_ID == criteria.CONTAINER_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER == criteria.CONTAINER_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_ID)) { doWork = true; q = (from r in q where r.LID_TYPE_ID == criteria.LID_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER == criteria.LID_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_2_ID)) { doWork = true; q = (from r in q where r.TYPE_OF_2_ID == criteria.TYPE_OF_2_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_2_OTHER)) { doWork = true; q = (from r in q where r.TYPE_OF_2_OTHER == criteria.TYPE_OF_2_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_ID)) { doWork = true; q = (from r in q where r.PACKING_STYLE_ID == criteria.PACKING_STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER == criteria.PACKING_STYLE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_ID)) { doWork = true; q = (from r in q where r.PACK_SIZE_ID == criteria.PACK_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER == criteria.PACK_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT_REGISTERED_ID)) { doWork = true; q = (from r in q where r.PLANT_REGISTERED_ID == criteria.PLANT_REGISTERED_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT_REGISTERED_OTHER)) { doWork = true; q = (from r in q where r.PLANT_REGISTERED_OTHER == criteria.PLANT_REGISTERED_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ADDRESS_ID)) { doWork = true; q = (from r in q where r.COMPANY_ADDRESS_ID == criteria.COMPANY_ADDRESS_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ADDRESS_OTHER)) { doWork = true; q = (from r in q where r.COMPANY_ADDRESS_OTHER == criteria.COMPANY_ADDRESS_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODICUTION_PLANT_ID)) { doWork = true; q = (from r in q where r.PRODICUTION_PLANT_ID == criteria.PRODICUTION_PLANT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODICUTION_PLANT_OTHER)) { doWork = true; q = (from r in q where r.PRODICUTION_PLANT_OTHER == criteria.PRODICUTION_PLANT_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_PERIOD_ID)) { doWork = true; q = (from r in q where r.CATCHING_PERIOD_ID == criteria.CATCHING_PERIOD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_PERIOD_OTHER)) { doWork = true; q = (from r in q where r.CATCHING_PERIOD_OTHER == criteria.CATCHING_PERIOD_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_METHOD_ID)) { doWork = true; q = (from r in q where r.CATCHING_METHOD_ID == criteria.CATCHING_METHOD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_METHOD_OTHER)) { doWork = true; q = (from r in q where r.CATCHING_METHOD_OTHER == criteria.CATCHING_METHOD_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.SCIENTIFIC_NAME_ID)) { doWork = true; q = (from r in q where r.SCIENTIFIC_NAME_ID == criteria.SCIENTIFIC_NAME_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SCIENTIFIC_NAME_OTHER)) { doWork = true; q = (from r in q where r.SCIENTIFIC_NAME_OTHER == criteria.SCIENTIFIC_NAME_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIE_ID)) { doWork = true; q = (from r in q where r.SPECIE_ID == criteria.SPECIE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIE_OTHER)) { doWork = true; q = (from r in q where r.SPECIE_OTHER == criteria.SPECIE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PMS_COLOUR_ID)) { doWork = true; q = (from r in q where r.PMS_COLOUR_ID == criteria.PMS_COLOUR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PMS_COLOUR_OTHER)) { doWork = true; q = (from r in q where r.PMS_COLOUR_OTHER == criteria.PMS_COLOUR_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROCESS_COLOUR_ID)) { doWork = true; q = (from r in q where r.PROCESS_COLOUR_ID == criteria.PROCESS_COLOUR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROCESS_COLOUR_OTHER)) { doWork = true; q = (from r in q where r.PROCESS_COLOUR_OTHER == criteria.PROCESS_COLOUR_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.TOTAL_COLOUR_ID)) { doWork = true; q = (from r in q where r.TOTAL_COLOUR_ID == criteria.TOTAL_COLOUR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TOTAL_COLOUR_OTHER)) { doWork = true; q = (from r in q where r.TOTAL_COLOUR_OTHER == criteria.TOTAL_COLOUR_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OF_PRINTING_ID)) { doWork = true; q = (from r in q where r.STYLE_OF_PRINTING_ID == criteria.STYLE_OF_PRINTING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OF_PRINTING_OTHER)) { doWork = true; q = (from r in q where r.STYLE_OF_PRINTING_OTHER == criteria.STYLE_OF_PRINTING_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIRECTION_OF_STICKER_ID)) { doWork = true; q = (from r in q where r.DIRECTION_OF_STICKER_ID == criteria.DIRECTION_OF_STICKER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIRECTION_OF_STICKER_OTHER)) { doWork = true; q = (from r in q where r.DIRECTION_OF_STICKER_OTHER == criteria.DIRECTION_OF_STICKER_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_PRIMARY_ID)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_PRIMARY_ID == criteria.PRINTING_STYLE_OF_PRIMARY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_PRIMARY_OTHER)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_PRIMARY_OTHER == criteria.PRINTING_STYLE_OF_PRIMARY_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN == criteria.CUSTOMER_DESIGN select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN_OTHER == criteria.CUSTOMER_DESIGN_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC == criteria.CUSTOMER_SPEC select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC_OTHER == criteria.CUSTOMER_SPEC_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE == criteria.CUSTOMER_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE_OTHER == criteria.CUSTOMER_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR == criteria.CUSTOMER_NOMINATES_VENDOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR_OTHER == criteria.CUSTOMER_NOMINATES_VENDOR_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_COLOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_COLOR == criteria.CUSTOMER_NOMINATES_COLOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_COLOR_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_COLOR_OTHER == criteria.CUSTOMER_NOMINATES_COLOR_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SCANABLE)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SCANABLE == criteria.CUSTOMER_BARCODE_SCANABLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SCANABLE_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SCANABLE_OTHER == criteria.CUSTOMER_BARCODE_SCANABLE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SPEC == criteria.CUSTOMER_BARCODE_SPEC select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SPEC_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SPEC_OTHER == criteria.CUSTOMER_BARCODE_SPEC_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_SECONDARY_ID)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_SECONDARY_ID == criteria.PRINTING_STYLE_OF_SECONDARY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_SECONDARY_OTHER)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_SECONDARY_OTHER == criteria.PRINTING_STYLE_OF_SECONDARY_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.FIRST_INFOGROUP_ID)) { doWork = true; q = (from r in q where r.FIRST_INFOGROUP_ID == criteria.FIRST_INFOGROUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.FIRST_INFOGROUP_OTHER)) { doWork = true; q = (from r in q where r.FIRST_INFOGROUP_OTHER == criteria.FIRST_INFOGROUP_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PIC_MKT)) { doWork = true; q = (from r in q where r.PIC_MKT == criteria.PIC_MKT select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPLETE_INFOGROUP)) { doWork = true; q = (from r in q where r.COMPLETE_INFOGROUP == criteria.COMPLETE_INFOGROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOTE_OF_PA)) { doWork = true; q = (from r in q where r.NOTE_OF_PA == criteria.NOTE_OF_PA select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGE_QUANTITY)) { doWork = true; q = (from r in q where r.PACKAGE_QUANTITY == criteria.PACKAGE_QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.WASTE_PERCENT)) { doWork = true; q = (from r in q where r.WASTE_PERCENT == criteria.WASTE_PERCENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.COURIER_NO)) { doWork = true; q = (from r in q where r.COURIER_NO == criteria.COURIER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_EXPIRY_DATE_SYSTEM)) { doWork = true; q = (from r in q where r.PRODUCTION_EXPIRY_DATE_SYSTEM == criteria.PRODUCTION_EXPIRY_DATE_SYSTEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.SERIOUSNESS_OF_COLOR_PRINTING)) { doWork = true; q = (from r in q where r.SERIOUSNESS_OF_COLOR_PRINTING == criteria.SERIOUSNESS_OF_COLOR_PRINTING select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHADE_LIMIT)) { doWork = true; q = (from r in q where r.SHADE_LIMIT == criteria.SHADE_LIMIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION_ANALYSIS)) { doWork = true; q = (from r in q where r.NUTRITION_ANALYSIS == criteria.NUTRITION_ANALYSIS select r); } if (!CheckValue.EqualsDefaultValue(criteria.THREE_P_ID)) { doWork = true; q = (from r in q where r.THREE_P_ID == criteria.THREE_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TWO_P_ID)) { doWork = true; q = (from r in q where r.TWO_P_ID == criteria.TWO_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.READY_CREATE_PO)) { doWork = true; q = (from r in q where r.READY_CREATE_PO == criteria.READY_CREATE_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECEIVE_SHADE_LIMIT)) { doWork = true; q = (from r in q where r.RECEIVE_SHADE_LIMIT == criteria.RECEIVE_SHADE_LIMIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_MATERIAL)) { doWork = true; q = (from r in q where r.REFERENCE_MATERIAL == criteria.REFERENCE_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_MATERIAL_STATUS)) { doWork = true; q = (from r in q where r.REQUEST_MATERIAL_STATUS == criteria.REQUEST_MATERIAL_STATUS select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHANGE_POINT)) { doWork = true; q = (from r in q where r.CHANGE_POINT == criteria.CHANGE_POINT select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_LOCK_PRODUCT_CODE)) { doWork = true; q = (from r in q where r.IS_LOCK_PRODUCT_CODE == criteria.IS_LOCK_PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_RETRIEVE_BY_AW_REPEAT)) { doWork = true; q = (from r in q where r.IS_RETRIEVE_BY_AW_REPEAT == criteria.IS_RETRIEVE_BY_AW_REPEAT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_TYPE)) { doWork = true; q = (from r in q where r.PRODUCT_TYPE == criteria.PRODUCT_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION == criteria.MATERIAL_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.RUNNING)) { doWork = true; q = (from r in q where r.RUNNING == criteria.RUNNING select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA> GetByItemContain(ART_WF_ARTWORK_PROCESS_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PA> q, ART_WF_ARTWORK_PROCESS_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID == criteria.ARTWORK_SUB_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO.Contains(criteria.MATERIAL_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_OTHER)) { doWork = true; q = (from r in q where r.TYPE_OF_OTHER.Contains(criteria.TYPE_OF_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER.Contains(criteria.PRIMARY_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER.Contains(criteria.CONTAINER_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER.Contains(criteria.LID_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_2_OTHER)) { doWork = true; q = (from r in q where r.TYPE_OF_2_OTHER.Contains(criteria.TYPE_OF_2_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER.Contains(criteria.PACKING_STYLE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER.Contains(criteria.PACK_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT_REGISTERED_OTHER)) { doWork = true; q = (from r in q where r.PLANT_REGISTERED_OTHER.Contains(criteria.PLANT_REGISTERED_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ADDRESS_OTHER)) { doWork = true; q = (from r in q where r.COMPANY_ADDRESS_OTHER.Contains(criteria.COMPANY_ADDRESS_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODICUTION_PLANT_OTHER)) { doWork = true; q = (from r in q where r.PRODICUTION_PLANT_OTHER.Contains(criteria.PRODICUTION_PLANT_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_PERIOD_OTHER)) { doWork = true; q = (from r in q where r.CATCHING_PERIOD_OTHER.Contains(criteria.CATCHING_PERIOD_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_METHOD_OTHER)) { doWork = true; q = (from r in q where r.CATCHING_METHOD_OTHER.Contains(criteria.CATCHING_METHOD_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SCIENTIFIC_NAME_OTHER)) { doWork = true; q = (from r in q where r.SCIENTIFIC_NAME_OTHER.Contains(criteria.SCIENTIFIC_NAME_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIE_OTHER)) { doWork = true; q = (from r in q where r.SPECIE_OTHER.Contains(criteria.SPECIE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PMS_COLOUR_OTHER)) { doWork = true; q = (from r in q where r.PMS_COLOUR_OTHER.Contains(criteria.PMS_COLOUR_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROCESS_COLOUR_OTHER)) { doWork = true; q = (from r in q where r.PROCESS_COLOUR_OTHER.Contains(criteria.PROCESS_COLOUR_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TOTAL_COLOUR_OTHER)) { doWork = true; q = (from r in q where r.TOTAL_COLOUR_OTHER.Contains(criteria.TOTAL_COLOUR_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OF_PRINTING_OTHER)) { doWork = true; q = (from r in q where r.STYLE_OF_PRINTING_OTHER.Contains(criteria.STYLE_OF_PRINTING_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIRECTION_OF_STICKER_OTHER)) { doWork = true; q = (from r in q where r.DIRECTION_OF_STICKER_OTHER.Contains(criteria.DIRECTION_OF_STICKER_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_PRIMARY_OTHER)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_PRIMARY_OTHER.Contains(criteria.PRINTING_STYLE_OF_PRIMARY_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN.Contains(criteria.CUSTOMER_DESIGN) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN_OTHER.Contains(criteria.CUSTOMER_DESIGN_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC.Contains(criteria.CUSTOMER_SPEC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC_OTHER.Contains(criteria.CUSTOMER_SPEC_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE.Contains(criteria.CUSTOMER_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE_OTHER.Contains(criteria.CUSTOMER_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR.Contains(criteria.CUSTOMER_NOMINATES_VENDOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR_OTHER.Contains(criteria.CUSTOMER_NOMINATES_VENDOR_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_COLOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_COLOR.Contains(criteria.CUSTOMER_NOMINATES_COLOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_COLOR_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_COLOR_OTHER.Contains(criteria.CUSTOMER_NOMINATES_COLOR_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SCANABLE)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SCANABLE.Contains(criteria.CUSTOMER_BARCODE_SCANABLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SCANABLE_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SCANABLE_OTHER.Contains(criteria.CUSTOMER_BARCODE_SCANABLE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SPEC.Contains(criteria.CUSTOMER_BARCODE_SPEC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SPEC_OTHER)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SPEC_OTHER.Contains(criteria.CUSTOMER_BARCODE_SPEC_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_SECONDARY_OTHER)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_SECONDARY_OTHER.Contains(criteria.PRINTING_STYLE_OF_SECONDARY_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FIRST_INFOGROUP_OTHER)) { doWork = true; q = (from r in q where r.FIRST_INFOGROUP_OTHER.Contains(criteria.FIRST_INFOGROUP_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PIC_MKT)) { doWork = true; q = (from r in q where r.PIC_MKT.Contains(criteria.PIC_MKT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPLETE_INFOGROUP)) { doWork = true; q = (from r in q where r.COMPLETE_INFOGROUP.Contains(criteria.COMPLETE_INFOGROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOTE_OF_PA)) { doWork = true; q = (from r in q where r.NOTE_OF_PA.Contains(criteria.NOTE_OF_PA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGE_QUANTITY)) { doWork = true; q = (from r in q where r.PACKAGE_QUANTITY.Contains(criteria.PACKAGE_QUANTITY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.WASTE_PERCENT)) { doWork = true; q = (from r in q where r.WASTE_PERCENT.Contains(criteria.WASTE_PERCENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COURIER_NO)) { doWork = true; q = (from r in q where r.COURIER_NO.Contains(criteria.COURIER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_EXPIRY_DATE_SYSTEM)) { doWork = true; q = (from r in q where r.PRODUCTION_EXPIRY_DATE_SYSTEM.Contains(criteria.PRODUCTION_EXPIRY_DATE_SYSTEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SERIOUSNESS_OF_COLOR_PRINTING)) { doWork = true; q = (from r in q where r.SERIOUSNESS_OF_COLOR_PRINTING.Contains(criteria.SERIOUSNESS_OF_COLOR_PRINTING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHADE_LIMIT)) { doWork = true; q = (from r in q where r.SHADE_LIMIT.Contains(criteria.SHADE_LIMIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION_ANALYSIS)) { doWork = true; q = (from r in q where r.NUTRITION_ANALYSIS.Contains(criteria.NUTRITION_ANALYSIS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.READY_CREATE_PO)) { doWork = true; q = (from r in q where r.READY_CREATE_PO.Contains(criteria.READY_CREATE_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECEIVE_SHADE_LIMIT)) { doWork = true; q = (from r in q where r.RECEIVE_SHADE_LIMIT.Contains(criteria.RECEIVE_SHADE_LIMIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_MATERIAL)) { doWork = true; q = (from r in q where r.REFERENCE_MATERIAL.Contains(criteria.REFERENCE_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_MATERIAL_STATUS)) { doWork = true; q = (from r in q where r.REQUEST_MATERIAL_STATUS.Contains(criteria.REQUEST_MATERIAL_STATUS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHANGE_POINT)) { doWork = true; q = (from r in q where r.CHANGE_POINT.Contains(criteria.CHANGE_POINT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_LOCK_PRODUCT_CODE)) { doWork = true; q = (from r in q where r.IS_LOCK_PRODUCT_CODE.Contains(criteria.IS_LOCK_PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_RETRIEVE_BY_AW_REPEAT)) { doWork = true; q = (from r in q where r.IS_RETRIEVE_BY_AW_REPEAT.Contains(criteria.IS_RETRIEVE_BY_AW_REPEAT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_TYPE)) { doWork = true; q = (from r in q where r.PRODUCT_TYPE.Contains(criteria.PRODUCT_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION.Contains(criteria.MATERIAL_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RUNNING)) { doWork = true; q = (from r in q where r.RUNNING.Contains(criteria.RUNNING) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PA select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PA Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_SUB_PA_ID(Item.ARTWORK_SUB_PA_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_SUB_PA_ID(Item.ARTWORK_SUB_PA_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_ID == Item.ARTWORK_SUB_PA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PA Item, ARTWORKEntities dc) { if (GetChkByARTWORK_SUB_PA_ID(Item.ARTWORK_SUB_PA_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_SUB_PA_ID(Item.ARTWORK_SUB_PA_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_ID == Item.ARTWORK_SUB_PA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PA Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PA Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_ID == Item.ARTWORK_SUB_PA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PA NewItem, ART_WF_ARTWORK_PROCESS_PA OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PA"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_SUB_PA_ID(int? ARTWORK_SUB_PA_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_SUB_PA_ID(ARTWORK_SUB_PA_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA GetByARTWORK_SUB_PA_CATCHING_AREA_ID(int? ARTWORK_SUB_PA_CATCHING_AREA_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_CATCHING_AREA_ID == null || ARTWORK_SUB_PA_CATCHING_AREA_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA where p.ARTWORK_SUB_PA_CATCHING_AREA_ID == ARTWORK_SUB_PA_CATCHING_AREA_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_SUB_PA_CATCHING_AREA_ID(int? ARTWORK_SUB_PA_CATCHING_AREA_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_CATCHING_AREA_ID == null || ARTWORK_SUB_PA_CATCHING_AREA_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA where p.ARTWORK_SUB_PA_CATCHING_AREA_ID == ARTWORK_SUB_PA_CATCHING_AREA_ID select p.ARTWORK_SUB_PA_CATCHING_AREA_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA> GetByItem(ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA> q, ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_CATCHING_AREA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_CATCHING_AREA_ID == criteria.ARTWORK_SUB_PA_CATCHING_AREA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID == criteria.ARTWORK_SUB_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA_ID)) { doWork = true; q = (from r in q where r.CATCHING_AREA_ID == criteria.CATCHING_AREA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA_OTHER)) { doWork = true; q = (from r in q where r.CATCHING_AREA_OTHER == criteria.CATCHING_AREA_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_CATCHING_AREA_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA> GetByItemContain(ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA> q, ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_CATCHING_AREA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_CATCHING_AREA_ID == criteria.ARTWORK_SUB_PA_CATCHING_AREA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID.ToString().Contains(criteria.ARTWORK_SUB_PA_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA_ID)) { doWork = true; q = (from r in q where r.CATCHING_AREA_ID.ToString().Contains(criteria.CATCHING_AREA_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA_OTHER)) { doWork = true; q = (from r in q where r.CATCHING_AREA_OTHER.Contains(criteria.CATCHING_AREA_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_CATCHING_AREA_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_SUB_PA_CATCHING_AREA_ID(Item.ARTWORK_SUB_PA_CATCHING_AREA_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_SUB_PA_CATCHING_AREA_ID(Item.ARTWORK_SUB_PA_CATCHING_AREA_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_CATCHING_AREA_ID == Item.ARTWORK_SUB_PA_CATCHING_AREA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA Item, ARTWORKEntities dc) { if (GetChkByARTWORK_SUB_PA_CATCHING_AREA_ID(Item.ARTWORK_SUB_PA_CATCHING_AREA_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_SUB_PA_CATCHING_AREA_ID(Item.ARTWORK_SUB_PA_CATCHING_AREA_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_CATCHING_AREA_ID == Item.ARTWORK_SUB_PA_CATCHING_AREA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_CATCHING_AREA_ID == Item.ARTWORK_SUB_PA_CATCHING_AREA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA NewItem, ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PA_CATCHING_AREA"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_SUB_PA_CATCHING_AREA_ID(int? ARTWORK_SUB_PA_CATCHING_AREA_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_SUB_PA_CATCHING_AREA_ID(ARTWORK_SUB_PA_CATCHING_AREA_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD GetByARTWORK_SUB_PA_CATCHING_METHOD_ID(int? ARTWORK_SUB_PA_CATCHING_METHOD_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_CATCHING_METHOD_ID == null || ARTWORK_SUB_PA_CATCHING_METHOD_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD where p.ARTWORK_SUB_PA_CATCHING_METHOD_ID == ARTWORK_SUB_PA_CATCHING_METHOD_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_SUB_PA_CATCHING_METHOD_ID(int? ARTWORK_SUB_PA_CATCHING_METHOD_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_CATCHING_METHOD_ID == null || ARTWORK_SUB_PA_CATCHING_METHOD_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD where p.ARTWORK_SUB_PA_CATCHING_METHOD_ID == ARTWORK_SUB_PA_CATCHING_METHOD_ID select p.ARTWORK_SUB_PA_CATCHING_METHOD_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD> GetByItem(ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD> q, ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_CATCHING_METHOD_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_CATCHING_METHOD_ID == criteria.ARTWORK_SUB_PA_CATCHING_METHOD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID == criteria.ARTWORK_SUB_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_METHOD_ID)) { doWork = true; q = (from r in q where r.CATCHING_METHOD_ID == criteria.CATCHING_METHOD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_METHOD_OTHER)) { doWork = true; q = (from r in q where r.CATCHING_METHOD_OTHER == criteria.CATCHING_METHOD_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_CATCHING_METHOD_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD> GetByItemContain(ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD> q, ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_CATCHING_METHOD_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_CATCHING_METHOD_ID == criteria.ARTWORK_SUB_PA_CATCHING_METHOD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_METHOD_OTHER)) { doWork = true; q = (from r in q where r.CATCHING_METHOD_OTHER.Contains(criteria.CATCHING_METHOD_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_CATCHING_METHOD_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_SUB_PA_CATCHING_METHOD_ID(Item.ARTWORK_SUB_PA_CATCHING_METHOD_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_SUB_PA_CATCHING_METHOD_ID(Item.ARTWORK_SUB_PA_CATCHING_METHOD_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_CATCHING_METHOD_ID == Item.ARTWORK_SUB_PA_CATCHING_METHOD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD Item, ARTWORKEntities dc) { if (GetChkByARTWORK_SUB_PA_CATCHING_METHOD_ID(Item.ARTWORK_SUB_PA_CATCHING_METHOD_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_SUB_PA_CATCHING_METHOD_ID(Item.ARTWORK_SUB_PA_CATCHING_METHOD_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_CATCHING_METHOD_ID == Item.ARTWORK_SUB_PA_CATCHING_METHOD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_CATCHING_METHOD_ID == Item.ARTWORK_SUB_PA_CATCHING_METHOD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD NewItem, ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PA_CATCHING_METHOD"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_SUB_PA_CATCHING_METHOD_ID(int? ARTWORK_SUB_PA_CATCHING_METHOD_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_SUB_PA_CATCHING_METHOD_ID(ARTWORK_SUB_PA_CATCHING_METHOD_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE GetByARTWORK_SUB_PA_FAO_ID(int? ARTWORK_SUB_PA_FAO_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_FAO_ID == null || ARTWORK_SUB_PA_FAO_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE where p.ARTWORK_SUB_PA_FAO_ID == ARTWORK_SUB_PA_FAO_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_SUB_PA_FAO_ID(int? ARTWORK_SUB_PA_FAO_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_FAO_ID == null || ARTWORK_SUB_PA_FAO_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE where p.ARTWORK_SUB_PA_FAO_ID == ARTWORK_SUB_PA_FAO_ID select p.ARTWORK_SUB_PA_FAO_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE> GetByItem(ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE> q, ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_FAO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_FAO_ID == criteria.ARTWORK_SUB_PA_FAO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID == criteria.ARTWORK_SUB_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.FAO_ZONE_ID)) { doWork = true; q = (from r in q where r.FAO_ZONE_ID == criteria.FAO_ZONE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.FAO_ZONE_OTHER)) { doWork = true; q = (from r in q where r.FAO_ZONE_OTHER == criteria.FAO_ZONE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_FAO_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE> GetByItemContain(ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE> q, ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_FAO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_FAO_ID == criteria.ARTWORK_SUB_PA_FAO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID.ToString().Contains(criteria.ARTWORK_SUB_PA_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FAO_ZONE_ID)) { doWork = true; q = (from r in q where r.FAO_ZONE_ID.ToString().Contains(criteria.FAO_ZONE_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FAO_ZONE_OTHER)) { doWork = true; q = (from r in q where r.FAO_ZONE_OTHER.Contains(criteria.FAO_ZONE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_FAO_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_SUB_PA_FAO_ID(Item.ARTWORK_SUB_PA_FAO_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_SUB_PA_FAO_ID(Item.ARTWORK_SUB_PA_FAO_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_FAO_ID == Item.ARTWORK_SUB_PA_FAO_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE Item, ARTWORKEntities dc) { if (GetChkByARTWORK_SUB_PA_FAO_ID(Item.ARTWORK_SUB_PA_FAO_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_SUB_PA_FAO_ID(Item.ARTWORK_SUB_PA_FAO_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_FAO_ID == Item.ARTWORK_SUB_PA_FAO_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_FAO_ID == Item.ARTWORK_SUB_PA_FAO_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE NewItem, ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PA_FAO_ZONE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_SUB_PA_FAO_ID(int? ARTWORK_SUB_PA_FAO_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_SUB_PA_FAO_ID(ARTWORK_SUB_PA_FAO_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PA_PLANT_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PA_PLANT GetByARTWORK_SUB_PA_PLANT_ID(int? ARTWORK_SUB_PA_PLANT_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_PLANT_ID == null || ARTWORK_SUB_PA_PLANT_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_PLANT where p.ARTWORK_SUB_PA_PLANT_ID == ARTWORK_SUB_PA_PLANT_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_SUB_PA_PLANT_ID(int? ARTWORK_SUB_PA_PLANT_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_PLANT_ID == null || ARTWORK_SUB_PA_PLANT_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PA_PLANT where p.ARTWORK_SUB_PA_PLANT_ID == ARTWORK_SUB_PA_PLANT_ID select p.ARTWORK_SUB_PA_PLANT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PA_PLANT> GetByItem(ART_WF_ARTWORK_PROCESS_PA_PLANT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_PLANT>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PA_PLANT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_PLANT> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PA_PLANT> q, ART_WF_ARTWORK_PROCESS_PA_PLANT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_PLANT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_PLANT_ID == criteria.ARTWORK_SUB_PA_PLANT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID == criteria.ARTWORK_SUB_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT_ID)) { doWork = true; q = (from r in q where r.PLANT_ID == criteria.PLANT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT_OTHER)) { doWork = true; q = (from r in q where r.PLANT_OTHER == criteria.PLANT_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_PLANT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_PLANT> GetByItemContain(ART_WF_ARTWORK_PROCESS_PA_PLANT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_PLANT>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PA_PLANT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_PLANT> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PA_PLANT> q, ART_WF_ARTWORK_PROCESS_PA_PLANT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_PLANT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_PLANT_ID == criteria.ARTWORK_SUB_PA_PLANT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID.ToString().Contains(criteria.ARTWORK_SUB_PA_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT_ID)) { doWork = true; q = (from r in q where r.PLANT_ID.ToString().Contains(criteria.PLANT_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT_OTHER)) { doWork = true; q = (from r in q where r.PLANT_OTHER.Contains(criteria.PLANT_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_PLANT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_PLANT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_PLANT select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PA_PLANT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_SUB_PA_PLANT_ID(Item.ARTWORK_SUB_PA_PLANT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_PLANT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_SUB_PA_PLANT_ID(Item.ARTWORK_SUB_PA_PLANT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_PLANT>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_PLANT_ID == Item.ARTWORK_SUB_PA_PLANT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_PLANT Item, ARTWORKEntities dc) { if (GetChkByARTWORK_SUB_PA_PLANT_ID(Item.ARTWORK_SUB_PA_PLANT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_PLANT.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_SUB_PA_PLANT_ID(Item.ARTWORK_SUB_PA_PLANT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_PLANT>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_PLANT_ID == Item.ARTWORK_SUB_PA_PLANT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PA_PLANT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_PLANT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_PLANT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_PLANT>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_PLANT_ID == Item.ARTWORK_SUB_PA_PLANT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PA_PLANT NewItem, ART_WF_ARTWORK_PROCESS_PA_PLANT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PA_PLANT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_SUB_PA_PLANT_ID(int? ARTWORK_SUB_PA_PLANT_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_SUB_PA_PLANT_ID(ARTWORK_SUB_PA_PLANT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PA_PRODUCT_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PA_PRODUCT GetByARTWORK_SUB_PA_PRODUCT_ID(int? ARTWORK_SUB_PA_PRODUCT_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_PRODUCT_ID == null || ARTWORK_SUB_PA_PRODUCT_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT where p.ARTWORK_SUB_PA_PRODUCT_ID == ARTWORK_SUB_PA_PRODUCT_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_SUB_PA_PRODUCT_ID(int? ARTWORK_SUB_PA_PRODUCT_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_PRODUCT_ID == null || ARTWORK_SUB_PA_PRODUCT_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT where p.ARTWORK_SUB_PA_PRODUCT_ID == ARTWORK_SUB_PA_PRODUCT_ID select p.ARTWORK_SUB_PA_PRODUCT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PA_PRODUCT> GetByItem(ART_WF_ARTWORK_PROCESS_PA_PRODUCT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_PRODUCT>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_PRODUCT> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PA_PRODUCT> q, ART_WF_ARTWORK_PROCESS_PA_PRODUCT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_PRODUCT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_PRODUCT_ID == criteria.ARTWORK_SUB_PA_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID == criteria.ARTWORK_SUB_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_TYPE)) { doWork = true; q = (from r in q where r.PRODUCT_TYPE == criteria.PRODUCT_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.RF_PRODUCT_RD_REF_ID)) { doWork = true; q = (from r in q where r.RF_PRODUCT_RD_REF_ID == criteria.RF_PRODUCT_RD_REF_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE_ID)) { doWork = true; q = (from r in q where r.PRODUCT_CODE_ID == criteria.PRODUCT_CODE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_PRODUCT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_PRODUCT> GetByItemContain(ART_WF_ARTWORK_PROCESS_PA_PRODUCT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_PRODUCT>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_PRODUCT> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PA_PRODUCT> q, ART_WF_ARTWORK_PROCESS_PA_PRODUCT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_PRODUCT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_PRODUCT_ID == criteria.ARTWORK_SUB_PA_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID.ToString().Contains(criteria.ARTWORK_SUB_PA_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_TYPE)) { doWork = true; q = (from r in q where r.PRODUCT_TYPE.Contains(criteria.PRODUCT_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RF_PRODUCT_RD_REF_ID)) { doWork = true; q = (from r in q where r.RF_PRODUCT_RD_REF_ID.Contains(criteria.RF_PRODUCT_RD_REF_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE_ID)) { doWork = true; q = (from r in q where r.PRODUCT_CODE_ID.ToString().Contains(criteria.PRODUCT_CODE_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_PRODUCT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_PRODUCT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PA_PRODUCT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_SUB_PA_PRODUCT_ID(Item.ARTWORK_SUB_PA_PRODUCT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_SUB_PA_PRODUCT_ID(Item.ARTWORK_SUB_PA_PRODUCT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_PRODUCT>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_PRODUCT_ID == Item.ARTWORK_SUB_PA_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_PRODUCT Item, ARTWORKEntities dc) { if (GetChkByARTWORK_SUB_PA_PRODUCT_ID(Item.ARTWORK_SUB_PA_PRODUCT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_SUB_PA_PRODUCT_ID(Item.ARTWORK_SUB_PA_PRODUCT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_PRODUCT>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_PRODUCT_ID == Item.ARTWORK_SUB_PA_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PA_PRODUCT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_PRODUCT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_PRODUCT>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_PRODUCT_ID == Item.ARTWORK_SUB_PA_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PA_PRODUCT NewItem, ART_WF_ARTWORK_PROCESS_PA_PRODUCT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PA_PRODUCT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_SUB_PA_PRODUCT_ID(int? ARTWORK_SUB_PA_PRODUCT_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_SUB_PA_PRODUCT_ID(ARTWORK_SUB_PA_PRODUCT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER GetByARTWORK_SUB_PA_PRODUCT_OTHER_ID(int? ARTWORK_SUB_PA_PRODUCT_OTHER_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_PRODUCT_OTHER_ID == null || ARTWORK_SUB_PA_PRODUCT_OTHER_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER where p.ARTWORK_SUB_PA_PRODUCT_OTHER_ID == ARTWORK_SUB_PA_PRODUCT_OTHER_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_SUB_PA_PRODUCT_OTHER_ID(int? ARTWORK_SUB_PA_PRODUCT_OTHER_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_PRODUCT_OTHER_ID == null || ARTWORK_SUB_PA_PRODUCT_OTHER_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER where p.ARTWORK_SUB_PA_PRODUCT_OTHER_ID == ARTWORK_SUB_PA_PRODUCT_OTHER_ID select p.ARTWORK_SUB_PA_PRODUCT_OTHER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER> GetByItem(ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER> q, ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_PRODUCT_OTHER_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_PRODUCT_OTHER_ID == criteria.ARTWORK_SUB_PA_PRODUCT_OTHER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID == criteria.ARTWORK_SUB_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_TYPE)) { doWork = true; q = (from r in q where r.PRODUCT_TYPE == criteria.PRODUCT_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.RF_PRODUCT_RD_REF_ID)) { doWork = true; q = (from r in q where r.RF_PRODUCT_RD_REF_ID == criteria.RF_PRODUCT_RD_REF_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DRAINED_WEIGHT)) { doWork = true; q = (from r in q where r.DRAINED_WEIGHT == criteria.DRAINED_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_PRODUCT_OTHER_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER> GetByItemContain(ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER> q, ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_PRODUCT_OTHER_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_PRODUCT_OTHER_ID == criteria.ARTWORK_SUB_PA_PRODUCT_OTHER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID.ToString().Contains(criteria.ARTWORK_SUB_PA_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_TYPE)) { doWork = true; q = (from r in q where r.PRODUCT_TYPE.Contains(criteria.PRODUCT_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RF_PRODUCT_RD_REF_ID)) { doWork = true; q = (from r in q where r.RF_PRODUCT_RD_REF_ID.Contains(criteria.RF_PRODUCT_RD_REF_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DRAINED_WEIGHT)) { doWork = true; q = (from r in q where r.DRAINED_WEIGHT.Contains(criteria.DRAINED_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_PRODUCT_OTHER_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_SUB_PA_PRODUCT_OTHER_ID(Item.ARTWORK_SUB_PA_PRODUCT_OTHER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_SUB_PA_PRODUCT_OTHER_ID(Item.ARTWORK_SUB_PA_PRODUCT_OTHER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_PRODUCT_OTHER_ID == Item.ARTWORK_SUB_PA_PRODUCT_OTHER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER Item, ARTWORKEntities dc) { if (GetChkByARTWORK_SUB_PA_PRODUCT_OTHER_ID(Item.ARTWORK_SUB_PA_PRODUCT_OTHER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_SUB_PA_PRODUCT_OTHER_ID(Item.ARTWORK_SUB_PA_PRODUCT_OTHER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_PRODUCT_OTHER_ID == Item.ARTWORK_SUB_PA_PRODUCT_OTHER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_PRODUCT_OTHER_ID == Item.ARTWORK_SUB_PA_PRODUCT_OTHER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER NewItem, ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PA_PRODUCT_OTHER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_SUB_PA_PRODUCT_OTHER_ID(int? ARTWORK_SUB_PA_PRODUCT_OTHER_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_SUB_PA_PRODUCT_OTHER_ID(ARTWORK_SUB_PA_PRODUCT_OTHER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PA_SYMBOL_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PA_SYMBOL GetByARTWORK_SUB_PA_SYMBOL_ID(int? ARTWORK_SUB_PA_SYMBOL_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_SYMBOL_ID == null || ARTWORK_SUB_PA_SYMBOL_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_SYMBOL where p.ARTWORK_SUB_PA_SYMBOL_ID == ARTWORK_SUB_PA_SYMBOL_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_SUB_PA_SYMBOL_ID(int? ARTWORK_SUB_PA_SYMBOL_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_SYMBOL_ID == null || ARTWORK_SUB_PA_SYMBOL_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PA_SYMBOL where p.ARTWORK_SUB_PA_SYMBOL_ID == ARTWORK_SUB_PA_SYMBOL_ID select p.ARTWORK_SUB_PA_SYMBOL_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PA_SYMBOL> GetByItem(ART_WF_ARTWORK_PROCESS_PA_SYMBOL Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_SYMBOL>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PA_SYMBOL select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_SYMBOL> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PA_SYMBOL> q, ART_WF_ARTWORK_PROCESS_PA_SYMBOL criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_SYMBOL_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_SYMBOL_ID == criteria.ARTWORK_SUB_PA_SYMBOL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID == criteria.ARTWORK_SUB_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SYMBOL_ID)) { doWork = true; q = (from r in q where r.SYMBOL_ID == criteria.SYMBOL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SYMBOL_OTHER)) { doWork = true; q = (from r in q where r.SYMBOL_OTHER == criteria.SYMBOL_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_SYMBOL_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_SYMBOL> GetByItemContain(ART_WF_ARTWORK_PROCESS_PA_SYMBOL Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PA_SYMBOL>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PA_SYMBOL select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PA_SYMBOL> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PA_SYMBOL> q, ART_WF_ARTWORK_PROCESS_PA_SYMBOL criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_SYMBOL_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_SYMBOL_ID == criteria.ARTWORK_SUB_PA_SYMBOL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID.ToString().Contains(criteria.ARTWORK_SUB_PA_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SYMBOL_ID)) { doWork = true; q = (from r in q where r.SYMBOL_ID.ToString().Contains(criteria.SYMBOL_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SYMBOL_OTHER)) { doWork = true; q = (from r in q where r.SYMBOL_OTHER.Contains(criteria.SYMBOL_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_SYMBOL_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PA_SYMBOL> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PA_SYMBOL select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PA_SYMBOL Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_SUB_PA_SYMBOL_ID(Item.ARTWORK_SUB_PA_SYMBOL_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_SYMBOL.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_SUB_PA_SYMBOL_ID(Item.ARTWORK_SUB_PA_SYMBOL_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_SYMBOL>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_SYMBOL_ID == Item.ARTWORK_SUB_PA_SYMBOL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_SYMBOL Item, ARTWORKEntities dc) { if (GetChkByARTWORK_SUB_PA_SYMBOL_ID(Item.ARTWORK_SUB_PA_SYMBOL_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_SYMBOL.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_SUB_PA_SYMBOL_ID(Item.ARTWORK_SUB_PA_SYMBOL_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_SYMBOL>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_SYMBOL_ID == Item.ARTWORK_SUB_PA_SYMBOL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PA_SYMBOL Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PA_SYMBOL.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PA_SYMBOL Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PA_SYMBOL>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_SYMBOL_ID == Item.ARTWORK_SUB_PA_SYMBOL_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PA_SYMBOL NewItem, ART_WF_ARTWORK_PROCESS_PA_SYMBOL OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PA_SYMBOL"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_SUB_PA_SYMBOL_ID(int? ARTWORK_SUB_PA_SYMBOL_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_SUB_PA_SYMBOL_ID(ARTWORK_SUB_PA_SYMBOL_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PG_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PG GetByARTWORK_SUB_PA_ID(int? ARTWORK_SUB_PA_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_ID == null || ARTWORK_SUB_PA_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PG where p.ARTWORK_SUB_PA_ID == ARTWORK_SUB_PA_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_SUB_PA_ID(int? ARTWORK_SUB_PA_ID, ARTWORKEntities dc) { if (ARTWORK_SUB_PA_ID == null || ARTWORK_SUB_PA_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PG where p.ARTWORK_SUB_PA_ID == ARTWORK_SUB_PA_ID select p.ARTWORK_SUB_PA_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PG> GetByItem(ART_WF_ARTWORK_PROCESS_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PG>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PG> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PG> q, ART_WF_ARTWORK_PROCESS_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID == criteria.ARTWORK_SUB_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIE_LINE_MOCKUP_ID)) { doWork = true; q = (from r in q where r.DIE_LINE_MOCKUP_ID == criteria.DIE_LINE_MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PG> GetByItemContain(ART_WF_ARTWORK_PROCESS_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PG>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PG> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PG> q, ART_WF_ARTWORK_PROCESS_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_PA_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_PA_ID == criteria.ARTWORK_SUB_PA_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SUB_PA_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PG> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PG select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PG Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_SUB_PA_ID(Item.ARTWORK_SUB_PA_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PG.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_SUB_PA_ID(Item.ARTWORK_SUB_PA_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PG>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_ID == Item.ARTWORK_SUB_PA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PG Item, ARTWORKEntities dc) { if (GetChkByARTWORK_SUB_PA_ID(Item.ARTWORK_SUB_PA_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PG.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_SUB_PA_ID(Item.ARTWORK_SUB_PA_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PG>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_ID == Item.ARTWORK_SUB_PA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PG Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PG.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PG Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PG>().Local.FirstOrDefault(f => f.ARTWORK_SUB_PA_ID == Item.ARTWORK_SUB_PA_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PG NewItem, ART_WF_ARTWORK_PROCESS_PG OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PG"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_SUB_PA_ID(int? ARTWORK_SUB_PA_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_SUB_PA_ID(ARTWORK_SUB_PA_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PG_BY_PA_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PG_BY_PA GetByARTWORK_PROCESS_PG_ID(int? ARTWORK_PROCESS_PG_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_PG_ID == null || ARTWORK_PROCESS_PG_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PG_BY_PA where p.ARTWORK_PROCESS_PG_ID == ARTWORK_PROCESS_PG_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_PG_ID(int? ARTWORK_PROCESS_PG_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_PG_ID == null || ARTWORK_PROCESS_PG_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PG_BY_PA where p.ARTWORK_PROCESS_PG_ID == ARTWORK_PROCESS_PG_ID select p.ARTWORK_PROCESS_PG_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PG_BY_PA> GetByItem(ART_WF_ARTWORK_PROCESS_PG_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PG_BY_PA>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PG_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PG_BY_PA> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PG_BY_PA> q, ART_WF_ARTWORK_PROCESS_PG_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_PG_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_PG_ID == criteria.ARTWORK_PROCESS_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ASK_FOR_DIE_LINE)) { doWork = true; q = (from r in q where r.ASK_FOR_DIE_LINE == criteria.ASK_FOR_DIE_LINE select r); } if (!CheckValue.EqualsDefaultValue(criteria.FOR_ASSIGN_VENDOR)) { doWork = true; q = (from r in q where r.FOR_ASSIGN_VENDOR == criteria.FOR_ASSIGN_VENDOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_OTHER)) { doWork = true; q = (from r in q where r.REASON_OTHER == criteria.REASON_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PG_BY_PA> GetByItemContain(ART_WF_ARTWORK_PROCESS_PG_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PG_BY_PA>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PG_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PG_BY_PA> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PG_BY_PA> q, ART_WF_ARTWORK_PROCESS_PG_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_PG_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_PG_ID == criteria.ARTWORK_PROCESS_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ASK_FOR_DIE_LINE)) { doWork = true; q = (from r in q where r.ASK_FOR_DIE_LINE.Contains(criteria.ASK_FOR_DIE_LINE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FOR_ASSIGN_VENDOR)) { doWork = true; q = (from r in q where r.FOR_ASSIGN_VENDOR.Contains(criteria.FOR_ASSIGN_VENDOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_OTHER)) { doWork = true; q = (from r in q where r.REASON_OTHER.Contains(criteria.REASON_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PG_BY_PA> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PG_BY_PA select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PG_BY_PA Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_PG_ID(Item.ARTWORK_PROCESS_PG_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PG_BY_PA.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_PG_ID(Item.ARTWORK_PROCESS_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PG_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PG_ID == Item.ARTWORK_PROCESS_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PG_BY_PA Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_PG_ID(Item.ARTWORK_PROCESS_PG_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PG_BY_PA.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_PG_ID(Item.ARTWORK_PROCESS_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PG_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PG_ID == Item.ARTWORK_PROCESS_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PG_BY_PA Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PG_BY_PA.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PG_BY_PA Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PG_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PG_ID == Item.ARTWORK_PROCESS_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PG_BY_PA NewItem, ART_WF_ARTWORK_PROCESS_PG_BY_PA OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PG_BY_PA"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_PG_ID(int? ARTWORK_PROCESS_PG_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_PG_ID(ARTWORK_PROCESS_PG_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PLANNING_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PLANNING GetByARTWORK_PROCESS_PLANNING_ID(int? ARTWORK_PROCESS_PLANNING_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_PLANNING_ID == null || ARTWORK_PROCESS_PLANNING_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PLANNING where p.ARTWORK_PROCESS_PLANNING_ID == ARTWORK_PROCESS_PLANNING_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_PLANNING_ID(int? ARTWORK_PROCESS_PLANNING_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_PLANNING_ID == null || ARTWORK_PROCESS_PLANNING_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PLANNING where p.ARTWORK_PROCESS_PLANNING_ID == ARTWORK_PROCESS_PLANNING_ID select p.ARTWORK_PROCESS_PLANNING_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PLANNING> GetByItem(ART_WF_ARTWORK_PROCESS_PLANNING Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PLANNING>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PLANNING select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PLANNING> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PLANNING> q, ART_WF_ARTWORK_PROCESS_PLANNING criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_PLANNING_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_PLANNING_ID == criteria.ARTWORK_PROCESS_PLANNING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_PLANNING_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PLANNING> GetByItemContain(ART_WF_ARTWORK_PROCESS_PLANNING Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PLANNING>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PLANNING select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PLANNING> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PLANNING> q, ART_WF_ARTWORK_PROCESS_PLANNING criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_PLANNING_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_PLANNING_ID == criteria.ARTWORK_PROCESS_PLANNING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_PLANNING_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PLANNING> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PLANNING select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PLANNING Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_PLANNING_ID(Item.ARTWORK_PROCESS_PLANNING_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PLANNING.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_PLANNING_ID(Item.ARTWORK_PROCESS_PLANNING_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PLANNING>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PLANNING_ID == Item.ARTWORK_PROCESS_PLANNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PLANNING Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_PLANNING_ID(Item.ARTWORK_PROCESS_PLANNING_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PLANNING.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_PLANNING_ID(Item.ARTWORK_PROCESS_PLANNING_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PLANNING>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PLANNING_ID == Item.ARTWORK_PROCESS_PLANNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PLANNING Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PLANNING.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PLANNING Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PLANNING>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PLANNING_ID == Item.ARTWORK_PROCESS_PLANNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PLANNING NewItem, ART_WF_ARTWORK_PROCESS_PLANNING OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PLANNING"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_PLANNING_ID(int? ARTWORK_PROCESS_PLANNING_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_PLANNING_ID(ARTWORK_PROCESS_PLANNING_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA GetByARTWORK_PROCESS_PLANNING_ID(int? ARTWORK_PROCESS_PLANNING_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_PLANNING_ID == null || ARTWORK_PROCESS_PLANNING_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA where p.ARTWORK_PROCESS_PLANNING_ID == ARTWORK_PROCESS_PLANNING_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_PLANNING_ID(int? ARTWORK_PROCESS_PLANNING_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_PLANNING_ID == null || ARTWORK_PROCESS_PLANNING_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA where p.ARTWORK_PROCESS_PLANNING_ID == ARTWORK_PROCESS_PLANNING_ID select p.ARTWORK_PROCESS_PLANNING_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA> GetByItem(ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA> q, ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_PLANNING_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_PLANNING_ID == criteria.ARTWORK_PROCESS_PLANNING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_OTHER)) { doWork = true; q = (from r in q where r.REASON_OTHER == criteria.REASON_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_PLANNING_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA> GetByItemContain(ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA> q, ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_PLANNING_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_PLANNING_ID == criteria.ARTWORK_PROCESS_PLANNING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_OTHER)) { doWork = true; q = (from r in q where r.REASON_OTHER.Contains(criteria.REASON_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_PLANNING_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_PLANNING_ID(Item.ARTWORK_PROCESS_PLANNING_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_PLANNING_ID(Item.ARTWORK_PROCESS_PLANNING_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PLANNING_ID == Item.ARTWORK_PROCESS_PLANNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_PLANNING_ID(Item.ARTWORK_PROCESS_PLANNING_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_PLANNING_ID(Item.ARTWORK_PROCESS_PLANNING_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PLANNING_ID == Item.ARTWORK_PROCESS_PLANNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PLANNING_ID == Item.ARTWORK_PROCESS_PLANNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA NewItem, ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PLANNING_BY_PA"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_PLANNING_ID(int? ARTWORK_PROCESS_PLANNING_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_PLANNING_ID(ARTWORK_PROCESS_PLANNING_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PP_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PP GetByARTWORK_PROCESS_PP_ID(int? ARTWORK_PROCESS_PP_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_PP_ID == null || ARTWORK_PROCESS_PP_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PP where p.ARTWORK_PROCESS_PP_ID == ARTWORK_PROCESS_PP_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_PP_ID(int? ARTWORK_PROCESS_PP_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_PP_ID == null || ARTWORK_PROCESS_PP_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PP where p.ARTWORK_PROCESS_PP_ID == ARTWORK_PROCESS_PP_ID select p.ARTWORK_PROCESS_PP_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PP> GetByItem(ART_WF_ARTWORK_PROCESS_PP Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PP>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PP select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PP> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PP> q, ART_WF_ARTWORK_PROCESS_PP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_PP_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_PP_ID == criteria.ARTWORK_PROCESS_PP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_SHADE_LIMIT_REFERENCE)) { doWork = true; q = (from r in q where r.REQUEST_SHADE_LIMIT_REFERENCE == criteria.REQUEST_SHADE_LIMIT_REFERENCE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_PP_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PP> GetByItemContain(ART_WF_ARTWORK_PROCESS_PP Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PP>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PP select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PP> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PP> q, ART_WF_ARTWORK_PROCESS_PP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_PP_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_PP_ID == criteria.ARTWORK_PROCESS_PP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_SHADE_LIMIT_REFERENCE)) { doWork = true; q = (from r in q where r.REQUEST_SHADE_LIMIT_REFERENCE.Contains(criteria.REQUEST_SHADE_LIMIT_REFERENCE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_PP_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PP> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PP select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PP Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_PP_ID(Item.ARTWORK_PROCESS_PP_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PP.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_PP_ID(Item.ARTWORK_PROCESS_PP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PP>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PP_ID == Item.ARTWORK_PROCESS_PP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PP Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_PP_ID(Item.ARTWORK_PROCESS_PP_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PP.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_PP_ID(Item.ARTWORK_PROCESS_PP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PP>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PP_ID == Item.ARTWORK_PROCESS_PP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PP Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PP.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PP Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PP>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PP_ID == Item.ARTWORK_PROCESS_PP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PP NewItem, ART_WF_ARTWORK_PROCESS_PP OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PP"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_PP_ID(int? ARTWORK_PROCESS_PP_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_PP_ID(ARTWORK_PROCESS_PP_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_PP_BY_PA_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_PP_BY_PA GetByARTWORK_PROCESS_PP_ID(int? ARTWORK_PROCESS_PP_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_PP_ID == null || ARTWORK_PROCESS_PP_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_PP_BY_PA where p.ARTWORK_PROCESS_PP_ID == ARTWORK_PROCESS_PP_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_PP_ID(int? ARTWORK_PROCESS_PP_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_PP_ID == null || ARTWORK_PROCESS_PP_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_PP_BY_PA where p.ARTWORK_PROCESS_PP_ID == ARTWORK_PROCESS_PP_ID select p.ARTWORK_PROCESS_PP_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_PP_BY_PA> GetByItem(ART_WF_ARTWORK_PROCESS_PP_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PP_BY_PA>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_PP_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PP_BY_PA> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_PP_BY_PA> q, ART_WF_ARTWORK_PROCESS_PP_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_PP_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_PP_ID == criteria.ARTWORK_PROCESS_PP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_SHADE_LIMIT)) { doWork = true; q = (from r in q where r.REQUEST_SHADE_LIMIT == criteria.REQUEST_SHADE_LIMIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_OTHER)) { doWork = true; q = (from r in q where r.REASON_OTHER == criteria.REASON_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_PP_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PP_BY_PA> GetByItemContain(ART_WF_ARTWORK_PROCESS_PP_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_PP_BY_PA>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_PP_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_PP_BY_PA> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_PP_BY_PA> q, ART_WF_ARTWORK_PROCESS_PP_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_PP_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_PP_ID == criteria.ARTWORK_PROCESS_PP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_SHADE_LIMIT)) { doWork = true; q = (from r in q where r.REQUEST_SHADE_LIMIT.Contains(criteria.REQUEST_SHADE_LIMIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_OTHER)) { doWork = true; q = (from r in q where r.REASON_OTHER.Contains(criteria.REASON_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_PP_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_PP_BY_PA> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_PP_BY_PA select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_PP_BY_PA Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_PP_ID(Item.ARTWORK_PROCESS_PP_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PP_BY_PA.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_PP_ID(Item.ARTWORK_PROCESS_PP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PP_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PP_ID == Item.ARTWORK_PROCESS_PP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_PP_BY_PA Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_PP_ID(Item.ARTWORK_PROCESS_PP_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PP_BY_PA.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_PP_ID(Item.ARTWORK_PROCESS_PP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PP_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PP_ID == Item.ARTWORK_PROCESS_PP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_PP_BY_PA Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_PP_BY_PA.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_PP_BY_PA Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_PP_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_PP_ID == Item.ARTWORK_PROCESS_PP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_PP_BY_PA NewItem, ART_WF_ARTWORK_PROCESS_PP_BY_PA OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_PP_BY_PA"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_PP_ID(int? ARTWORK_PROCESS_PP_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_PP_ID(ARTWORK_PROCESS_PP_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_QC_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_QC GetByARTWORK_PROCESS_QC_ID(int? ARTWORK_PROCESS_QC_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_QC_ID == null || ARTWORK_PROCESS_QC_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_QC where p.ARTWORK_PROCESS_QC_ID == ARTWORK_PROCESS_QC_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_QC_ID(int? ARTWORK_PROCESS_QC_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_QC_ID == null || ARTWORK_PROCESS_QC_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_QC where p.ARTWORK_PROCESS_QC_ID == ARTWORK_PROCESS_QC_ID select p.ARTWORK_PROCESS_QC_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_QC> GetByItem(ART_WF_ARTWORK_PROCESS_QC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_QC>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_QC select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_QC> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_QC> q, ART_WF_ARTWORK_PROCESS_QC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_QC_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_QC_ID == criteria.ARTWORK_PROCESS_QC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_CONFIRED)) { doWork = true; q = (from r in q where r.IS_CONFIRED == criteria.IS_CONFIRED select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION)) { doWork = true; q = (from r in q where r.NUTRITION == criteria.NUTRITION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION_COMMENT)) { doWork = true; q = (from r in q where r.NUTRITION_COMMENT == criteria.NUTRITION_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS)) { doWork = true; q = (from r in q where r.INGREDIENTS == criteria.INGREDIENTS select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS_COMMENT)) { doWork = true; q = (from r in q where r.INGREDIENTS_COMMENT == criteria.INGREDIENTS_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS)) { doWork = true; q = (from r in q where r.ANALYSIS == criteria.ANALYSIS select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS_COMMENT)) { doWork = true; q = (from r in q where r.ANALYSIS_COMMENT == criteria.ANALYSIS_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM == criteria.HEALTH_CLAIM select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM_COMMENT)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM_COMMENT == criteria.HEALTH_CLAIM_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM == criteria.NUTRIENT_CLAIM select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM_COMMENT)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM_COMMENT == criteria.NUTRIENT_CLAIM_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES)) { doWork = true; q = (from r in q where r.SPECIES == criteria.SPECIES select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES_COMMENT)) { doWork = true; q = (from r in q where r.SPECIES_COMMENT == criteria.SPECIES_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA)) { doWork = true; q = (from r in q where r.CATCHING_AREA == criteria.CATCHING_AREA select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA_COMMENT)) { doWork = true; q = (from r in q where r.CATCHING_AREA_COMMENT == criteria.CATCHING_AREA_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL)) { doWork = true; q = (from r in q where r.CHECK_DETAIL == criteria.CHECK_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL_COMMENT)) { doWork = true; q = (from r in q where r.CHECK_DETAIL_COMMENT == criteria.CHECK_DETAIL_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_QC_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_QC> GetByItemContain(ART_WF_ARTWORK_PROCESS_QC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_QC>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_QC select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_QC> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_QC> q, ART_WF_ARTWORK_PROCESS_QC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_QC_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_QC_ID == criteria.ARTWORK_PROCESS_QC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_CONFIRED)) { doWork = true; q = (from r in q where r.IS_CONFIRED.Contains(criteria.IS_CONFIRED) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION)) { doWork = true; q = (from r in q where r.NUTRITION.Contains(criteria.NUTRITION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION_COMMENT)) { doWork = true; q = (from r in q where r.NUTRITION_COMMENT.Contains(criteria.NUTRITION_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS)) { doWork = true; q = (from r in q where r.INGREDIENTS.Contains(criteria.INGREDIENTS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS_COMMENT)) { doWork = true; q = (from r in q where r.INGREDIENTS_COMMENT.Contains(criteria.INGREDIENTS_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS)) { doWork = true; q = (from r in q where r.ANALYSIS.Contains(criteria.ANALYSIS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS_COMMENT)) { doWork = true; q = (from r in q where r.ANALYSIS_COMMENT.Contains(criteria.ANALYSIS_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM.Contains(criteria.HEALTH_CLAIM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM_COMMENT)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM_COMMENT.Contains(criteria.HEALTH_CLAIM_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM.Contains(criteria.NUTRIENT_CLAIM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM_COMMENT)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM_COMMENT.Contains(criteria.NUTRIENT_CLAIM_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES)) { doWork = true; q = (from r in q where r.SPECIES.Contains(criteria.SPECIES) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES_COMMENT)) { doWork = true; q = (from r in q where r.SPECIES_COMMENT.Contains(criteria.SPECIES_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA)) { doWork = true; q = (from r in q where r.CATCHING_AREA.Contains(criteria.CATCHING_AREA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA_COMMENT)) { doWork = true; q = (from r in q where r.CATCHING_AREA_COMMENT.Contains(criteria.CATCHING_AREA_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL)) { doWork = true; q = (from r in q where r.CHECK_DETAIL.Contains(criteria.CHECK_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL_COMMENT)) { doWork = true; q = (from r in q where r.CHECK_DETAIL_COMMENT.Contains(criteria.CHECK_DETAIL_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_QC_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_QC> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_QC select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_QC Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_QC_ID(Item.ARTWORK_PROCESS_QC_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_QC.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_QC_ID(Item.ARTWORK_PROCESS_QC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_QC_ID == Item.ARTWORK_PROCESS_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_QC Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_QC_ID(Item.ARTWORK_PROCESS_QC_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_QC.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_QC_ID(Item.ARTWORK_PROCESS_QC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_QC_ID == Item.ARTWORK_PROCESS_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_QC Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_QC.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_QC Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_QC_ID == Item.ARTWORK_PROCESS_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_QC NewItem, ART_WF_ARTWORK_PROCESS_QC OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_QC"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_QC_ID(int? ARTWORK_PROCESS_QC_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_QC_ID(ARTWORK_PROCESS_QC_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_QC_BY_PA_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_QC_BY_PA GetByARTWORK_PROCESS_QC_ID(int? ARTWORK_PROCESS_QC_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_QC_ID == null || ARTWORK_PROCESS_QC_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_QC_BY_PA where p.ARTWORK_PROCESS_QC_ID == ARTWORK_PROCESS_QC_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_QC_ID(int? ARTWORK_PROCESS_QC_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_QC_ID == null || ARTWORK_PROCESS_QC_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_QC_BY_PA where p.ARTWORK_PROCESS_QC_ID == ARTWORK_PROCESS_QC_ID select p.ARTWORK_PROCESS_QC_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_QC_BY_PA> GetByItem(ART_WF_ARTWORK_PROCESS_QC_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_QC_BY_PA>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_QC_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_QC_BY_PA> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_QC_BY_PA> q, ART_WF_ARTWORK_PROCESS_QC_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_QC_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_QC_ID == criteria.ARTWORK_PROCESS_QC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION)) { doWork = true; q = (from r in q where r.NUTRITION == criteria.NUTRITION select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM == criteria.HEALTH_CLAIM select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA)) { doWork = true; q = (from r in q where r.CATCHING_AREA == criteria.CATCHING_AREA select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS)) { doWork = true; q = (from r in q where r.INGREDIENTS == criteria.INGREDIENTS select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM == criteria.NUTRIENT_CLAIM select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS)) { doWork = true; q = (from r in q where r.ANALYSIS == criteria.ANALYSIS select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES)) { doWork = true; q = (from r in q where r.SPECIES == criteria.SPECIES select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL)) { doWork = true; q = (from r in q where r.CHECK_DETAIL == criteria.CHECK_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_OTHER)) { doWork = true; q = (from r in q where r.REASON_OTHER == criteria.REASON_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_QC_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_QC_BY_PA> GetByItemContain(ART_WF_ARTWORK_PROCESS_QC_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_QC_BY_PA>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_QC_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_QC_BY_PA> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_QC_BY_PA> q, ART_WF_ARTWORK_PROCESS_QC_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_QC_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_QC_ID == criteria.ARTWORK_PROCESS_QC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION)) { doWork = true; q = (from r in q where r.NUTRITION.Contains(criteria.NUTRITION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM.Contains(criteria.HEALTH_CLAIM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA)) { doWork = true; q = (from r in q where r.CATCHING_AREA.Contains(criteria.CATCHING_AREA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS)) { doWork = true; q = (from r in q where r.INGREDIENTS.Contains(criteria.INGREDIENTS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM.Contains(criteria.NUTRIENT_CLAIM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS)) { doWork = true; q = (from r in q where r.ANALYSIS.Contains(criteria.ANALYSIS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES)) { doWork = true; q = (from r in q where r.SPECIES.Contains(criteria.SPECIES) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL)) { doWork = true; q = (from r in q where r.CHECK_DETAIL.Contains(criteria.CHECK_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_OTHER)) { doWork = true; q = (from r in q where r.REASON_OTHER.Contains(criteria.REASON_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_QC_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_QC_BY_PA> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_QC_BY_PA select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_QC_BY_PA Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_QC_ID(Item.ARTWORK_PROCESS_QC_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_QC_BY_PA.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_QC_ID(Item.ARTWORK_PROCESS_QC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_QC_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_QC_ID == Item.ARTWORK_PROCESS_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_QC_BY_PA Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_QC_ID(Item.ARTWORK_PROCESS_QC_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_QC_BY_PA.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_QC_ID(Item.ARTWORK_PROCESS_QC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_QC_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_QC_ID == Item.ARTWORK_PROCESS_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_QC_BY_PA Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_QC_BY_PA.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_QC_BY_PA Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_QC_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_QC_ID == Item.ARTWORK_PROCESS_QC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_QC_BY_PA NewItem, ART_WF_ARTWORK_PROCESS_QC_BY_PA OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_QC_BY_PA"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_QC_ID(int? ARTWORK_PROCESS_QC_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_QC_ID(ARTWORK_PROCESS_QC_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_RD_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_RD GetByARTWORK_PROCESS_RD_ID(int? ARTWORK_PROCESS_RD_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_RD_ID == null || ARTWORK_PROCESS_RD_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_RD where p.ARTWORK_PROCESS_RD_ID == ARTWORK_PROCESS_RD_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_RD_ID(int? ARTWORK_PROCESS_RD_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_RD_ID == null || ARTWORK_PROCESS_RD_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_RD where p.ARTWORK_PROCESS_RD_ID == ARTWORK_PROCESS_RD_ID select p.ARTWORK_PROCESS_RD_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_RD> GetByItem(ART_WF_ARTWORK_PROCESS_RD Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_RD>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_RD select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_RD> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_RD> q, ART_WF_ARTWORK_PROCESS_RD criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_RD_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_RD_ID == criteria.ARTWORK_PROCESS_RD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_CONFIRED)) { doWork = true; q = (from r in q where r.IS_CONFIRED == criteria.IS_CONFIRED select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION)) { doWork = true; q = (from r in q where r.NUTRITION == criteria.NUTRITION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION_COMMENT)) { doWork = true; q = (from r in q where r.NUTRITION_COMMENT == criteria.NUTRITION_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS)) { doWork = true; q = (from r in q where r.INGREDIENTS == criteria.INGREDIENTS select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS_COMMENT)) { doWork = true; q = (from r in q where r.INGREDIENTS_COMMENT == criteria.INGREDIENTS_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS)) { doWork = true; q = (from r in q where r.ANALYSIS == criteria.ANALYSIS select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS_COMMENT)) { doWork = true; q = (from r in q where r.ANALYSIS_COMMENT == criteria.ANALYSIS_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM == criteria.HEALTH_CLAIM select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM_COMMENT)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM_COMMENT == criteria.HEALTH_CLAIM_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM == criteria.NUTRIENT_CLAIM select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM_COMMENT)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM_COMMENT == criteria.NUTRIENT_CLAIM_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES)) { doWork = true; q = (from r in q where r.SPECIES == criteria.SPECIES select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES_COMMENT)) { doWork = true; q = (from r in q where r.SPECIES_COMMENT == criteria.SPECIES_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA)) { doWork = true; q = (from r in q where r.CATCHING_AREA == criteria.CATCHING_AREA select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA_COMMENT)) { doWork = true; q = (from r in q where r.CATCHING_AREA_COMMENT == criteria.CATCHING_AREA_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL)) { doWork = true; q = (from r in q where r.CHECK_DETAIL == criteria.CHECK_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL_COMMENT)) { doWork = true; q = (from r in q where r.CHECK_DETAIL_COMMENT == criteria.CHECK_DETAIL_COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_RD_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_RD> GetByItemContain(ART_WF_ARTWORK_PROCESS_RD Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_RD>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_RD select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_RD> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_RD> q, ART_WF_ARTWORK_PROCESS_RD criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_RD_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_RD_ID == criteria.ARTWORK_PROCESS_RD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_CONFIRED)) { doWork = true; q = (from r in q where r.IS_CONFIRED.Contains(criteria.IS_CONFIRED) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION)) { doWork = true; q = (from r in q where r.NUTRITION.Contains(criteria.NUTRITION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION_COMMENT)) { doWork = true; q = (from r in q where r.NUTRITION_COMMENT.Contains(criteria.NUTRITION_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS)) { doWork = true; q = (from r in q where r.INGREDIENTS.Contains(criteria.INGREDIENTS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS_COMMENT)) { doWork = true; q = (from r in q where r.INGREDIENTS_COMMENT.Contains(criteria.INGREDIENTS_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS)) { doWork = true; q = (from r in q where r.ANALYSIS.Contains(criteria.ANALYSIS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS_COMMENT)) { doWork = true; q = (from r in q where r.ANALYSIS_COMMENT.Contains(criteria.ANALYSIS_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM.Contains(criteria.HEALTH_CLAIM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM_COMMENT)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM_COMMENT.Contains(criteria.HEALTH_CLAIM_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM.Contains(criteria.NUTRIENT_CLAIM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM_COMMENT)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM_COMMENT.Contains(criteria.NUTRIENT_CLAIM_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES)) { doWork = true; q = (from r in q where r.SPECIES.Contains(criteria.SPECIES) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES_COMMENT)) { doWork = true; q = (from r in q where r.SPECIES_COMMENT.Contains(criteria.SPECIES_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA)) { doWork = true; q = (from r in q where r.CATCHING_AREA.Contains(criteria.CATCHING_AREA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA_COMMENT)) { doWork = true; q = (from r in q where r.CATCHING_AREA_COMMENT.Contains(criteria.CATCHING_AREA_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL)) { doWork = true; q = (from r in q where r.CHECK_DETAIL.Contains(criteria.CHECK_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL_COMMENT)) { doWork = true; q = (from r in q where r.CHECK_DETAIL_COMMENT.Contains(criteria.CHECK_DETAIL_COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_RD_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_RD> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_RD select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_RD Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_RD_ID(Item.ARTWORK_PROCESS_RD_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_RD.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_RD_ID(Item.ARTWORK_PROCESS_RD_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_RD>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_RD_ID == Item.ARTWORK_PROCESS_RD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_RD Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_RD_ID(Item.ARTWORK_PROCESS_RD_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_RD.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_RD_ID(Item.ARTWORK_PROCESS_RD_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_RD>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_RD_ID == Item.ARTWORK_PROCESS_RD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_RD Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_RD.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_RD Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_RD>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_RD_ID == Item.ARTWORK_PROCESS_RD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_RD NewItem, ART_WF_ARTWORK_PROCESS_RD OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_RD"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_RD_ID(int? ARTWORK_PROCESS_RD_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_RD_ID(ARTWORK_PROCESS_RD_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_RD_BY_QC_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_RD_BY_QC GetByARTWORK_PROCESS_RD_ID(int? ARTWORK_PROCESS_RD_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_RD_ID == null || ARTWORK_PROCESS_RD_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_RD_BY_QC where p.ARTWORK_PROCESS_RD_ID == ARTWORK_PROCESS_RD_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_RD_ID(int? ARTWORK_PROCESS_RD_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_RD_ID == null || ARTWORK_PROCESS_RD_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_RD_BY_QC where p.ARTWORK_PROCESS_RD_ID == ARTWORK_PROCESS_RD_ID select p.ARTWORK_PROCESS_RD_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_RD_BY_QC> GetByItem(ART_WF_ARTWORK_PROCESS_RD_BY_QC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_RD_BY_QC>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_RD_BY_QC select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_RD_BY_QC> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_RD_BY_QC> q, ART_WF_ARTWORK_PROCESS_RD_BY_QC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_RD_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_RD_ID == criteria.ARTWORK_PROCESS_RD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION)) { doWork = true; q = (from r in q where r.NUTRITION == criteria.NUTRITION select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM == criteria.HEALTH_CLAIM select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA)) { doWork = true; q = (from r in q where r.CATCHING_AREA == criteria.CATCHING_AREA select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS)) { doWork = true; q = (from r in q where r.INGREDIENTS == criteria.INGREDIENTS select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM == criteria.NUTRIENT_CLAIM select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS)) { doWork = true; q = (from r in q where r.ANALYSIS == criteria.ANALYSIS select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES)) { doWork = true; q = (from r in q where r.SPECIES == criteria.SPECIES select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL)) { doWork = true; q = (from r in q where r.CHECK_DETAIL == criteria.CHECK_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_RD_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_RD_BY_QC> GetByItemContain(ART_WF_ARTWORK_PROCESS_RD_BY_QC Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_RD_BY_QC>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_RD_BY_QC select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_RD_BY_QC> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_RD_BY_QC> q, ART_WF_ARTWORK_PROCESS_RD_BY_QC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_RD_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_RD_ID == criteria.ARTWORK_PROCESS_RD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRITION)) { doWork = true; q = (from r in q where r.NUTRITION.Contains(criteria.NUTRITION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEALTH_CLAIM)) { doWork = true; q = (from r in q where r.HEALTH_CLAIM.Contains(criteria.HEALTH_CLAIM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CATCHING_AREA)) { doWork = true; q = (from r in q where r.CATCHING_AREA.Contains(criteria.CATCHING_AREA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INGREDIENTS)) { doWork = true; q = (from r in q where r.INGREDIENTS.Contains(criteria.INGREDIENTS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUTRIENT_CLAIM)) { doWork = true; q = (from r in q where r.NUTRIENT_CLAIM.Contains(criteria.NUTRIENT_CLAIM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS)) { doWork = true; q = (from r in q where r.ANALYSIS.Contains(criteria.ANALYSIS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIES)) { doWork = true; q = (from r in q where r.SPECIES.Contains(criteria.SPECIES) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_DETAIL)) { doWork = true; q = (from r in q where r.CHECK_DETAIL.Contains(criteria.CHECK_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_RD_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_RD_BY_QC> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_RD_BY_QC select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_RD_BY_QC Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_RD_ID(Item.ARTWORK_PROCESS_RD_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_RD_BY_QC.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_RD_ID(Item.ARTWORK_PROCESS_RD_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_RD_BY_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_RD_ID == Item.ARTWORK_PROCESS_RD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_RD_BY_QC Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_RD_ID(Item.ARTWORK_PROCESS_RD_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_RD_BY_QC.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_RD_ID(Item.ARTWORK_PROCESS_RD_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_RD_BY_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_RD_ID == Item.ARTWORK_PROCESS_RD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_RD_BY_QC Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_RD_BY_QC.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_RD_BY_QC Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_RD_BY_QC>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_RD_ID == Item.ARTWORK_PROCESS_RD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_RD_BY_QC NewItem, ART_WF_ARTWORK_PROCESS_RD_BY_QC OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_RD_BY_QC"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_RD_ID(int? ARTWORK_PROCESS_RD_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_RD_ID(ARTWORK_PROCESS_RD_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_SO_DETAIL_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_SO_DETAIL GetByARTWORK_PROCESS_SO_ID(int? ARTWORK_PROCESS_SO_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_SO_ID == null || ARTWORK_PROCESS_SO_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_SO_DETAIL where p.ARTWORK_PROCESS_SO_ID == ARTWORK_PROCESS_SO_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_SO_ID(int? ARTWORK_PROCESS_SO_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_SO_ID == null || ARTWORK_PROCESS_SO_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_SO_DETAIL where p.ARTWORK_PROCESS_SO_ID == ARTWORK_PROCESS_SO_ID select p.ARTWORK_PROCESS_SO_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_SO_DETAIL> GetByItem(ART_WF_ARTWORK_PROCESS_SO_DETAIL Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_SO_DETAIL>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_SO_DETAIL select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_SO_DETAIL> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_SO_DETAIL> q, ART_WF_ARTWORK_PROCESS_SO_DETAIL criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_SO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_SO_ID == criteria.ARTWORK_PROCESS_SO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_ITEM)) { doWork = true; q = (from r in q where r.SALES_ORDER_ITEM == criteria.SALES_ORDER_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO == criteria.MATERIAL_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_NO)) { doWork = true; q = (from r in q where r.BOM_NO == criteria.BOM_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ID)) { doWork = true; q = (from r in q where r.BOM_ID == criteria.BOM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_SO_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_SO_DETAIL> GetByItemContain(ART_WF_ARTWORK_PROCESS_SO_DETAIL Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_SO_DETAIL>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_SO_DETAIL select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_SO_DETAIL> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_SO_DETAIL> q, ART_WF_ARTWORK_PROCESS_SO_DETAIL criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_SO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_SO_ID == criteria.ARTWORK_PROCESS_SO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_ITEM)) { doWork = true; q = (from r in q where r.SALES_ORDER_ITEM.Contains(criteria.SALES_ORDER_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO.Contains(criteria.MATERIAL_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_NO)) { doWork = true; q = (from r in q where r.BOM_NO.Contains(criteria.BOM_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_SO_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_SO_DETAIL> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_SO_DETAIL select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_SO_DETAIL Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_SO_ID(Item.ARTWORK_PROCESS_SO_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_SO_DETAIL.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_SO_ID(Item.ARTWORK_PROCESS_SO_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_SO_DETAIL>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_SO_ID == Item.ARTWORK_PROCESS_SO_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_SO_DETAIL Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_SO_ID(Item.ARTWORK_PROCESS_SO_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_SO_DETAIL.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_SO_ID(Item.ARTWORK_PROCESS_SO_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_SO_DETAIL>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_SO_ID == Item.ARTWORK_PROCESS_SO_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_SO_DETAIL Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_SO_DETAIL.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_SO_DETAIL Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_SO_DETAIL>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_SO_ID == Item.ARTWORK_PROCESS_SO_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_SO_DETAIL NewItem, ART_WF_ARTWORK_PROCESS_SO_DETAIL OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_SO_DETAIL"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_SO_ID(int? ARTWORK_PROCESS_SO_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_SO_ID(ARTWORK_PROCESS_SO_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_VENDOR_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_VENDOR GetByARTWORK_PROCESS_VENDOR_ID(int? ARTWORK_PROCESS_VENDOR_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_VENDOR_ID == null || ARTWORK_PROCESS_VENDOR_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR where p.ARTWORK_PROCESS_VENDOR_ID == ARTWORK_PROCESS_VENDOR_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_VENDOR_ID(int? ARTWORK_PROCESS_VENDOR_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_VENDOR_ID == null || ARTWORK_PROCESS_VENDOR_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR where p.ARTWORK_PROCESS_VENDOR_ID == ARTWORK_PROCESS_VENDOR_ID select p.ARTWORK_PROCESS_VENDOR_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_VENDOR> GetByItem(ART_WF_ARTWORK_PROCESS_VENDOR Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_VENDOR>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR> q, ART_WF_ARTWORK_PROCESS_VENDOR criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_VENDOR_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_VENDOR_ID == criteria.ARTWORK_PROCESS_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONFIRM_PO)) { doWork = true; q = (from r in q where r.CONFIRM_PO == criteria.CONFIRM_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_VENDOR_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_VENDOR> GetByItemContain(ART_WF_ARTWORK_PROCESS_VENDOR Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_VENDOR>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR> q, ART_WF_ARTWORK_PROCESS_VENDOR criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_VENDOR_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_VENDOR_ID == criteria.ARTWORK_PROCESS_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONFIRM_PO)) { doWork = true; q = (from r in q where r.CONFIRM_PO.Contains(criteria.CONFIRM_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_VENDOR_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_VENDOR> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_VENDOR Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_VENDOR_ID(Item.ARTWORK_PROCESS_VENDOR_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_VENDOR.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_VENDOR_ID(Item.ARTWORK_PROCESS_VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_VENDOR>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_VENDOR_ID == Item.ARTWORK_PROCESS_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_VENDOR Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_VENDOR_ID(Item.ARTWORK_PROCESS_VENDOR_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_VENDOR.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_VENDOR_ID(Item.ARTWORK_PROCESS_VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_VENDOR>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_VENDOR_ID == Item.ARTWORK_PROCESS_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_VENDOR Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_VENDOR.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_VENDOR Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_VENDOR>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_VENDOR_ID == Item.ARTWORK_PROCESS_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_VENDOR NewItem, ART_WF_ARTWORK_PROCESS_VENDOR OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_VENDOR"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_VENDOR_ID(int? ARTWORK_PROCESS_VENDOR_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_VENDOR_ID(ARTWORK_PROCESS_VENDOR_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA GetByARTWORK_PROCESS_VENDOR_ID(int? ARTWORK_PROCESS_VENDOR_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_VENDOR_ID == null || ARTWORK_PROCESS_VENDOR_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA where p.ARTWORK_PROCESS_VENDOR_ID == ARTWORK_PROCESS_VENDOR_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_VENDOR_ID(int? ARTWORK_PROCESS_VENDOR_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_VENDOR_ID == null || ARTWORK_PROCESS_VENDOR_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA where p.ARTWORK_PROCESS_VENDOR_ID == ARTWORK_PROCESS_VENDOR_ID select p.ARTWORK_PROCESS_VENDOR_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA> GetByItem(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA> q, ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_VENDOR_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_VENDOR_ID == criteria.ARTWORK_PROCESS_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEND_TO_VENDOR_TYPE)) { doWork = true; q = (from r in q where r.SEND_TO_VENDOR_TYPE == criteria.SEND_TO_VENDOR_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_VENDOR_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA> GetByItemContain(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA> q, ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_VENDOR_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_VENDOR_ID == criteria.ARTWORK_PROCESS_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEND_TO_VENDOR_TYPE)) { doWork = true; q = (from r in q where r.SEND_TO_VENDOR_TYPE.Contains(criteria.SEND_TO_VENDOR_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_VENDOR_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_VENDOR_ID(Item.ARTWORK_PROCESS_VENDOR_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_VENDOR_ID(Item.ARTWORK_PROCESS_VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_VENDOR_ID == Item.ARTWORK_PROCESS_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_VENDOR_ID(Item.ARTWORK_PROCESS_VENDOR_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_VENDOR_ID(Item.ARTWORK_PROCESS_VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_VENDOR_ID == Item.ARTWORK_PROCESS_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_VENDOR_ID == Item.ARTWORK_PROCESS_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA NewItem, ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_VENDOR_BY_PA"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_VENDOR_ID(int? ARTWORK_PROCESS_VENDOR_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_VENDOR_ID(ARTWORK_PROCESS_VENDOR_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP GetByARTWORK_PROCESS_VENDOR_BY_PP_ID(int? ARTWORK_PROCESS_VENDOR_BY_PP_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_VENDOR_BY_PP_ID == null || ARTWORK_PROCESS_VENDOR_BY_PP_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP where p.ARTWORK_PROCESS_VENDOR_BY_PP_ID == ARTWORK_PROCESS_VENDOR_BY_PP_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_VENDOR_BY_PP_ID(int? ARTWORK_PROCESS_VENDOR_BY_PP_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_VENDOR_BY_PP_ID == null || ARTWORK_PROCESS_VENDOR_BY_PP_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP where p.ARTWORK_PROCESS_VENDOR_BY_PP_ID == ARTWORK_PROCESS_VENDOR_BY_PP_ID select p.ARTWORK_PROCESS_VENDOR_BY_PP_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP> GetByItem(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP> q, ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_VENDOR_BY_PP_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_VENDOR_BY_PP_ID == criteria.ARTWORK_PROCESS_VENDOR_BY_PP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_VENDOR_BY_PP_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP> GetByItemContain(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP> q, ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_VENDOR_BY_PP_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_VENDOR_BY_PP_ID == criteria.ARTWORK_PROCESS_VENDOR_BY_PP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_VENDOR_BY_PP_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_VENDOR_BY_PP_ID(Item.ARTWORK_PROCESS_VENDOR_BY_PP_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_VENDOR_BY_PP_ID(Item.ARTWORK_PROCESS_VENDOR_BY_PP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_VENDOR_BY_PP_ID == Item.ARTWORK_PROCESS_VENDOR_BY_PP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_VENDOR_BY_PP_ID(Item.ARTWORK_PROCESS_VENDOR_BY_PP_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_VENDOR_BY_PP_ID(Item.ARTWORK_PROCESS_VENDOR_BY_PP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_VENDOR_BY_PP_ID == Item.ARTWORK_PROCESS_VENDOR_BY_PP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_VENDOR_BY_PP_ID == Item.ARTWORK_PROCESS_VENDOR_BY_PP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP NewItem, ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_VENDOR_BY_PP"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_VENDOR_BY_PP_ID(int? ARTWORK_PROCESS_VENDOR_BY_PP_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_VENDOR_BY_PP_ID(ARTWORK_PROCESS_VENDOR_BY_PP_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_VENDOR_PO_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_VENDOR_PO GetByARTWORK_PROCESS_VENDOR_PO_ID(int? ARTWORK_PROCESS_VENDOR_PO_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_VENDOR_PO_ID == null || ARTWORK_PROCESS_VENDOR_PO_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_PO where p.ARTWORK_PROCESS_VENDOR_PO_ID == ARTWORK_PROCESS_VENDOR_PO_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_VENDOR_PO_ID(int? ARTWORK_PROCESS_VENDOR_PO_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_VENDOR_PO_ID == null || ARTWORK_PROCESS_VENDOR_PO_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_PO where p.ARTWORK_PROCESS_VENDOR_PO_ID == ARTWORK_PROCESS_VENDOR_PO_ID select p.ARTWORK_PROCESS_VENDOR_PO_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_VENDOR_PO> GetByItem(ART_WF_ARTWORK_PROCESS_VENDOR_PO Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_VENDOR_PO>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_PO select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR_PO> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR_PO> q, ART_WF_ARTWORK_PROCESS_VENDOR_PO criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_VENDOR_PO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_VENDOR_PO_ID == criteria.ARTWORK_PROCESS_VENDOR_PO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONFIRM_PO)) { doWork = true; q = (from r in q where r.CONFIRM_PO == criteria.CONFIRM_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_VENDOR_PO_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_VENDOR_PO> GetByItemContain(ART_WF_ARTWORK_PROCESS_VENDOR_PO Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_VENDOR_PO>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_PO select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR_PO> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_VENDOR_PO> q, ART_WF_ARTWORK_PROCESS_VENDOR_PO criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_VENDOR_PO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_VENDOR_PO_ID == criteria.ARTWORK_PROCESS_VENDOR_PO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONFIRM_PO)) { doWork = true; q = (from r in q where r.CONFIRM_PO.Contains(criteria.CONFIRM_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_VENDOR_PO_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_VENDOR_PO> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_VENDOR_PO select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_VENDOR_PO Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_VENDOR_PO_ID(Item.ARTWORK_PROCESS_VENDOR_PO_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_VENDOR_PO.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_VENDOR_PO_ID(Item.ARTWORK_PROCESS_VENDOR_PO_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_VENDOR_PO>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_VENDOR_PO_ID == Item.ARTWORK_PROCESS_VENDOR_PO_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_VENDOR_PO Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_VENDOR_PO_ID(Item.ARTWORK_PROCESS_VENDOR_PO_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_VENDOR_PO.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_VENDOR_PO_ID(Item.ARTWORK_PROCESS_VENDOR_PO_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_VENDOR_PO>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_VENDOR_PO_ID == Item.ARTWORK_PROCESS_VENDOR_PO_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_VENDOR_PO Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_VENDOR_PO.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_VENDOR_PO Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_VENDOR_PO>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_VENDOR_PO_ID == Item.ARTWORK_PROCESS_VENDOR_PO_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_VENDOR_PO NewItem, ART_WF_ARTWORK_PROCESS_VENDOR_PO OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_VENDOR_PO"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_VENDOR_PO_ID(int? ARTWORK_PROCESS_VENDOR_PO_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_VENDOR_PO_ID(ARTWORK_PROCESS_VENDOR_PO_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_WH_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_WH GetByARTWORK_PROCESS_WH_ID(int? ARTWORK_PROCESS_WH_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_WH_ID == null || ARTWORK_PROCESS_WH_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_WH where p.ARTWORK_PROCESS_WH_ID == ARTWORK_PROCESS_WH_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_WH_ID(int? ARTWORK_PROCESS_WH_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_WH_ID == null || ARTWORK_PROCESS_WH_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_WH where p.ARTWORK_PROCESS_WH_ID == ARTWORK_PROCESS_WH_ID select p.ARTWORK_PROCESS_WH_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_WH> GetByItem(ART_WF_ARTWORK_PROCESS_WH Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_WH>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_WH select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_WH> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_WH> q, ART_WF_ARTWORK_PROCESS_WH criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_WH_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_WH_ID == criteria.ARTWORK_PROCESS_WH_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.INKJET_STAMP_AREA)) { doWork = true; q = (from r in q where r.INKJET_STAMP_AREA == criteria.INKJET_STAMP_AREA select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLL_DIRECTION)) { doWork = true; q = (from r in q where r.ROLL_DIRECTION == criteria.ROLL_DIRECTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_WH_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_WH> GetByItemContain(ART_WF_ARTWORK_PROCESS_WH Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_WH>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_WH select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_WH> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_WH> q, ART_WF_ARTWORK_PROCESS_WH criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_WH_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_WH_ID == criteria.ARTWORK_PROCESS_WH_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INKJET_STAMP_AREA)) { doWork = true; q = (from r in q where r.INKJET_STAMP_AREA.Contains(criteria.INKJET_STAMP_AREA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLL_DIRECTION)) { doWork = true; q = (from r in q where r.ROLL_DIRECTION.Contains(criteria.ROLL_DIRECTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_WH_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_WH> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_WH select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_WH Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_WH_ID(Item.ARTWORK_PROCESS_WH_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_WH.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_WH_ID(Item.ARTWORK_PROCESS_WH_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_WH>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_WH_ID == Item.ARTWORK_PROCESS_WH_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_WH Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_WH_ID(Item.ARTWORK_PROCESS_WH_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_WH.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_WH_ID(Item.ARTWORK_PROCESS_WH_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_WH>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_WH_ID == Item.ARTWORK_PROCESS_WH_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_WH Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_WH.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_WH Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_WH>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_WH_ID == Item.ARTWORK_PROCESS_WH_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_WH NewItem, ART_WF_ARTWORK_PROCESS_WH OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_WH"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_WH_ID(int? ARTWORK_PROCESS_WH_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_WH_ID(ARTWORK_PROCESS_WH_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_PROCESS_WH_BY_PA_SERVICE
{
    public static ART_WF_ARTWORK_PROCESS_WH_BY_PA GetByARTWORK_PROCESS_WH_ID(int? ARTWORK_PROCESS_WH_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_WH_ID == null || ARTWORK_PROCESS_WH_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_PROCESS_WH_BY_PA where p.ARTWORK_PROCESS_WH_ID == ARTWORK_PROCESS_WH_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PROCESS_WH_ID(int? ARTWORK_PROCESS_WH_ID, ARTWORKEntities dc) { if (ARTWORK_PROCESS_WH_ID == null || ARTWORK_PROCESS_WH_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_PROCESS_WH_BY_PA where p.ARTWORK_PROCESS_WH_ID == ARTWORK_PROCESS_WH_ID select p.ARTWORK_PROCESS_WH_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_PROCESS_WH_BY_PA> GetByItem(ART_WF_ARTWORK_PROCESS_WH_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_WH_BY_PA>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_PROCESS_WH_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_WH_BY_PA> CriteriaBy(IQueryable<ART_WF_ARTWORK_PROCESS_WH_BY_PA> q, ART_WF_ARTWORK_PROCESS_WH_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_WH_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_WH_ID == criteria.ARTWORK_PROCESS_WH_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.INKJET_STAMP_AREA)) { doWork = true; q = (from r in q where r.INKJET_STAMP_AREA == criteria.INKJET_STAMP_AREA select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLL_DIRECTION)) { doWork = true; q = (from r in q where r.ROLL_DIRECTION == criteria.ROLL_DIRECTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_OTHER)) { doWork = true; q = (from r in q where r.REASON_OTHER == criteria.REASON_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_WH_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_WH_BY_PA> GetByItemContain(ART_WF_ARTWORK_PROCESS_WH_BY_PA Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_PROCESS_WH_BY_PA>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_PROCESS_WH_BY_PA select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_PROCESS_WH_BY_PA> CriteriaByContains(IQueryable<ART_WF_ARTWORK_PROCESS_WH_BY_PA> q, ART_WF_ARTWORK_PROCESS_WH_BY_PA criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_WH_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_WH_ID == criteria.ARTWORK_PROCESS_WH_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INKJET_STAMP_AREA)) { doWork = true; q = (from r in q where r.INKJET_STAMP_AREA.Contains(criteria.INKJET_STAMP_AREA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLL_DIRECTION)) { doWork = true; q = (from r in q where r.ROLL_DIRECTION.Contains(criteria.ROLL_DIRECTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_OTHER)) { doWork = true; q = (from r in q where r.REASON_OTHER.Contains(criteria.REASON_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PROCESS_WH_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_PROCESS_WH_BY_PA> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_PROCESS_WH_BY_PA select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_PROCESS_WH_BY_PA Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PROCESS_WH_ID(Item.ARTWORK_PROCESS_WH_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_WH_BY_PA.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PROCESS_WH_ID(Item.ARTWORK_PROCESS_WH_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_WH_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_WH_ID == Item.ARTWORK_PROCESS_WH_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_PROCESS_WH_BY_PA Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PROCESS_WH_ID(Item.ARTWORK_PROCESS_WH_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_WH_BY_PA.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PROCESS_WH_ID(Item.ARTWORK_PROCESS_WH_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_WH_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_WH_ID == Item.ARTWORK_PROCESS_WH_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_PROCESS_WH_BY_PA Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_PROCESS_WH_BY_PA.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_PROCESS_WH_BY_PA Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_PROCESS_WH_BY_PA>().Local.FirstOrDefault(f => f.ARTWORK_PROCESS_WH_ID == Item.ARTWORK_PROCESS_WH_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_PROCESS_WH_BY_PA NewItem, ART_WF_ARTWORK_PROCESS_WH_BY_PA OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_PROCESS_WH_BY_PA"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PROCESS_WH_ID(int? ARTWORK_PROCESS_WH_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PROCESS_WH_ID(ARTWORK_PROCESS_WH_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_REQUEST_SERVICE
{
    public static ART_WF_ARTWORK_REQUEST GetByARTWORK_REQUEST_ID(int? ARTWORK_REQUEST_ID, ARTWORKEntities dc) { if (ARTWORK_REQUEST_ID == null || ARTWORK_REQUEST_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_REQUEST where p.ARTWORK_REQUEST_ID == ARTWORK_REQUEST_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_REQUEST_ID(int? ARTWORK_REQUEST_ID, ARTWORKEntities dc) { if (ARTWORK_REQUEST_ID == null || ARTWORK_REQUEST_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_REQUEST where p.ARTWORK_REQUEST_ID == ARTWORK_REQUEST_ID select p.ARTWORK_REQUEST_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_REQUEST> GetByItem(ART_WF_ARTWORK_REQUEST Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_REQUEST select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST> CriteriaBy(IQueryable<ART_WF_ARTWORK_REQUEST> q, ART_WF_ARTWORK_REQUEST criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_ID)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_ID == criteria.REFERENCE_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_NO)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_NO == criteria.REFERENCE_REQUEST_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_TYPE)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_TYPE == criteria.REFERENCE_REQUEST_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_ARTWORK)) { doWork = true; q = (from r in q where r.TYPE_OF_ARTWORK == criteria.TYPE_OF_ARTWORK select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_NO)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_NO == criteria.ARTWORK_REQUEST_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROJECT_NAME)) { doWork = true; q = (from r in q where r.PROJECT_NAME == criteria.PROJECT_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_PRODUCT_ID)) { doWork = true; q = (from r in q where r.TYPE_OF_PRODUCT_ID == criteria.TYPE_OF_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REVIEWER_ID)) { doWork = true; q = (from r in q where r.REVIEWER_ID == criteria.REVIEWER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATOR_ID)) { doWork = true; q = (from r in q where r.CREATOR_ID == criteria.CREATOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ID)) { doWork = true; q = (from r in q where r.COMPANY_ID == criteria.COMPANY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_ID)) { doWork = true; q = (from r in q where r.SOLD_TO_ID == criteria.SOLD_TO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_ID)) { doWork = true; q = (from r in q where r.SHIP_TO_ID == criteria.SHIP_TO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_OTHER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_OTHER_ID == criteria.CUSTOMER_OTHER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_ID == criteria.PRIMARY_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_OTHER == criteria.PRIMARY_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_ID == criteria.PRIMARY_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER == criteria.PRIMARY_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_ID)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_ID == criteria.CONTAINER_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER == criteria.CONTAINER_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_ID)) { doWork = true; q = (from r in q where r.LID_TYPE_ID == criteria.LID_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER == criteria.LID_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_ID)) { doWork = true; q = (from r in q where r.PACKING_STYLE_ID == criteria.PACKING_STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER == criteria.PACKING_STYLE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_ID)) { doWork = true; q = (from r in q where r.PACK_SIZE_ID == criteria.PACK_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER == criteria.PACK_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OTHER == criteria.BRAND_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_DELIVERY_DATE)) { doWork = true; q = (from r in q where r.REQUEST_DELIVERY_DATE == criteria.REQUEST_DELIVERY_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIAL_REQUIREMENT)) { doWork = true; q = (from r in q where r.SPECIAL_REQUIREMENT == criteria.SPECIAL_REQUIREMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.OTHER_REQUEST)) { doWork = true; q = (from r in q where r.OTHER_REQUEST == criteria.OTHER_REQUEST select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_FORM_FOLDER_NODE_ID)) { doWork = true; q = (from r in q where r.REQUEST_FORM_FOLDER_NODE_ID == criteria.REQUEST_FORM_FOLDER_NODE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TWO_P_ID)) { doWork = true; q = (from r in q where r.TWO_P_ID == criteria.TWO_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.THREE_P_ID)) { doWork = true; q = (from r in q where r.THREE_P_ID == criteria.THREE_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPLOAD_BY)) { doWork = true; q = (from r in q where r.UPLOAD_BY == criteria.UPLOAD_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_FORM_CREATE_DATE)) { doWork = true; q = (from r in q where r.REQUEST_FORM_CREATE_DATE == criteria.REQUEST_FORM_CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO == criteria.IN_TRANSIT_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA == criteria.VIA select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_TYPE)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_TYPE == criteria.ARTWORK_REQUEST_TYPE select r); } if (!doWork) { q = (from r in q where r.ARTWORK_REQUEST_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST> GetByItemContain(ART_WF_ARTWORK_REQUEST Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_REQUEST select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST> CriteriaByContains(IQueryable<ART_WF_ARTWORK_REQUEST> q, ART_WF_ARTWORK_REQUEST criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_NO)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_NO.Contains(criteria.REFERENCE_REQUEST_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_TYPE)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_TYPE.Contains(criteria.REFERENCE_REQUEST_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_ARTWORK)) { doWork = true; q = (from r in q where r.TYPE_OF_ARTWORK.Contains(criteria.TYPE_OF_ARTWORK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_NO)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_NO.Contains(criteria.ARTWORK_REQUEST_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROJECT_NAME)) { doWork = true; q = (from r in q where r.PROJECT_NAME.Contains(criteria.PROJECT_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_OTHER.Contains(criteria.PRIMARY_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER.Contains(criteria.PRIMARY_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER.Contains(criteria.CONTAINER_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER.Contains(criteria.LID_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER.Contains(criteria.PACKING_STYLE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER.Contains(criteria.PACK_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OTHER.Contains(criteria.BRAND_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIAL_REQUIREMENT)) { doWork = true; q = (from r in q where r.SPECIAL_REQUIREMENT.Contains(criteria.SPECIAL_REQUIREMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OTHER_REQUEST)) { doWork = true; q = (from r in q where r.OTHER_REQUEST.Contains(criteria.OTHER_REQUEST) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO.Contains(criteria.IN_TRANSIT_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA.Contains(criteria.VIA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_TYPE)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_TYPE.Contains(criteria.ARTWORK_REQUEST_TYPE) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_REQUEST_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_REQUEST select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_REQUEST Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_REQUEST_ID(Item.ARTWORK_REQUEST_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_REQUEST_ID(Item.ARTWORK_REQUEST_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST>().Local.FirstOrDefault(f => f.ARTWORK_REQUEST_ID == Item.ARTWORK_REQUEST_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_REQUEST Item, ARTWORKEntities dc) { if (GetChkByARTWORK_REQUEST_ID(Item.ARTWORK_REQUEST_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_REQUEST_ID(Item.ARTWORK_REQUEST_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST>().Local.FirstOrDefault(f => f.ARTWORK_REQUEST_ID == Item.ARTWORK_REQUEST_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_REQUEST Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_REQUEST Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST>().Local.FirstOrDefault(f => f.ARTWORK_REQUEST_ID == Item.ARTWORK_REQUEST_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_REQUEST NewItem, ART_WF_ARTWORK_REQUEST OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_REQUEST"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_REQUEST_ID(int? ARTWORK_REQUEST_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_REQUEST_ID(ARTWORK_REQUEST_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_REQUEST_COUNTRY_SERVICE
{
    public static ART_WF_ARTWORK_REQUEST_COUNTRY GetByARTWORK_COUNTRY_ID(int? ARTWORK_COUNTRY_ID, ARTWORKEntities dc) { if (ARTWORK_COUNTRY_ID == null || ARTWORK_COUNTRY_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_REQUEST_COUNTRY where p.ARTWORK_COUNTRY_ID == ARTWORK_COUNTRY_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_COUNTRY_ID(int? ARTWORK_COUNTRY_ID, ARTWORKEntities dc) { if (ARTWORK_COUNTRY_ID == null || ARTWORK_COUNTRY_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_REQUEST_COUNTRY where p.ARTWORK_COUNTRY_ID == ARTWORK_COUNTRY_ID select p.ARTWORK_COUNTRY_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_REQUEST_COUNTRY> GetByItem(ART_WF_ARTWORK_REQUEST_COUNTRY Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_COUNTRY>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_REQUEST_COUNTRY select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_COUNTRY> CriteriaBy(IQueryable<ART_WF_ARTWORK_REQUEST_COUNTRY> q, ART_WF_ARTWORK_REQUEST_COUNTRY criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_COUNTRY_ID)) { doWork = true; q = (from r in q where r.ARTWORK_COUNTRY_ID == criteria.ARTWORK_COUNTRY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY_ID)) { doWork = true; q = (from r in q where r.COUNTRY_ID == criteria.COUNTRY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_COUNTRY_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_COUNTRY> GetByItemContain(ART_WF_ARTWORK_REQUEST_COUNTRY Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_COUNTRY>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_REQUEST_COUNTRY select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_COUNTRY> CriteriaByContains(IQueryable<ART_WF_ARTWORK_REQUEST_COUNTRY> q, ART_WF_ARTWORK_REQUEST_COUNTRY criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_COUNTRY_ID)) { doWork = true; q = (from r in q where r.ARTWORK_COUNTRY_ID == criteria.ARTWORK_COUNTRY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY_ID)) { doWork = true; q = (from r in q where r.COUNTRY_ID.ToString().Contains(criteria.COUNTRY_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_COUNTRY_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_COUNTRY> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_REQUEST_COUNTRY select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_REQUEST_COUNTRY Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_COUNTRY_ID(Item.ARTWORK_COUNTRY_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_COUNTRY.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_COUNTRY_ID(Item.ARTWORK_COUNTRY_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_COUNTRY>().Local.FirstOrDefault(f => f.ARTWORK_COUNTRY_ID == Item.ARTWORK_COUNTRY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_REQUEST_COUNTRY Item, ARTWORKEntities dc) { if (GetChkByARTWORK_COUNTRY_ID(Item.ARTWORK_COUNTRY_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_COUNTRY.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_COUNTRY_ID(Item.ARTWORK_COUNTRY_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_COUNTRY>().Local.FirstOrDefault(f => f.ARTWORK_COUNTRY_ID == Item.ARTWORK_COUNTRY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_REQUEST_COUNTRY Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_COUNTRY.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_REQUEST_COUNTRY Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_COUNTRY>().Local.FirstOrDefault(f => f.ARTWORK_COUNTRY_ID == Item.ARTWORK_COUNTRY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_REQUEST_COUNTRY NewItem, ART_WF_ARTWORK_REQUEST_COUNTRY OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_REQUEST_COUNTRY"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_COUNTRY_ID(int? ARTWORK_COUNTRY_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_COUNTRY_ID(ARTWORK_COUNTRY_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER_SERVICE
{
    public static ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER GetByARTWORK_OTHER_CUSTOMER_ID(int? ARTWORK_OTHER_CUSTOMER_ID, ARTWORKEntities dc) { if (ARTWORK_OTHER_CUSTOMER_ID == null || ARTWORK_OTHER_CUSTOMER_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER where p.ARTWORK_OTHER_CUSTOMER_ID == ARTWORK_OTHER_CUSTOMER_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_OTHER_CUSTOMER_ID(int? ARTWORK_OTHER_CUSTOMER_ID, ARTWORKEntities dc) { if (ARTWORK_OTHER_CUSTOMER_ID == null || ARTWORK_OTHER_CUSTOMER_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER where p.ARTWORK_OTHER_CUSTOMER_ID == ARTWORK_OTHER_CUSTOMER_ID select p.ARTWORK_OTHER_CUSTOMER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER> GetByItem(ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER> CriteriaBy(IQueryable<ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER> q, ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_OTHER_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.ARTWORK_OTHER_CUSTOMER_ID == criteria.ARTWORK_OTHER_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_USER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_USER_ID == criteria.CUSTOMER_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MAIL_TO)) { doWork = true; q = (from r in q where r.MAIL_TO == criteria.MAIL_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MAIL_CC)) { doWork = true; q = (from r in q where r.MAIL_CC == criteria.MAIL_CC select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_OTHER_CUSTOMER_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER> GetByItemContain(ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER> CriteriaByContains(IQueryable<ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER> q, ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_OTHER_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.ARTWORK_OTHER_CUSTOMER_ID == criteria.ARTWORK_OTHER_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_USER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_USER_ID.ToString().Contains(criteria.CUSTOMER_USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MAIL_TO)) { doWork = true; q = (from r in q where r.MAIL_TO.Contains(criteria.MAIL_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MAIL_CC)) { doWork = true; q = (from r in q where r.MAIL_CC.Contains(criteria.MAIL_CC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_OTHER_CUSTOMER_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_OTHER_CUSTOMER_ID(Item.ARTWORK_OTHER_CUSTOMER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_OTHER_CUSTOMER_ID(Item.ARTWORK_OTHER_CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER>().Local.FirstOrDefault(f => f.ARTWORK_OTHER_CUSTOMER_ID == Item.ARTWORK_OTHER_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER Item, ARTWORKEntities dc) { if (GetChkByARTWORK_OTHER_CUSTOMER_ID(Item.ARTWORK_OTHER_CUSTOMER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_OTHER_CUSTOMER_ID(Item.ARTWORK_OTHER_CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER>().Local.FirstOrDefault(f => f.ARTWORK_OTHER_CUSTOMER_ID == Item.ARTWORK_OTHER_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER>().Local.FirstOrDefault(f => f.ARTWORK_OTHER_CUSTOMER_ID == Item.ARTWORK_OTHER_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER NewItem, ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_REQUEST_CUSTOMER_OTHER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_OTHER_CUSTOMER_ID(int? ARTWORK_OTHER_CUSTOMER_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_OTHER_CUSTOMER_ID(ARTWORK_OTHER_CUSTOMER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_REQUEST_ITEM_SERVICE
{
    public static ART_WF_ARTWORK_REQUEST_ITEM GetByARTWORK_ITEM_ID(int? ARTWORK_ITEM_ID, ARTWORKEntities dc) { if (ARTWORK_ITEM_ID == null || ARTWORK_ITEM_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_REQUEST_ITEM where p.ARTWORK_ITEM_ID == ARTWORK_ITEM_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_ITEM_ID(int? ARTWORK_ITEM_ID, ARTWORKEntities dc) { if (ARTWORK_ITEM_ID == null || ARTWORK_ITEM_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_REQUEST_ITEM where p.ARTWORK_ITEM_ID == ARTWORK_ITEM_ID select p.ARTWORK_ITEM_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_REQUEST_ITEM> GetByItem(ART_WF_ARTWORK_REQUEST_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_ITEM>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_REQUEST_ITEM select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_ITEM> CriteriaBy(IQueryable<ART_WF_ARTWORK_REQUEST_ITEM> q, ART_WF_ARTWORK_REQUEST_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_ITEM_ID)) { doWork = true; q = (from r in q where r.ARTWORK_ITEM_ID == criteria.ARTWORK_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_ITEM_NO)) { doWork = true; q = (from r in q where r.REQUEST_ITEM_NO == criteria.REQUEST_ITEM_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.FILE_NAME)) { doWork = true; q = (from r in q where r.FILE_NAME == criteria.FILE_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.FILE_SIZE)) { doWork = true; q = (from r in q where r.FILE_SIZE == criteria.FILE_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_FORM_FILE_NODE_ID)) { doWork = true; q = (from r in q where r.REQUEST_FORM_FILE_NODE_ID == criteria.REQUEST_FORM_FILE_NODE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTENT_TYPE)) { doWork = true; q = (from r in q where r.CONTENT_TYPE == criteria.CONTENT_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXTENSION)) { doWork = true; q = (from r in q where r.EXTENSION == criteria.EXTENSION select r); } if (!CheckValue.EqualsDefaultValue(criteria.REPEAT_SO_MATERIAL_NO)) { doWork = true; q = (from r in q where r.REPEAT_SO_MATERIAL_NO == criteria.REPEAT_SO_MATERIAL_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_ITEM_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_ITEM> GetByItemContain(ART_WF_ARTWORK_REQUEST_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_ITEM>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_REQUEST_ITEM select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_ITEM> CriteriaByContains(IQueryable<ART_WF_ARTWORK_REQUEST_ITEM> q, ART_WF_ARTWORK_REQUEST_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_ITEM_ID)) { doWork = true; q = (from r in q where r.ARTWORK_ITEM_ID == criteria.ARTWORK_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_ITEM_NO)) { doWork = true; q = (from r in q where r.REQUEST_ITEM_NO.Contains(criteria.REQUEST_ITEM_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FILE_NAME)) { doWork = true; q = (from r in q where r.FILE_NAME.Contains(criteria.FILE_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTENT_TYPE)) { doWork = true; q = (from r in q where r.CONTENT_TYPE.Contains(criteria.CONTENT_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXTENSION)) { doWork = true; q = (from r in q where r.EXTENSION.Contains(criteria.EXTENSION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REPEAT_SO_MATERIAL_NO)) { doWork = true; q = (from r in q where r.REPEAT_SO_MATERIAL_NO.Contains(criteria.REPEAT_SO_MATERIAL_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_ITEM_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_ITEM> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_REQUEST_ITEM select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_REQUEST_ITEM Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_ITEM_ID(Item.ARTWORK_ITEM_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_ITEM.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_ITEM_ID(Item.ARTWORK_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_ITEM>().Local.FirstOrDefault(f => f.ARTWORK_ITEM_ID == Item.ARTWORK_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_REQUEST_ITEM Item, ARTWORKEntities dc) { if (GetChkByARTWORK_ITEM_ID(Item.ARTWORK_ITEM_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_ITEM.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_ITEM_ID(Item.ARTWORK_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_ITEM>().Local.FirstOrDefault(f => f.ARTWORK_ITEM_ID == Item.ARTWORK_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_REQUEST_ITEM Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_ITEM.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_REQUEST_ITEM Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_ITEM>().Local.FirstOrDefault(f => f.ARTWORK_ITEM_ID == Item.ARTWORK_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_REQUEST_ITEM NewItem, ART_WF_ARTWORK_REQUEST_ITEM OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_REQUEST_ITEM"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_ITEM_ID(int? ARTWORK_ITEM_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_ITEM_ID(ARTWORK_ITEM_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_REQUEST_PRODUCT_SERVICE
{
    public static ART_WF_ARTWORK_REQUEST_PRODUCT GetByARTWORK_PRODUCT_ID(int? ARTWORK_PRODUCT_ID, ARTWORKEntities dc) { if (ARTWORK_PRODUCT_ID == null || ARTWORK_PRODUCT_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_REQUEST_PRODUCT where p.ARTWORK_PRODUCT_ID == ARTWORK_PRODUCT_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PRODUCT_ID(int? ARTWORK_PRODUCT_ID, ARTWORKEntities dc) { if (ARTWORK_PRODUCT_ID == null || ARTWORK_PRODUCT_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_REQUEST_PRODUCT where p.ARTWORK_PRODUCT_ID == ARTWORK_PRODUCT_ID select p.ARTWORK_PRODUCT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_REQUEST_PRODUCT> GetByItem(ART_WF_ARTWORK_REQUEST_PRODUCT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_PRODUCT>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_REQUEST_PRODUCT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_PRODUCT> CriteriaBy(IQueryable<ART_WF_ARTWORK_REQUEST_PRODUCT> q, ART_WF_ARTWORK_REQUEST_PRODUCT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PRODUCT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PRODUCT_ID == criteria.ARTWORK_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE_ID)) { doWork = true; q = (from r in q where r.PRODUCT_CODE_ID == criteria.PRODUCT_CODE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_TYPE)) { doWork = true; q = (from r in q where r.PRODUCT_TYPE == criteria.PRODUCT_TYPE select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PRODUCT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_PRODUCT> GetByItemContain(ART_WF_ARTWORK_REQUEST_PRODUCT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_PRODUCT>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_REQUEST_PRODUCT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_PRODUCT> CriteriaByContains(IQueryable<ART_WF_ARTWORK_REQUEST_PRODUCT> q, ART_WF_ARTWORK_REQUEST_PRODUCT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PRODUCT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PRODUCT_ID == criteria.ARTWORK_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE_ID)) { doWork = true; q = (from r in q where r.PRODUCT_CODE_ID.ToString().Contains(criteria.PRODUCT_CODE_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_TYPE)) { doWork = true; q = (from r in q where r.PRODUCT_TYPE.Contains(criteria.PRODUCT_TYPE) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PRODUCT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_PRODUCT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_REQUEST_PRODUCT select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_REQUEST_PRODUCT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PRODUCT_ID(Item.ARTWORK_PRODUCT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_PRODUCT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PRODUCT_ID(Item.ARTWORK_PRODUCT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_PRODUCT>().Local.FirstOrDefault(f => f.ARTWORK_PRODUCT_ID == Item.ARTWORK_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_REQUEST_PRODUCT Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PRODUCT_ID(Item.ARTWORK_PRODUCT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_PRODUCT.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PRODUCT_ID(Item.ARTWORK_PRODUCT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_PRODUCT>().Local.FirstOrDefault(f => f.ARTWORK_PRODUCT_ID == Item.ARTWORK_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_REQUEST_PRODUCT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_PRODUCT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_REQUEST_PRODUCT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_PRODUCT>().Local.FirstOrDefault(f => f.ARTWORK_PRODUCT_ID == Item.ARTWORK_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_REQUEST_PRODUCT NewItem, ART_WF_ARTWORK_REQUEST_PRODUCT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_REQUEST_PRODUCT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PRODUCT_ID(int? ARTWORK_PRODUCT_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PRODUCT_ID(ARTWORK_PRODUCT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT_SERVICE
{
    public static ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT GetByARTWORK_PRODUCTION_PLANT_ID(int? ARTWORK_PRODUCTION_PLANT_ID, ARTWORKEntities dc) { if (ARTWORK_PRODUCTION_PLANT_ID == null || ARTWORK_PRODUCTION_PLANT_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT where p.ARTWORK_PRODUCTION_PLANT_ID == ARTWORK_PRODUCTION_PLANT_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_PRODUCTION_PLANT_ID(int? ARTWORK_PRODUCTION_PLANT_ID, ARTWORKEntities dc) { if (ARTWORK_PRODUCTION_PLANT_ID == null || ARTWORK_PRODUCTION_PLANT_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT where p.ARTWORK_PRODUCTION_PLANT_ID == ARTWORK_PRODUCTION_PLANT_ID select p.ARTWORK_PRODUCTION_PLANT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT> GetByItem(ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT> CriteriaBy(IQueryable<ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT> q, ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PRODUCTION_PLANT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PRODUCTION_PLANT_ID == criteria.ARTWORK_PRODUCTION_PLANT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT_ID)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT_ID == criteria.PRODUCTION_PLANT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PRODUCTION_PLANT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT> GetByItemContain(ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT> CriteriaByContains(IQueryable<ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT> q, ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PRODUCTION_PLANT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PRODUCTION_PLANT_ID == criteria.ARTWORK_PRODUCTION_PLANT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT_ID)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT_ID.ToString().Contains(criteria.PRODUCTION_PLANT_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_PRODUCTION_PLANT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_PRODUCTION_PLANT_ID(Item.ARTWORK_PRODUCTION_PLANT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_PRODUCTION_PLANT_ID(Item.ARTWORK_PRODUCTION_PLANT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT>().Local.FirstOrDefault(f => f.ARTWORK_PRODUCTION_PLANT_ID == Item.ARTWORK_PRODUCTION_PLANT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT Item, ARTWORKEntities dc) { if (GetChkByARTWORK_PRODUCTION_PLANT_ID(Item.ARTWORK_PRODUCTION_PLANT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_PRODUCTION_PLANT_ID(Item.ARTWORK_PRODUCTION_PLANT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT>().Local.FirstOrDefault(f => f.ARTWORK_PRODUCTION_PLANT_ID == Item.ARTWORK_PRODUCTION_PLANT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT>().Local.FirstOrDefault(f => f.ARTWORK_PRODUCTION_PLANT_ID == Item.ARTWORK_PRODUCTION_PLANT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT NewItem, ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_REQUEST_PRODUCTION_PLANT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_PRODUCTION_PLANT_ID(int? ARTWORK_PRODUCTION_PLANT_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_PRODUCTION_PLANT_ID(ARTWORK_PRODUCTION_PLANT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_REQUEST_RECIPIENT_SERVICE
{
    public static ART_WF_ARTWORK_REQUEST_RECIPIENT GetByARTWORK_RECIPIENT_ID(int? ARTWORK_RECIPIENT_ID, ARTWORKEntities dc) { if (ARTWORK_RECIPIENT_ID == null || ARTWORK_RECIPIENT_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_REQUEST_RECIPIENT where p.ARTWORK_RECIPIENT_ID == ARTWORK_RECIPIENT_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_RECIPIENT_ID(int? ARTWORK_RECIPIENT_ID, ARTWORKEntities dc) { if (ARTWORK_RECIPIENT_ID == null || ARTWORK_RECIPIENT_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_REQUEST_RECIPIENT where p.ARTWORK_RECIPIENT_ID == ARTWORK_RECIPIENT_ID select p.ARTWORK_RECIPIENT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_REQUEST_RECIPIENT> GetByItem(ART_WF_ARTWORK_REQUEST_RECIPIENT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_RECIPIENT>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_REQUEST_RECIPIENT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_RECIPIENT> CriteriaBy(IQueryable<ART_WF_ARTWORK_REQUEST_RECIPIENT> q, ART_WF_ARTWORK_REQUEST_RECIPIENT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_RECIPIENT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_RECIPIENT_ID == criteria.ARTWORK_RECIPIENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECIPIENT_USER_ID)) { doWork = true; q = (from r in q where r.RECIPIENT_USER_ID == criteria.RECIPIENT_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_RECIPIENT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_RECIPIENT> GetByItemContain(ART_WF_ARTWORK_REQUEST_RECIPIENT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_RECIPIENT>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_REQUEST_RECIPIENT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_RECIPIENT> CriteriaByContains(IQueryable<ART_WF_ARTWORK_REQUEST_RECIPIENT> q, ART_WF_ARTWORK_REQUEST_RECIPIENT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_RECIPIENT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_RECIPIENT_ID == criteria.ARTWORK_RECIPIENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECIPIENT_USER_ID)) { doWork = true; q = (from r in q where r.RECIPIENT_USER_ID.ToString().Contains(criteria.RECIPIENT_USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_RECIPIENT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_RECIPIENT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_REQUEST_RECIPIENT select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_REQUEST_RECIPIENT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_RECIPIENT_ID(Item.ARTWORK_RECIPIENT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_RECIPIENT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_RECIPIENT_ID(Item.ARTWORK_RECIPIENT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_RECIPIENT>().Local.FirstOrDefault(f => f.ARTWORK_RECIPIENT_ID == Item.ARTWORK_RECIPIENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_REQUEST_RECIPIENT Item, ARTWORKEntities dc) { if (GetChkByARTWORK_RECIPIENT_ID(Item.ARTWORK_RECIPIENT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_RECIPIENT.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_RECIPIENT_ID(Item.ARTWORK_RECIPIENT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_RECIPIENT>().Local.FirstOrDefault(f => f.ARTWORK_RECIPIENT_ID == Item.ARTWORK_RECIPIENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_REQUEST_RECIPIENT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_RECIPIENT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_REQUEST_RECIPIENT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_RECIPIENT>().Local.FirstOrDefault(f => f.ARTWORK_RECIPIENT_ID == Item.ARTWORK_RECIPIENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_REQUEST_RECIPIENT NewItem, ART_WF_ARTWORK_REQUEST_RECIPIENT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_REQUEST_RECIPIENT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_RECIPIENT_ID(int? ARTWORK_RECIPIENT_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_RECIPIENT_ID(ARTWORK_RECIPIENT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_REQUEST_REFERENCE_SERVICE
{
    public static ART_WF_ARTWORK_REQUEST_REFERENCE GetByARTWORK_REFERENCE_ID(int? ARTWORK_REFERENCE_ID, ARTWORKEntities dc) { if (ARTWORK_REFERENCE_ID == null || ARTWORK_REFERENCE_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_REQUEST_REFERENCE where p.ARTWORK_REFERENCE_ID == ARTWORK_REFERENCE_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_REFERENCE_ID(int? ARTWORK_REFERENCE_ID, ARTWORKEntities dc) { if (ARTWORK_REFERENCE_ID == null || ARTWORK_REFERENCE_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_REQUEST_REFERENCE where p.ARTWORK_REFERENCE_ID == ARTWORK_REFERENCE_ID select p.ARTWORK_REFERENCE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_REQUEST_REFERENCE> GetByItem(ART_WF_ARTWORK_REQUEST_REFERENCE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_REFERENCE>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_REQUEST_REFERENCE select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_REFERENCE> CriteriaBy(IQueryable<ART_WF_ARTWORK_REQUEST_REFERENCE> q, ART_WF_ARTWORK_REQUEST_REFERENCE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REFERENCE_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REFERENCE_ID == criteria.ARTWORK_REFERENCE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_NO)) { doWork = true; q = (from r in q where r.REFERENCE_NO == criteria.REFERENCE_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DRAINED_WEIGHT)) { doWork = true; q = (from r in q where r.DRAINED_WEIGHT == criteria.DRAINED_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_TYPE)) { doWork = true; q = (from r in q where r.PRODUCT_TYPE == criteria.PRODUCT_TYPE select r); } if (!doWork) { q = (from r in q where r.ARTWORK_REFERENCE_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_REFERENCE> GetByItemContain(ART_WF_ARTWORK_REQUEST_REFERENCE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_REFERENCE>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_REQUEST_REFERENCE select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_REFERENCE> CriteriaByContains(IQueryable<ART_WF_ARTWORK_REQUEST_REFERENCE> q, ART_WF_ARTWORK_REQUEST_REFERENCE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REFERENCE_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REFERENCE_ID == criteria.ARTWORK_REFERENCE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_NO)) { doWork = true; q = (from r in q where r.REFERENCE_NO.Contains(criteria.REFERENCE_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DRAINED_WEIGHT)) { doWork = true; q = (from r in q where r.DRAINED_WEIGHT.Contains(criteria.DRAINED_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_TYPE)) { doWork = true; q = (from r in q where r.PRODUCT_TYPE.Contains(criteria.PRODUCT_TYPE) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_REFERENCE_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_REFERENCE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_REQUEST_REFERENCE select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_REQUEST_REFERENCE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_REFERENCE_ID(Item.ARTWORK_REFERENCE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_REFERENCE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_REFERENCE_ID(Item.ARTWORK_REFERENCE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_REFERENCE>().Local.FirstOrDefault(f => f.ARTWORK_REFERENCE_ID == Item.ARTWORK_REFERENCE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_REQUEST_REFERENCE Item, ARTWORKEntities dc) { if (GetChkByARTWORK_REFERENCE_ID(Item.ARTWORK_REFERENCE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_REFERENCE.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_REFERENCE_ID(Item.ARTWORK_REFERENCE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_REFERENCE>().Local.FirstOrDefault(f => f.ARTWORK_REFERENCE_ID == Item.ARTWORK_REFERENCE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_REQUEST_REFERENCE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_REFERENCE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_REQUEST_REFERENCE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_REFERENCE>().Local.FirstOrDefault(f => f.ARTWORK_REFERENCE_ID == Item.ARTWORK_REFERENCE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_REQUEST_REFERENCE NewItem, ART_WF_ARTWORK_REQUEST_REFERENCE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_REQUEST_REFERENCE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_REFERENCE_ID(int? ARTWORK_REFERENCE_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_REFERENCE_ID(ARTWORK_REFERENCE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_REQUEST_SALES_ORDER_SERVICE
{
    public static ART_WF_ARTWORK_REQUEST_SALES_ORDER GetByARTWORK_SALES_ORDER_ID(int? ARTWORK_SALES_ORDER_ID, ARTWORKEntities dc) { if (ARTWORK_SALES_ORDER_ID == null || ARTWORK_SALES_ORDER_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER where p.ARTWORK_SALES_ORDER_ID == ARTWORK_SALES_ORDER_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_SALES_ORDER_ID(int? ARTWORK_SALES_ORDER_ID, ARTWORKEntities dc) { if (ARTWORK_SALES_ORDER_ID == null || ARTWORK_SALES_ORDER_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER where p.ARTWORK_SALES_ORDER_ID == ARTWORK_SALES_ORDER_ID select p.ARTWORK_SALES_ORDER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_REQUEST_SALES_ORDER> GetByItem(ART_WF_ARTWORK_REQUEST_SALES_ORDER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_SALES_ORDER>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_SALES_ORDER> CriteriaBy(IQueryable<ART_WF_ARTWORK_REQUEST_SALES_ORDER> q, ART_WF_ARTWORK_REQUEST_SALES_ORDER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SALES_ORDER_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SALES_ORDER_ID == criteria.ARTWORK_SALES_ORDER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SALES_ORDER_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_SALES_ORDER> GetByItemContain(ART_WF_ARTWORK_REQUEST_SALES_ORDER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_SALES_ORDER>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_SALES_ORDER> CriteriaByContains(IQueryable<ART_WF_ARTWORK_REQUEST_SALES_ORDER> q, ART_WF_ARTWORK_REQUEST_SALES_ORDER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SALES_ORDER_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SALES_ORDER_ID == criteria.ARTWORK_SALES_ORDER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SALES_ORDER_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_SALES_ORDER> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_REQUEST_SALES_ORDER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_SALES_ORDER_ID(Item.ARTWORK_SALES_ORDER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_SALES_ORDER_ID(Item.ARTWORK_SALES_ORDER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_SALES_ORDER>().Local.FirstOrDefault(f => f.ARTWORK_SALES_ORDER_ID == Item.ARTWORK_SALES_ORDER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_REQUEST_SALES_ORDER Item, ARTWORKEntities dc) { if (GetChkByARTWORK_SALES_ORDER_ID(Item.ARTWORK_SALES_ORDER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_SALES_ORDER_ID(Item.ARTWORK_SALES_ORDER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_SALES_ORDER>().Local.FirstOrDefault(f => f.ARTWORK_SALES_ORDER_ID == Item.ARTWORK_SALES_ORDER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_REQUEST_SALES_ORDER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_REQUEST_SALES_ORDER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_SALES_ORDER>().Local.FirstOrDefault(f => f.ARTWORK_SALES_ORDER_ID == Item.ARTWORK_SALES_ORDER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_REQUEST_SALES_ORDER NewItem, ART_WF_ARTWORK_REQUEST_SALES_ORDER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_REQUEST_SALES_ORDER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_SALES_ORDER_ID(int? ARTWORK_SALES_ORDER_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_SALES_ORDER_ID(ARTWORK_SALES_ORDER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT_SERVICE
{
    public static ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT GetByARTWORK_SALES_ORDER_REPEAT_ID(int? ARTWORK_SALES_ORDER_REPEAT_ID, ARTWORKEntities dc) { if (ARTWORK_SALES_ORDER_REPEAT_ID == null || ARTWORK_SALES_ORDER_REPEAT_ID == 0) return null; else return (from p in dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT where p.ARTWORK_SALES_ORDER_REPEAT_ID == ARTWORK_SALES_ORDER_REPEAT_ID select p).FirstOrDefault(); }
    private static int? GetChkByARTWORK_SALES_ORDER_REPEAT_ID(int? ARTWORK_SALES_ORDER_REPEAT_ID, ARTWORKEntities dc) { if (ARTWORK_SALES_ORDER_REPEAT_ID == null || ARTWORK_SALES_ORDER_REPEAT_ID == 0) return null; else { var temp = (from p in dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT where p.ARTWORK_SALES_ORDER_REPEAT_ID == ARTWORK_SALES_ORDER_REPEAT_ID select p.ARTWORK_SALES_ORDER_REPEAT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT> GetByItem(ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT>(); else return CriteriaBy((from p in dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT> CriteriaBy(IQueryable<ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT> q, ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SALES_ORDER_REPEAT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SALES_ORDER_REPEAT_ID == criteria.ARTWORK_SALES_ORDER_REPEAT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_ITEM)) { doWork = true; q = (from r in q where r.SALES_ORDER_ITEM == criteria.SALES_ORDER_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM == criteria.COMPONENT_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL == criteria.COMPONENT_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SALES_ORDER_REPEAT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT> GetByItemContain(ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT>(); else return CriteriaByContains((from p in dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT select p), Item).ToList(); }
    private static IQueryable<ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT> CriteriaByContains(IQueryable<ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT> q, ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SALES_ORDER_REPEAT_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SALES_ORDER_REPEAT_ID == criteria.ARTWORK_SALES_ORDER_REPEAT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_ITEM)) { doWork = true; q = (from r in q where r.SALES_ORDER_ITEM.Contains(criteria.SALES_ORDER_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM.Contains(criteria.COMPONENT_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL.Contains(criteria.COMPONENT_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ARTWORK_SALES_ORDER_REPEAT_ID == 0 select r); } return q; }
    public static List<ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByARTWORK_SALES_ORDER_REPEAT_ID(Item.ARTWORK_SALES_ORDER_REPEAT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByARTWORK_SALES_ORDER_REPEAT_ID(Item.ARTWORK_SALES_ORDER_REPEAT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT>().Local.FirstOrDefault(f => f.ARTWORK_SALES_ORDER_REPEAT_ID == Item.ARTWORK_SALES_ORDER_REPEAT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT Item, ARTWORKEntities dc) { if (GetChkByARTWORK_SALES_ORDER_REPEAT_ID(Item.ARTWORK_SALES_ORDER_REPEAT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT.Add(Item); dc.SaveChanges(); } else { var temp = GetByARTWORK_SALES_ORDER_REPEAT_ID(Item.ARTWORK_SALES_ORDER_REPEAT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT>().Local.FirstOrDefault(f => f.ARTWORK_SALES_ORDER_REPEAT_ID == Item.ARTWORK_SALES_ORDER_REPEAT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT>().Local.FirstOrDefault(f => f.ARTWORK_SALES_ORDER_REPEAT_ID == Item.ARTWORK_SALES_ORDER_REPEAT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT NewItem, ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_ARTWORK_REQUEST_SALES_ORDER_REPEAT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByARTWORK_SALES_ORDER_REPEAT_ID(int? ARTWORK_SALES_ORDER_REPEAT_ID, ARTWORKEntities dc) { var Item = GetByARTWORK_SALES_ORDER_REPEAT_ID(ARTWORK_SALES_ORDER_REPEAT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_DELEGATE_SERVICE
{
    public static ART_WF_DELEGATE GetByART_WF_DELEGATE_ID(int? ART_WF_DELEGATE_ID, ARTWORKEntities dc) { if (ART_WF_DELEGATE_ID == null || ART_WF_DELEGATE_ID == 0) return null; else return (from p in dc.ART_WF_DELEGATE where p.ART_WF_DELEGATE_ID == ART_WF_DELEGATE_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_WF_DELEGATE_ID(int? ART_WF_DELEGATE_ID, ARTWORKEntities dc) { if (ART_WF_DELEGATE_ID == null || ART_WF_DELEGATE_ID == 0) return null; else { var temp = (from p in dc.ART_WF_DELEGATE where p.ART_WF_DELEGATE_ID == ART_WF_DELEGATE_ID select p.ART_WF_DELEGATE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_DELEGATE> GetByItem(ART_WF_DELEGATE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_DELEGATE>(); else return CriteriaBy((from p in dc.ART_WF_DELEGATE select p), Item).ToList(); }
    private static IQueryable<ART_WF_DELEGATE> CriteriaBy(IQueryable<ART_WF_DELEGATE> q, ART_WF_DELEGATE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_DELEGATE_ID)) { doWork = true; q = (from r in q where r.ART_WF_DELEGATE_ID == criteria.ART_WF_DELEGATE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_ID)) { doWork = true; q = (from r in q where r.CURRENT_USER_ID == criteria.CURRENT_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TO_USER_ID)) { doWork = true; q = (from r in q where r.TO_USER_ID == criteria.TO_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.FROM_DATE)) { doWork = true; q = (from r in q where r.FROM_DATE == criteria.FROM_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TO_DATE)) { doWork = true; q = (from r in q where r.TO_DATE == criteria.TO_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON)) { doWork = true; q = (from r in q where r.REASON == criteria.REASON select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_WF_DELEGATE_ID == 0 select r); } return q; }
    public static List<ART_WF_DELEGATE> GetByItemContain(ART_WF_DELEGATE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_DELEGATE>(); else return CriteriaByContains((from p in dc.ART_WF_DELEGATE select p), Item).ToList(); }
    private static IQueryable<ART_WF_DELEGATE> CriteriaByContains(IQueryable<ART_WF_DELEGATE> q, ART_WF_DELEGATE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_DELEGATE_ID)) { doWork = true; q = (from r in q where r.ART_WF_DELEGATE_ID == criteria.ART_WF_DELEGATE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_ID)) { doWork = true; q = (from r in q where r.CURRENT_USER_ID.ToString().Contains(criteria.CURRENT_USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TO_USER_ID)) { doWork = true; q = (from r in q where r.TO_USER_ID.ToString().Contains(criteria.TO_USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON)) { doWork = true; q = (from r in q where r.REASON.Contains(criteria.REASON) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_WF_DELEGATE_ID == 0 select r); } return q; }
    public static List<ART_WF_DELEGATE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_DELEGATE select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_DELEGATE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_WF_DELEGATE_ID(Item.ART_WF_DELEGATE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_DELEGATE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_WF_DELEGATE_ID(Item.ART_WF_DELEGATE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_DELEGATE>().Local.FirstOrDefault(f => f.ART_WF_DELEGATE_ID == Item.ART_WF_DELEGATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_DELEGATE Item, ARTWORKEntities dc) { if (GetChkByART_WF_DELEGATE_ID(Item.ART_WF_DELEGATE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_DELEGATE.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_WF_DELEGATE_ID(Item.ART_WF_DELEGATE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_DELEGATE>().Local.FirstOrDefault(f => f.ART_WF_DELEGATE_ID == Item.ART_WF_DELEGATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_DELEGATE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_DELEGATE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_DELEGATE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_DELEGATE>().Local.FirstOrDefault(f => f.ART_WF_DELEGATE_ID == Item.ART_WF_DELEGATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_DELEGATE NewItem, ART_WF_DELEGATE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_DELEGATE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_WF_DELEGATE_ID(int? ART_WF_DELEGATE_ID, ARTWORKEntities dc) { var Item = GetByART_WF_DELEGATE_ID(ART_WF_DELEGATE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_LOG_CHANGE_OWNER_SERVICE
{
    public static ART_WF_LOG_CHANGE_OWNER GetByART_WF_LOG_CHANGE_OWNER_ID(int? ART_WF_LOG_CHANGE_OWNER_ID, ARTWORKEntities dc) { if (ART_WF_LOG_CHANGE_OWNER_ID == null || ART_WF_LOG_CHANGE_OWNER_ID == 0) return null; else return (from p in dc.ART_WF_LOG_CHANGE_OWNER where p.ART_WF_LOG_CHANGE_OWNER_ID == ART_WF_LOG_CHANGE_OWNER_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_WF_LOG_CHANGE_OWNER_ID(int? ART_WF_LOG_CHANGE_OWNER_ID, ARTWORKEntities dc) { if (ART_WF_LOG_CHANGE_OWNER_ID == null || ART_WF_LOG_CHANGE_OWNER_ID == 0) return null; else { var temp = (from p in dc.ART_WF_LOG_CHANGE_OWNER where p.ART_WF_LOG_CHANGE_OWNER_ID == ART_WF_LOG_CHANGE_OWNER_ID select p.ART_WF_LOG_CHANGE_OWNER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_LOG_CHANGE_OWNER> GetByItem(ART_WF_LOG_CHANGE_OWNER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_LOG_CHANGE_OWNER>(); else return CriteriaBy((from p in dc.ART_WF_LOG_CHANGE_OWNER select p), Item).ToList(); }
    private static IQueryable<ART_WF_LOG_CHANGE_OWNER> CriteriaBy(IQueryable<ART_WF_LOG_CHANGE_OWNER> q, ART_WF_LOG_CHANGE_OWNER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_LOG_CHANGE_OWNER_ID)) { doWork = true; q = (from r in q where r.ART_WF_LOG_CHANGE_OWNER_ID == criteria.ART_WF_LOG_CHANGE_OWNER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE == criteria.WF_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_ID)) { doWork = true; q = (from r in q where r.WF_ID == criteria.WF_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.FROM_USER_ID)) { doWork = true; q = (from r in q where r.FROM_USER_ID == criteria.FROM_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TO_USER_ID)) { doWork = true; q = (from r in q where r.TO_USER_ID == criteria.TO_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_WF_LOG_CHANGE_OWNER_ID == 0 select r); } return q; }
    public static List<ART_WF_LOG_CHANGE_OWNER> GetByItemContain(ART_WF_LOG_CHANGE_OWNER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_LOG_CHANGE_OWNER>(); else return CriteriaByContains((from p in dc.ART_WF_LOG_CHANGE_OWNER select p), Item).ToList(); }
    private static IQueryable<ART_WF_LOG_CHANGE_OWNER> CriteriaByContains(IQueryable<ART_WF_LOG_CHANGE_OWNER> q, ART_WF_LOG_CHANGE_OWNER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_LOG_CHANGE_OWNER_ID)) { doWork = true; q = (from r in q where r.ART_WF_LOG_CHANGE_OWNER_ID == criteria.ART_WF_LOG_CHANGE_OWNER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE.Contains(criteria.WF_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_WF_LOG_CHANGE_OWNER_ID == 0 select r); } return q; }
    public static List<ART_WF_LOG_CHANGE_OWNER> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_LOG_CHANGE_OWNER select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_LOG_CHANGE_OWNER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_WF_LOG_CHANGE_OWNER_ID(Item.ART_WF_LOG_CHANGE_OWNER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_LOG_CHANGE_OWNER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_WF_LOG_CHANGE_OWNER_ID(Item.ART_WF_LOG_CHANGE_OWNER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_LOG_CHANGE_OWNER>().Local.FirstOrDefault(f => f.ART_WF_LOG_CHANGE_OWNER_ID == Item.ART_WF_LOG_CHANGE_OWNER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_LOG_CHANGE_OWNER Item, ARTWORKEntities dc) { if (GetChkByART_WF_LOG_CHANGE_OWNER_ID(Item.ART_WF_LOG_CHANGE_OWNER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_LOG_CHANGE_OWNER.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_WF_LOG_CHANGE_OWNER_ID(Item.ART_WF_LOG_CHANGE_OWNER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_LOG_CHANGE_OWNER>().Local.FirstOrDefault(f => f.ART_WF_LOG_CHANGE_OWNER_ID == Item.ART_WF_LOG_CHANGE_OWNER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_LOG_CHANGE_OWNER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_LOG_CHANGE_OWNER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_LOG_CHANGE_OWNER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_LOG_CHANGE_OWNER>().Local.FirstOrDefault(f => f.ART_WF_LOG_CHANGE_OWNER_ID == Item.ART_WF_LOG_CHANGE_OWNER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_LOG_CHANGE_OWNER NewItem, ART_WF_LOG_CHANGE_OWNER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_LOG_CHANGE_OWNER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_WF_LOG_CHANGE_OWNER_ID(int? ART_WF_LOG_CHANGE_OWNER_ID, ARTWORKEntities dc) { var Item = GetByART_WF_LOG_CHANGE_OWNER_ID(ART_WF_LOG_CHANGE_OWNER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_LOG_DELEGATE_SERVICE
{
    public static ART_WF_LOG_DELEGATE GetByART_WF_LOG_DELEGATE_ID(int? ART_WF_LOG_DELEGATE_ID, ARTWORKEntities dc) { if (ART_WF_LOG_DELEGATE_ID == null || ART_WF_LOG_DELEGATE_ID == 0) return null; else return (from p in dc.ART_WF_LOG_DELEGATE where p.ART_WF_LOG_DELEGATE_ID == ART_WF_LOG_DELEGATE_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_WF_LOG_DELEGATE_ID(int? ART_WF_LOG_DELEGATE_ID, ARTWORKEntities dc) { if (ART_WF_LOG_DELEGATE_ID == null || ART_WF_LOG_DELEGATE_ID == 0) return null; else { var temp = (from p in dc.ART_WF_LOG_DELEGATE where p.ART_WF_LOG_DELEGATE_ID == ART_WF_LOG_DELEGATE_ID select p.ART_WF_LOG_DELEGATE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_LOG_DELEGATE> GetByItem(ART_WF_LOG_DELEGATE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_LOG_DELEGATE>(); else return CriteriaBy((from p in dc.ART_WF_LOG_DELEGATE select p), Item).ToList(); }
    private static IQueryable<ART_WF_LOG_DELEGATE> CriteriaBy(IQueryable<ART_WF_LOG_DELEGATE> q, ART_WF_LOG_DELEGATE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_LOG_DELEGATE_ID)) { doWork = true; q = (from r in q where r.ART_WF_LOG_DELEGATE_ID == criteria.ART_WF_LOG_DELEGATE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE == criteria.WF_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_SUB_ID)) { doWork = true; q = (from r in q where r.WF_SUB_ID == criteria.WF_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.FROM_USER_ID)) { doWork = true; q = (from r in q where r.FROM_USER_ID == criteria.FROM_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TO_USER_ID)) { doWork = true; q = (from r in q where r.TO_USER_ID == criteria.TO_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.DELEGATE_BY)) { doWork = true; q = (from r in q where r.DELEGATE_BY == criteria.DELEGATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ID)) { doWork = true; q = (from r in q where r.STEP_ID == criteria.STEP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_WF_LOG_DELEGATE_ID == 0 select r); } return q; }
    public static List<ART_WF_LOG_DELEGATE> GetByItemContain(ART_WF_LOG_DELEGATE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_LOG_DELEGATE>(); else return CriteriaByContains((from p in dc.ART_WF_LOG_DELEGATE select p), Item).ToList(); }
    private static IQueryable<ART_WF_LOG_DELEGATE> CriteriaByContains(IQueryable<ART_WF_LOG_DELEGATE> q, ART_WF_LOG_DELEGATE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_LOG_DELEGATE_ID)) { doWork = true; q = (from r in q where r.ART_WF_LOG_DELEGATE_ID == criteria.ART_WF_LOG_DELEGATE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE.Contains(criteria.WF_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_WF_LOG_DELEGATE_ID == 0 select r); } return q; }
    public static List<ART_WF_LOG_DELEGATE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_LOG_DELEGATE select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_LOG_DELEGATE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_WF_LOG_DELEGATE_ID(Item.ART_WF_LOG_DELEGATE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_LOG_DELEGATE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_WF_LOG_DELEGATE_ID(Item.ART_WF_LOG_DELEGATE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_LOG_DELEGATE>().Local.FirstOrDefault(f => f.ART_WF_LOG_DELEGATE_ID == Item.ART_WF_LOG_DELEGATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_LOG_DELEGATE Item, ARTWORKEntities dc) { if (GetChkByART_WF_LOG_DELEGATE_ID(Item.ART_WF_LOG_DELEGATE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_LOG_DELEGATE.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_WF_LOG_DELEGATE_ID(Item.ART_WF_LOG_DELEGATE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_LOG_DELEGATE>().Local.FirstOrDefault(f => f.ART_WF_LOG_DELEGATE_ID == Item.ART_WF_LOG_DELEGATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_LOG_DELEGATE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_LOG_DELEGATE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_LOG_DELEGATE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_LOG_DELEGATE>().Local.FirstOrDefault(f => f.ART_WF_LOG_DELEGATE_ID == Item.ART_WF_LOG_DELEGATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_LOG_DELEGATE NewItem, ART_WF_LOG_DELEGATE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_LOG_DELEGATE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_WF_LOG_DELEGATE_ID(int? ART_WF_LOG_DELEGATE_ID, ARTWORKEntities dc) { var Item = GetByART_WF_LOG_DELEGATE_ID(ART_WF_LOG_DELEGATE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_LOG_REASSIGN_SERVICE
{
    public static ART_WF_LOG_REASSIGN GetByART_WF_LOG_REASSIGN_ID(int? ART_WF_LOG_REASSIGN_ID, ARTWORKEntities dc) { if (ART_WF_LOG_REASSIGN_ID == null || ART_WF_LOG_REASSIGN_ID == 0) return null; else return (from p in dc.ART_WF_LOG_REASSIGN where p.ART_WF_LOG_REASSIGN_ID == ART_WF_LOG_REASSIGN_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_WF_LOG_REASSIGN_ID(int? ART_WF_LOG_REASSIGN_ID, ARTWORKEntities dc) { if (ART_WF_LOG_REASSIGN_ID == null || ART_WF_LOG_REASSIGN_ID == 0) return null; else { var temp = (from p in dc.ART_WF_LOG_REASSIGN where p.ART_WF_LOG_REASSIGN_ID == ART_WF_LOG_REASSIGN_ID select p.ART_WF_LOG_REASSIGN_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_LOG_REASSIGN> GetByItem(ART_WF_LOG_REASSIGN Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_LOG_REASSIGN>(); else return CriteriaBy((from p in dc.ART_WF_LOG_REASSIGN select p), Item).ToList(); }
    private static IQueryable<ART_WF_LOG_REASSIGN> CriteriaBy(IQueryable<ART_WF_LOG_REASSIGN> q, ART_WF_LOG_REASSIGN criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_LOG_REASSIGN_ID)) { doWork = true; q = (from r in q where r.ART_WF_LOG_REASSIGN_ID == criteria.ART_WF_LOG_REASSIGN_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE == criteria.WF_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_SUB_ID)) { doWork = true; q = (from r in q where r.WF_SUB_ID == criteria.WF_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.FROM_USER_ID)) { doWork = true; q = (from r in q where r.FROM_USER_ID == criteria.FROM_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TO_USER_ID)) { doWork = true; q = (from r in q where r.TO_USER_ID == criteria.TO_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASSIGN_BY)) { doWork = true; q = (from r in q where r.REASSIGN_BY == criteria.REASSIGN_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ID)) { doWork = true; q = (from r in q where r.STEP_ID == criteria.STEP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_WF_LOG_REASSIGN_ID == 0 select r); } return q; }
    public static List<ART_WF_LOG_REASSIGN> GetByItemContain(ART_WF_LOG_REASSIGN Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_LOG_REASSIGN>(); else return CriteriaByContains((from p in dc.ART_WF_LOG_REASSIGN select p), Item).ToList(); }
    private static IQueryable<ART_WF_LOG_REASSIGN> CriteriaByContains(IQueryable<ART_WF_LOG_REASSIGN> q, ART_WF_LOG_REASSIGN criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_LOG_REASSIGN_ID)) { doWork = true; q = (from r in q where r.ART_WF_LOG_REASSIGN_ID == criteria.ART_WF_LOG_REASSIGN_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE.Contains(criteria.WF_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_WF_LOG_REASSIGN_ID == 0 select r); } return q; }
    public static List<ART_WF_LOG_REASSIGN> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_LOG_REASSIGN select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_LOG_REASSIGN Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_WF_LOG_REASSIGN_ID(Item.ART_WF_LOG_REASSIGN_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_LOG_REASSIGN.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_WF_LOG_REASSIGN_ID(Item.ART_WF_LOG_REASSIGN_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_LOG_REASSIGN>().Local.FirstOrDefault(f => f.ART_WF_LOG_REASSIGN_ID == Item.ART_WF_LOG_REASSIGN_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_LOG_REASSIGN Item, ARTWORKEntities dc) { if (GetChkByART_WF_LOG_REASSIGN_ID(Item.ART_WF_LOG_REASSIGN_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_LOG_REASSIGN.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_WF_LOG_REASSIGN_ID(Item.ART_WF_LOG_REASSIGN_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_LOG_REASSIGN>().Local.FirstOrDefault(f => f.ART_WF_LOG_REASSIGN_ID == Item.ART_WF_LOG_REASSIGN_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_LOG_REASSIGN Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_LOG_REASSIGN.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_LOG_REASSIGN Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_LOG_REASSIGN>().Local.FirstOrDefault(f => f.ART_WF_LOG_REASSIGN_ID == Item.ART_WF_LOG_REASSIGN_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_LOG_REASSIGN NewItem, ART_WF_LOG_REASSIGN OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_LOG_REASSIGN"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_WF_LOG_REASSIGN_ID(int? ART_WF_LOG_REASSIGN_ID, ARTWORKEntities dc) { var Item = GetByART_WF_LOG_REASSIGN_ID(ART_WF_LOG_REASSIGN_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_LOG_REOPEN_SERVICE
{
    public static ART_WF_LOG_REOPEN GetByART_WF_LOG_REOPEN_ID(int? ART_WF_LOG_REOPEN_ID, ARTWORKEntities dc) { if (ART_WF_LOG_REOPEN_ID == null || ART_WF_LOG_REOPEN_ID == 0) return null; else return (from p in dc.ART_WF_LOG_REOPEN where p.ART_WF_LOG_REOPEN_ID == ART_WF_LOG_REOPEN_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_WF_LOG_REOPEN_ID(int? ART_WF_LOG_REOPEN_ID, ARTWORKEntities dc) { if (ART_WF_LOG_REOPEN_ID == null || ART_WF_LOG_REOPEN_ID == 0) return null; else { var temp = (from p in dc.ART_WF_LOG_REOPEN where p.ART_WF_LOG_REOPEN_ID == ART_WF_LOG_REOPEN_ID select p.ART_WF_LOG_REOPEN_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_LOG_REOPEN> GetByItem(ART_WF_LOG_REOPEN Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_LOG_REOPEN>(); else return CriteriaBy((from p in dc.ART_WF_LOG_REOPEN select p), Item).ToList(); }
    private static IQueryable<ART_WF_LOG_REOPEN> CriteriaBy(IQueryable<ART_WF_LOG_REOPEN> q, ART_WF_LOG_REOPEN criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_LOG_REOPEN_ID)) { doWork = true; q = (from r in q where r.ART_WF_LOG_REOPEN_ID == criteria.ART_WF_LOG_REOPEN_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE == criteria.WF_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_SUB_ID)) { doWork = true; q = (from r in q where r.WF_SUB_ID == criteria.WF_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.FROM_USER_ID)) { doWork = true; q = (from r in q where r.FROM_USER_ID == criteria.FROM_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TO_USER_ID)) { doWork = true; q = (from r in q where r.TO_USER_ID == criteria.TO_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REOPEN_BY)) { doWork = true; q = (from r in q where r.REOPEN_BY == criteria.REOPEN_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ID)) { doWork = true; q = (from r in q where r.STEP_ID == criteria.STEP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_WF_LOG_REOPEN_ID == 0 select r); } return q; }
    public static List<ART_WF_LOG_REOPEN> GetByItemContain(ART_WF_LOG_REOPEN Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_LOG_REOPEN>(); else return CriteriaByContains((from p in dc.ART_WF_LOG_REOPEN select p), Item).ToList(); }
    private static IQueryable<ART_WF_LOG_REOPEN> CriteriaByContains(IQueryable<ART_WF_LOG_REOPEN> q, ART_WF_LOG_REOPEN criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_LOG_REOPEN_ID)) { doWork = true; q = (from r in q where r.ART_WF_LOG_REOPEN_ID == criteria.ART_WF_LOG_REOPEN_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE.Contains(criteria.WF_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_WF_LOG_REOPEN_ID == 0 select r); } return q; }
    public static List<ART_WF_LOG_REOPEN> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_LOG_REOPEN select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_LOG_REOPEN Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_WF_LOG_REOPEN_ID(Item.ART_WF_LOG_REOPEN_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_LOG_REOPEN.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_WF_LOG_REOPEN_ID(Item.ART_WF_LOG_REOPEN_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_LOG_REOPEN>().Local.FirstOrDefault(f => f.ART_WF_LOG_REOPEN_ID == Item.ART_WF_LOG_REOPEN_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_LOG_REOPEN Item, ARTWORKEntities dc) { if (GetChkByART_WF_LOG_REOPEN_ID(Item.ART_WF_LOG_REOPEN_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_LOG_REOPEN.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_WF_LOG_REOPEN_ID(Item.ART_WF_LOG_REOPEN_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_LOG_REOPEN>().Local.FirstOrDefault(f => f.ART_WF_LOG_REOPEN_ID == Item.ART_WF_LOG_REOPEN_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_LOG_REOPEN Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_LOG_REOPEN.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_LOG_REOPEN Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_LOG_REOPEN>().Local.FirstOrDefault(f => f.ART_WF_LOG_REOPEN_ID == Item.ART_WF_LOG_REOPEN_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_LOG_REOPEN NewItem, ART_WF_LOG_REOPEN OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_LOG_REOPEN"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_WF_LOG_REOPEN_ID(int? ART_WF_LOG_REOPEN_ID, ARTWORKEntities dc) { var Item = GetByART_WF_LOG_REOPEN_ID(ART_WF_LOG_REOPEN_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_ATTACHMENT_SERVICE
{
    public static ART_WF_MOCKUP_ATTACHMENT GetByMOCKUP_ATTACHMENT_ID(int? MOCKUP_ATTACHMENT_ID, ARTWORKEntities dc) { if (MOCKUP_ATTACHMENT_ID == null || MOCKUP_ATTACHMENT_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_ATTACHMENT where p.MOCKUP_ATTACHMENT_ID == MOCKUP_ATTACHMENT_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_ATTACHMENT_ID(int? MOCKUP_ATTACHMENT_ID, ARTWORKEntities dc) { if (MOCKUP_ATTACHMENT_ID == null || MOCKUP_ATTACHMENT_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_ATTACHMENT where p.MOCKUP_ATTACHMENT_ID == MOCKUP_ATTACHMENT_ID select p.MOCKUP_ATTACHMENT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_ATTACHMENT> GetByItem(ART_WF_MOCKUP_ATTACHMENT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_ATTACHMENT>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_ATTACHMENT select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_ATTACHMENT> CriteriaBy(IQueryable<ART_WF_MOCKUP_ATTACHMENT> q, ART_WF_MOCKUP_ATTACHMENT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ATTACHMENT_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ATTACHMENT_ID == criteria.MOCKUP_ATTACHMENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NODE_ID)) { doWork = true; q = (from r in q where r.NODE_ID == criteria.NODE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID)) { doWork = true; q = (from r in q where r.ROLE_ID == criteria.ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.FILE_NAME)) { doWork = true; q = (from r in q where r.FILE_NAME == criteria.FILE_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXTENSION)) { doWork = true; q = (from r in q where r.EXTENSION == criteria.EXTENSION select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE)) { doWork = true; q = (from r in q where r.SIZE == criteria.SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTENT_TYPE)) { doWork = true; q = (from r in q where r.CONTENT_TYPE == criteria.CONTENT_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_ID)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_ID == criteria.STEP_MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.VERSION)) { doWork = true; q = (from r in q where r.VERSION == criteria.VERSION select r); } if (!CheckValue.EqualsDefaultValue(criteria.VERSION2)) { doWork = true; q = (from r in q where r.VERSION2 == criteria.VERSION2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_INTERNAL)) { doWork = true; q = (from r in q where r.IS_INTERNAL == criteria.IS_INTERNAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_VENDOR)) { doWork = true; q = (from r in q where r.IS_VENDOR == criteria.IS_VENDOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_CUSTOMER)) { doWork = true; q = (from r in q where r.IS_CUSTOMER == criteria.IS_CUSTOMER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_ATTACHMENT_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_ATTACHMENT> GetByItemContain(ART_WF_MOCKUP_ATTACHMENT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_ATTACHMENT>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_ATTACHMENT select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_ATTACHMENT> CriteriaByContains(IQueryable<ART_WF_MOCKUP_ATTACHMENT> q, ART_WF_MOCKUP_ATTACHMENT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ATTACHMENT_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ATTACHMENT_ID == criteria.MOCKUP_ATTACHMENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FILE_NAME)) { doWork = true; q = (from r in q where r.FILE_NAME.Contains(criteria.FILE_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXTENSION)) { doWork = true; q = (from r in q where r.EXTENSION.Contains(criteria.EXTENSION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTENT_TYPE)) { doWork = true; q = (from r in q where r.CONTENT_TYPE.Contains(criteria.CONTENT_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VERSION2)) { doWork = true; q = (from r in q where r.VERSION2.Contains(criteria.VERSION2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_INTERNAL)) { doWork = true; q = (from r in q where r.IS_INTERNAL.Contains(criteria.IS_INTERNAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_VENDOR)) { doWork = true; q = (from r in q where r.IS_VENDOR.Contains(criteria.IS_VENDOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_CUSTOMER)) { doWork = true; q = (from r in q where r.IS_CUSTOMER.Contains(criteria.IS_CUSTOMER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_ATTACHMENT_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_ATTACHMENT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_ATTACHMENT select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_ATTACHMENT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_ATTACHMENT_ID(Item.MOCKUP_ATTACHMENT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_ATTACHMENT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_ATTACHMENT_ID(Item.MOCKUP_ATTACHMENT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_ATTACHMENT>().Local.FirstOrDefault(f => f.MOCKUP_ATTACHMENT_ID == Item.MOCKUP_ATTACHMENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_ATTACHMENT Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_ATTACHMENT_ID(Item.MOCKUP_ATTACHMENT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_ATTACHMENT.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_ATTACHMENT_ID(Item.MOCKUP_ATTACHMENT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_ATTACHMENT>().Local.FirstOrDefault(f => f.MOCKUP_ATTACHMENT_ID == Item.MOCKUP_ATTACHMENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_ATTACHMENT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_ATTACHMENT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_ATTACHMENT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_ATTACHMENT>().Local.FirstOrDefault(f => f.MOCKUP_ATTACHMENT_ID == Item.MOCKUP_ATTACHMENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_ATTACHMENT NewItem, ART_WF_MOCKUP_ATTACHMENT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_ATTACHMENT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_ATTACHMENT_ID(int? MOCKUP_ATTACHMENT_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_ATTACHMENT_ID(MOCKUP_ATTACHMENT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_CHECK_LIST_SERVICE
{
    public static ART_WF_MOCKUP_CHECK_LIST GetByCHECK_LIST_ID(int? CHECK_LIST_ID, ARTWORKEntities dc) { if (CHECK_LIST_ID == null || CHECK_LIST_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_CHECK_LIST where p.CHECK_LIST_ID == CHECK_LIST_ID select p).FirstOrDefault(); }
    private static int? GetChkByCHECK_LIST_ID(int? CHECK_LIST_ID, ARTWORKEntities dc) { if (CHECK_LIST_ID == null || CHECK_LIST_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_CHECK_LIST where p.CHECK_LIST_ID == CHECK_LIST_ID select p.CHECK_LIST_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_CHECK_LIST> GetByItem(ART_WF_MOCKUP_CHECK_LIST Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_CHECK_LIST select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST> CriteriaBy(IQueryable<ART_WF_MOCKUP_CHECK_LIST> q, ART_WF_MOCKUP_CHECK_LIST criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID == criteria.CHECK_LIST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_NO)) { doWork = true; q = (from r in q where r.CHECK_LIST_NO == criteria.CHECK_LIST_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_ID)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_ID == criteria.REFERENCE_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_NO)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_NO == criteria.REFERENCE_REQUEST_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_TYPE)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_TYPE == criteria.REFERENCE_REQUEST_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TRF_REF_NO)) { doWork = true; q = (from r in q where r.TRF_REF_NO == criteria.TRF_REF_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_FOR_DESIGN)) { doWork = true; q = (from r in q where r.CHECK_LIST_FOR_DESIGN == criteria.CHECK_LIST_FOR_DESIGN select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_FOR_DIE_LINE)) { doWork = true; q = (from r in q where r.REQUEST_FOR_DIE_LINE == criteria.REQUEST_FOR_DIE_LINE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROJECT_NAME)) { doWork = true; q = (from r in q where r.PROJECT_NAME == criteria.PROJECT_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.REVIEWER)) { doWork = true; q = (from r in q where r.REVIEWER == criteria.REVIEWER select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_PRODUCT_ID)) { doWork = true; q = (from r in q where r.TYPE_OF_PRODUCT_ID == criteria.TYPE_OF_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATOR_ID)) { doWork = true; q = (from r in q where r.CREATOR_ID == criteria.CREATOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ID)) { doWork = true; q = (from r in q where r.COMPANY_ID == criteria.COMPANY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_ID)) { doWork = true; q = (from r in q where r.SOLD_TO_ID == criteria.SOLD_TO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_ID)) { doWork = true; q = (from r in q where r.SHIP_TO_ID == criteria.SHIP_TO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.RD_PERSON_ID)) { doWork = true; q = (from r in q where r.RD_PERSON_ID == criteria.RD_PERSON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_ID == criteria.PRIMARY_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_OTHER == criteria.PRIMARY_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_ID == criteria.PRIMARY_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER == criteria.PRIMARY_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_ID)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_ID == criteria.CONTAINER_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER == criteria.CONTAINER_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_ID)) { doWork = true; q = (from r in q where r.LID_TYPE_ID == criteria.LID_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER == criteria.LID_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_ID)) { doWork = true; q = (from r in q where r.PACKING_STYLE_ID == criteria.PACKING_STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER == criteria.PACKING_STYLE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_ID)) { doWork = true; q = (from r in q where r.PACK_SIZE_ID == criteria.PACK_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER == criteria.PACK_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_MATERIAL)) { doWork = true; q = (from r in q where r.PRIMARY_MATERIAL == criteria.PRIMARY_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_DELIVERY_DATE)) { doWork = true; q = (from r in q where r.REQUEST_DELIVERY_DATE == criteria.REQUEST_DELIVERY_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.OTHER_REQUESTS)) { doWork = true; q = (from r in q where r.OTHER_REQUESTS == criteria.OTHER_REQUESTS select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OTHER == criteria.BRAND_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OEM_ID)) { doWork = true; q = (from r in q where r.BRAND_OEM_ID == criteria.BRAND_OEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OEM_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OEM_OTHER == criteria.BRAND_OEM_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_PHYSICAL_MOCKUP)) { doWork = true; q = (from r in q where r.REQUEST_PHYSICAL_MOCKUP == criteria.REQUEST_PHYSICAL_MOCKUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.TWO_P_ID)) { doWork = true; q = (from r in q where r.TWO_P_ID == criteria.TWO_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.THREE_P_ID)) { doWork = true; q = (from r in q where r.THREE_P_ID == criteria.THREE_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REF_PRODUCT_CODE)) { doWork = true; q = (from r in q where r.REF_PRODUCT_CODE == criteria.REF_PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOMINATED_CONTAINER_VENDOR)) { doWork = true; q = (from r in q where r.NOMINATED_CONTAINER_VENDOR == criteria.NOMINATED_CONTAINER_VENDOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOMINATED_SPEC)) { doWork = true; q = (from r in q where r.NOMINATED_SPEC == criteria.NOMINATED_SPEC select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_OTHER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_OTHER_ID == criteria.CUSTOMER_OTHER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO == criteria.IN_TRANSIT_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA == criteria.VIA select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST> GetByItemContain(ART_WF_MOCKUP_CHECK_LIST Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_CHECK_LIST select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST> CriteriaByContains(IQueryable<ART_WF_MOCKUP_CHECK_LIST> q, ART_WF_MOCKUP_CHECK_LIST criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID == criteria.CHECK_LIST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_NO)) { doWork = true; q = (from r in q where r.CHECK_LIST_NO.Contains(criteria.CHECK_LIST_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_NO)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_NO.Contains(criteria.REFERENCE_REQUEST_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_TYPE)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_TYPE.Contains(criteria.REFERENCE_REQUEST_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TRF_REF_NO)) { doWork = true; q = (from r in q where r.TRF_REF_NO.Contains(criteria.TRF_REF_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_FOR_DESIGN)) { doWork = true; q = (from r in q where r.CHECK_LIST_FOR_DESIGN.Contains(criteria.CHECK_LIST_FOR_DESIGN) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_FOR_DIE_LINE)) { doWork = true; q = (from r in q where r.REQUEST_FOR_DIE_LINE.Contains(criteria.REQUEST_FOR_DIE_LINE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROJECT_NAME)) { doWork = true; q = (from r in q where r.PROJECT_NAME.Contains(criteria.PROJECT_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_OTHER.Contains(criteria.PRIMARY_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER.Contains(criteria.PRIMARY_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER.Contains(criteria.CONTAINER_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER.Contains(criteria.LID_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER.Contains(criteria.PACKING_STYLE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER.Contains(criteria.PACK_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_MATERIAL)) { doWork = true; q = (from r in q where r.PRIMARY_MATERIAL.Contains(criteria.PRIMARY_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OTHER_REQUESTS)) { doWork = true; q = (from r in q where r.OTHER_REQUESTS.Contains(criteria.OTHER_REQUESTS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OTHER.Contains(criteria.BRAND_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OEM_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OEM_OTHER.Contains(criteria.BRAND_OEM_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_PHYSICAL_MOCKUP)) { doWork = true; q = (from r in q where r.REQUEST_PHYSICAL_MOCKUP.Contains(criteria.REQUEST_PHYSICAL_MOCKUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REF_PRODUCT_CODE)) { doWork = true; q = (from r in q where r.REF_PRODUCT_CODE.Contains(criteria.REF_PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOMINATED_CONTAINER_VENDOR)) { doWork = true; q = (from r in q where r.NOMINATED_CONTAINER_VENDOR.Contains(criteria.NOMINATED_CONTAINER_VENDOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOMINATED_SPEC)) { doWork = true; q = (from r in q where r.NOMINATED_SPEC.Contains(criteria.NOMINATED_SPEC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO.Contains(criteria.IN_TRANSIT_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA.Contains(criteria.VIA) select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_CHECK_LIST select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_CHECK_LIST Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCHECK_LIST_ID(Item.CHECK_LIST_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCHECK_LIST_ID(Item.CHECK_LIST_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST>().Local.FirstOrDefault(f => f.CHECK_LIST_ID == Item.CHECK_LIST_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_CHECK_LIST Item, ARTWORKEntities dc) { if (GetChkByCHECK_LIST_ID(Item.CHECK_LIST_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST.Add(Item); dc.SaveChanges(); } else { var temp = GetByCHECK_LIST_ID(Item.CHECK_LIST_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST>().Local.FirstOrDefault(f => f.CHECK_LIST_ID == Item.CHECK_LIST_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_CHECK_LIST Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_CHECK_LIST Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST>().Local.FirstOrDefault(f => f.CHECK_LIST_ID == Item.CHECK_LIST_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_CHECK_LIST NewItem, ART_WF_MOCKUP_CHECK_LIST OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_CHECK_LIST"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCHECK_LIST_ID(int? CHECK_LIST_ID, ARTWORKEntities dc) { var Item = GetByCHECK_LIST_ID(CHECK_LIST_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_CHECK_LIST_COUNTRY_SERVICE
{
    public static ART_WF_MOCKUP_CHECK_LIST_COUNTRY GetByCHECK_LIST_COUNTRY_ID(int? CHECK_LIST_COUNTRY_ID, ARTWORKEntities dc) { if (CHECK_LIST_COUNTRY_ID == null || CHECK_LIST_COUNTRY_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_COUNTRY where p.CHECK_LIST_COUNTRY_ID == CHECK_LIST_COUNTRY_ID select p).FirstOrDefault(); }
    private static int? GetChkByCHECK_LIST_COUNTRY_ID(int? CHECK_LIST_COUNTRY_ID, ARTWORKEntities dc) { if (CHECK_LIST_COUNTRY_ID == null || CHECK_LIST_COUNTRY_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_CHECK_LIST_COUNTRY where p.CHECK_LIST_COUNTRY_ID == CHECK_LIST_COUNTRY_ID select p.CHECK_LIST_COUNTRY_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_CHECK_LIST_COUNTRY> GetByItem(ART_WF_MOCKUP_CHECK_LIST_COUNTRY Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_COUNTRY>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_CHECK_LIST_COUNTRY select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_COUNTRY> CriteriaBy(IQueryable<ART_WF_MOCKUP_CHECK_LIST_COUNTRY> q, ART_WF_MOCKUP_CHECK_LIST_COUNTRY criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_COUNTRY_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_COUNTRY_ID == criteria.CHECK_LIST_COUNTRY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID == criteria.CHECK_LIST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY_ID)) { doWork = true; q = (from r in q where r.COUNTRY_ID == criteria.COUNTRY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_COUNTRY_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_COUNTRY> GetByItemContain(ART_WF_MOCKUP_CHECK_LIST_COUNTRY Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_COUNTRY>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_CHECK_LIST_COUNTRY select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_COUNTRY> CriteriaByContains(IQueryable<ART_WF_MOCKUP_CHECK_LIST_COUNTRY> q, ART_WF_MOCKUP_CHECK_LIST_COUNTRY criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_COUNTRY_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_COUNTRY_ID == criteria.CHECK_LIST_COUNTRY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID.ToString().Contains(criteria.CHECK_LIST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY_ID)) { doWork = true; q = (from r in q where r.COUNTRY_ID.ToString().Contains(criteria.COUNTRY_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_COUNTRY_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_COUNTRY> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_COUNTRY select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_CHECK_LIST_COUNTRY Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCHECK_LIST_COUNTRY_ID(Item.CHECK_LIST_COUNTRY_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_COUNTRY.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCHECK_LIST_COUNTRY_ID(Item.CHECK_LIST_COUNTRY_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_COUNTRY>().Local.FirstOrDefault(f => f.CHECK_LIST_COUNTRY_ID == Item.CHECK_LIST_COUNTRY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_COUNTRY Item, ARTWORKEntities dc) { if (GetChkByCHECK_LIST_COUNTRY_ID(Item.CHECK_LIST_COUNTRY_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_COUNTRY.Add(Item); dc.SaveChanges(); } else { var temp = GetByCHECK_LIST_COUNTRY_ID(Item.CHECK_LIST_COUNTRY_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_COUNTRY>().Local.FirstOrDefault(f => f.CHECK_LIST_COUNTRY_ID == Item.CHECK_LIST_COUNTRY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_CHECK_LIST_COUNTRY Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_COUNTRY.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_COUNTRY Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_COUNTRY>().Local.FirstOrDefault(f => f.CHECK_LIST_COUNTRY_ID == Item.CHECK_LIST_COUNTRY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_CHECK_LIST_COUNTRY NewItem, ART_WF_MOCKUP_CHECK_LIST_COUNTRY OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_CHECK_LIST_COUNTRY"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCHECK_LIST_COUNTRY_ID(int? CHECK_LIST_COUNTRY_ID, ARTWORKEntities dc) { var Item = GetByCHECK_LIST_COUNTRY_ID(CHECK_LIST_COUNTRY_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER_SERVICE
{
    public static ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER GetByCHECK_LIST_OTHER_CUSTOMER_ID(int? CHECK_LIST_OTHER_CUSTOMER_ID, ARTWORKEntities dc) { if (CHECK_LIST_OTHER_CUSTOMER_ID == null || CHECK_LIST_OTHER_CUSTOMER_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER where p.CHECK_LIST_OTHER_CUSTOMER_ID == CHECK_LIST_OTHER_CUSTOMER_ID select p).FirstOrDefault(); }
    private static int? GetChkByCHECK_LIST_OTHER_CUSTOMER_ID(int? CHECK_LIST_OTHER_CUSTOMER_ID, ARTWORKEntities dc) { if (CHECK_LIST_OTHER_CUSTOMER_ID == null || CHECK_LIST_OTHER_CUSTOMER_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER where p.CHECK_LIST_OTHER_CUSTOMER_ID == CHECK_LIST_OTHER_CUSTOMER_ID select p.CHECK_LIST_OTHER_CUSTOMER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER> GetByItem(ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER> CriteriaBy(IQueryable<ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER> q, ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_OTHER_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_OTHER_CUSTOMER_ID == criteria.CHECK_LIST_OTHER_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID == criteria.CHECK_LIST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_USER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_USER_ID == criteria.CUSTOMER_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MAIL_TO)) { doWork = true; q = (from r in q where r.MAIL_TO == criteria.MAIL_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MAIL_CC)) { doWork = true; q = (from r in q where r.MAIL_CC == criteria.MAIL_CC select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_OTHER_CUSTOMER_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER> GetByItemContain(ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER> CriteriaByContains(IQueryable<ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER> q, ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_OTHER_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_OTHER_CUSTOMER_ID == criteria.CHECK_LIST_OTHER_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID.ToString().Contains(criteria.CHECK_LIST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_USER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_USER_ID.ToString().Contains(criteria.CUSTOMER_USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MAIL_TO)) { doWork = true; q = (from r in q where r.MAIL_TO.Contains(criteria.MAIL_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MAIL_CC)) { doWork = true; q = (from r in q where r.MAIL_CC.Contains(criteria.MAIL_CC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_OTHER_CUSTOMER_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCHECK_LIST_OTHER_CUSTOMER_ID(Item.CHECK_LIST_OTHER_CUSTOMER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCHECK_LIST_OTHER_CUSTOMER_ID(Item.CHECK_LIST_OTHER_CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER>().Local.FirstOrDefault(f => f.CHECK_LIST_OTHER_CUSTOMER_ID == Item.CHECK_LIST_OTHER_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER Item, ARTWORKEntities dc) { if (GetChkByCHECK_LIST_OTHER_CUSTOMER_ID(Item.CHECK_LIST_OTHER_CUSTOMER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER.Add(Item); dc.SaveChanges(); } else { var temp = GetByCHECK_LIST_OTHER_CUSTOMER_ID(Item.CHECK_LIST_OTHER_CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER>().Local.FirstOrDefault(f => f.CHECK_LIST_OTHER_CUSTOMER_ID == Item.CHECK_LIST_OTHER_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER>().Local.FirstOrDefault(f => f.CHECK_LIST_OTHER_CUSTOMER_ID == Item.CHECK_LIST_OTHER_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER NewItem, ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_CHECK_LIST_CUSTOMER_OTHER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCHECK_LIST_OTHER_CUSTOMER_ID(int? CHECK_LIST_OTHER_CUSTOMER_ID, ARTWORKEntities dc) { var Item = GetByCHECK_LIST_OTHER_CUSTOMER_ID(CHECK_LIST_OTHER_CUSTOMER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_CHECK_LIST_ITEM_SERVICE
{
    public static ART_WF_MOCKUP_CHECK_LIST_ITEM GetByMOCKUP_ID(int? MOCKUP_ID, ARTWORKEntities dc) { if (MOCKUP_ID == null || MOCKUP_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_ITEM where p.MOCKUP_ID == MOCKUP_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_ID(int? MOCKUP_ID, ARTWORKEntities dc) { if (MOCKUP_ID == null || MOCKUP_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_CHECK_LIST_ITEM where p.MOCKUP_ID == MOCKUP_ID select p.MOCKUP_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_CHECK_LIST_ITEM> GetByItem(ART_WF_MOCKUP_CHECK_LIST_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_ITEM>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_CHECK_LIST_ITEM select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_ITEM> CriteriaBy(IQueryable<ART_WF_MOCKUP_CHECK_LIST_ITEM> q, ART_WF_MOCKUP_CHECK_LIST_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID == criteria.CHECK_LIST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_NO)) { doWork = true; q = (from r in q where r.MOCKUP_NO == criteria.MOCKUP_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_STATUS)) { doWork = true; q = (from r in q where r.MOCKUP_STATUS == criteria.MOCKUP_STATUS select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_TYPE_ID)) { doWork = true; q = (from r in q where r.PACKING_TYPE_ID == criteria.PACKING_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINT_SYSTEM_ID)) { doWork = true; q = (from r in q where r.PRINT_SYSTEM_ID == criteria.PRINT_SYSTEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMBER_OF_COLOR_ID)) { doWork = true; q = (from r in q where r.NUMBER_OF_COLOR_ID == criteria.NUMBER_OF_COLOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOX_COLOR_ID)) { doWork = true; q = (from r in q where r.BOX_COLOR_ID == criteria.BOX_COLOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COATING_ID)) { doWork = true; q = (from r in q where r.COATING_ID == criteria.COATING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURPOSE_OF)) { doWork = true; q = (from r in q where r.PURPOSE_OF == criteria.PURPOSE_OF select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_ID)) { doWork = true; q = (from r in q where r.STYLE_ID == criteria.STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_TYPE_OTHER == criteria.PACKING_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINT_SYSTEM_OTHER)) { doWork = true; q = (from r in q where r.PRINT_SYSTEM_OTHER == criteria.PRINT_SYSTEM_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMBER_OF_COLOR_OTHER)) { doWork = true; q = (from r in q where r.NUMBER_OF_COLOR_OTHER == criteria.NUMBER_OF_COLOR_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOX_COLOR_OTHER)) { doWork = true; q = (from r in q where r.BOX_COLOR_OTHER == criteria.BOX_COLOR_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.COATING_OTHER)) { doWork = true; q = (from r in q where r.COATING_OTHER == criteria.COATING_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OTHER)) { doWork = true; q = (from r in q where r.STYLE_OTHER == criteria.STYLE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.NODE_ID)) { doWork = true; q = (from r in q where r.NODE_ID == criteria.NODE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_ITEM> GetByItemContain(ART_WF_MOCKUP_CHECK_LIST_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_ITEM>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_CHECK_LIST_ITEM select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_ITEM> CriteriaByContains(IQueryable<ART_WF_MOCKUP_CHECK_LIST_ITEM> q, ART_WF_MOCKUP_CHECK_LIST_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID.ToString().Contains(criteria.CHECK_LIST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_NO)) { doWork = true; q = (from r in q where r.MOCKUP_NO.Contains(criteria.MOCKUP_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURPOSE_OF)) { doWork = true; q = (from r in q where r.PURPOSE_OF.Contains(criteria.PURPOSE_OF) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_TYPE_OTHER.Contains(criteria.PACKING_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINT_SYSTEM_OTHER)) { doWork = true; q = (from r in q where r.PRINT_SYSTEM_OTHER.Contains(criteria.PRINT_SYSTEM_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMBER_OF_COLOR_OTHER)) { doWork = true; q = (from r in q where r.NUMBER_OF_COLOR_OTHER.Contains(criteria.NUMBER_OF_COLOR_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOX_COLOR_OTHER)) { doWork = true; q = (from r in q where r.BOX_COLOR_OTHER.Contains(criteria.BOX_COLOR_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COATING_OTHER)) { doWork = true; q = (from r in q where r.COATING_OTHER.Contains(criteria.COATING_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OTHER)) { doWork = true; q = (from r in q where r.STYLE_OTHER.Contains(criteria.STYLE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_ITEM> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_ITEM select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_CHECK_LIST_ITEM Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_ID(Item.MOCKUP_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_ITEM.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_ID(Item.MOCKUP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_ITEM>().Local.FirstOrDefault(f => f.MOCKUP_ID == Item.MOCKUP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_ITEM Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_ID(Item.MOCKUP_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_ITEM.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_ID(Item.MOCKUP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_ITEM>().Local.FirstOrDefault(f => f.MOCKUP_ID == Item.MOCKUP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_CHECK_LIST_ITEM Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_ITEM.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_ITEM Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_ITEM>().Local.FirstOrDefault(f => f.MOCKUP_ID == Item.MOCKUP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_CHECK_LIST_ITEM NewItem, ART_WF_MOCKUP_CHECK_LIST_ITEM OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_CHECK_LIST_ITEM"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_ID(int? MOCKUP_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_ID(MOCKUP_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_CHECK_LIST_PG_SERVICE
{
    public static ART_WF_MOCKUP_CHECK_LIST_PG GetByCHECK_LIST_PG_ID(int? CHECK_LIST_PG_ID, ARTWORKEntities dc) { if (CHECK_LIST_PG_ID == null || CHECK_LIST_PG_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_PG where p.CHECK_LIST_PG_ID == CHECK_LIST_PG_ID select p).FirstOrDefault(); }
    private static int? GetChkByCHECK_LIST_PG_ID(int? CHECK_LIST_PG_ID, ARTWORKEntities dc) { if (CHECK_LIST_PG_ID == null || CHECK_LIST_PG_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_CHECK_LIST_PG where p.CHECK_LIST_PG_ID == CHECK_LIST_PG_ID select p.CHECK_LIST_PG_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_CHECK_LIST_PG> GetByItem(ART_WF_MOCKUP_CHECK_LIST_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_PG>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_CHECK_LIST_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_PG> CriteriaBy(IQueryable<ART_WF_MOCKUP_CHECK_LIST_PG> q, ART_WF_MOCKUP_CHECK_LIST_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_PG_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_PG_ID == criteria.CHECK_LIST_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID == criteria.CHECK_LIST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_NO)) { doWork = true; q = (from r in q where r.MOCKUP_NO == criteria.MOCKUP_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_ID == criteria.PRIMARY_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_OTHER == criteria.PRIMARY_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_ID == criteria.PRIMARY_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER == criteria.PRIMARY_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_ID)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_ID == criteria.CONTAINER_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER == criteria.CONTAINER_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_ID)) { doWork = true; q = (from r in q where r.LID_TYPE_ID == criteria.LID_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER == criteria.LID_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_ID)) { doWork = true; q = (from r in q where r.PACKING_STYLE_ID == criteria.PACKING_STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER == criteria.PACKING_STYLE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_ID)) { doWork = true; q = (from r in q where r.PACK_SIZE_ID == criteria.PACK_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER == criteria.PACK_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_MATERIAL)) { doWork = true; q = (from r in q where r.PRIMARY_MATERIAL == criteria.PRIMARY_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_TYPE_ID)) { doWork = true; q = (from r in q where r.PACKING_TYPE_ID == criteria.PACKING_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINT_SYSTEM_ID)) { doWork = true; q = (from r in q where r.PRINT_SYSTEM_ID == criteria.PRINT_SYSTEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMBER_OF_COLOR_ID)) { doWork = true; q = (from r in q where r.NUMBER_OF_COLOR_ID == criteria.NUMBER_OF_COLOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOX_COLOR_ID)) { doWork = true; q = (from r in q where r.BOX_COLOR_ID == criteria.BOX_COLOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COATING_ID)) { doWork = true; q = (from r in q where r.COATING_ID == criteria.COATING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURPOSE_OF)) { doWork = true; q = (from r in q where r.PURPOSE_OF == criteria.PURPOSE_OF select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_ID)) { doWork = true; q = (from r in q where r.STYLE_ID == criteria.STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_TYPE_OTHER == criteria.PACKING_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINT_SYSTEM_OTHER)) { doWork = true; q = (from r in q where r.PRINT_SYSTEM_OTHER == criteria.PRINT_SYSTEM_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMBER_OF_COLOR_OTHER)) { doWork = true; q = (from r in q where r.NUMBER_OF_COLOR_OTHER == criteria.NUMBER_OF_COLOR_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOX_COLOR_OTHER)) { doWork = true; q = (from r in q where r.BOX_COLOR_OTHER == criteria.BOX_COLOR_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.COATING_OTHER)) { doWork = true; q = (from r in q where r.COATING_OTHER == criteria.COATING_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OTHER)) { doWork = true; q = (from r in q where r.STYLE_OTHER == criteria.STYLE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.TWO_P_ID)) { doWork = true; q = (from r in q where r.TWO_P_ID == criteria.TWO_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.THREE_P_ID)) { doWork = true; q = (from r in q where r.THREE_P_ID == criteria.THREE_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_PG> GetByItemContain(ART_WF_MOCKUP_CHECK_LIST_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_PG>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_CHECK_LIST_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_PG> CriteriaByContains(IQueryable<ART_WF_MOCKUP_CHECK_LIST_PG> q, ART_WF_MOCKUP_CHECK_LIST_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_PG_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_PG_ID == criteria.CHECK_LIST_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID.ToString().Contains(criteria.CHECK_LIST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_NO)) { doWork = true; q = (from r in q where r.MOCKUP_NO.Contains(criteria.MOCKUP_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_OTHER.Contains(criteria.PRIMARY_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER.Contains(criteria.PRIMARY_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER.Contains(criteria.CONTAINER_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER.Contains(criteria.LID_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER.Contains(criteria.PACKING_STYLE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER.Contains(criteria.PACK_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_MATERIAL)) { doWork = true; q = (from r in q where r.PRIMARY_MATERIAL.Contains(criteria.PRIMARY_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURPOSE_OF)) { doWork = true; q = (from r in q where r.PURPOSE_OF.Contains(criteria.PURPOSE_OF) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_TYPE_OTHER.Contains(criteria.PACKING_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINT_SYSTEM_OTHER)) { doWork = true; q = (from r in q where r.PRINT_SYSTEM_OTHER.Contains(criteria.PRINT_SYSTEM_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMBER_OF_COLOR_OTHER)) { doWork = true; q = (from r in q where r.NUMBER_OF_COLOR_OTHER.Contains(criteria.NUMBER_OF_COLOR_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOX_COLOR_OTHER)) { doWork = true; q = (from r in q where r.BOX_COLOR_OTHER.Contains(criteria.BOX_COLOR_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COATING_OTHER)) { doWork = true; q = (from r in q where r.COATING_OTHER.Contains(criteria.COATING_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OTHER)) { doWork = true; q = (from r in q where r.STYLE_OTHER.Contains(criteria.STYLE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_PG> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_PG select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_CHECK_LIST_PG Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCHECK_LIST_PG_ID(Item.CHECK_LIST_PG_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_PG.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCHECK_LIST_PG_ID(Item.CHECK_LIST_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_PG>().Local.FirstOrDefault(f => f.CHECK_LIST_PG_ID == Item.CHECK_LIST_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_PG Item, ARTWORKEntities dc) { if (GetChkByCHECK_LIST_PG_ID(Item.CHECK_LIST_PG_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_PG.Add(Item); dc.SaveChanges(); } else { var temp = GetByCHECK_LIST_PG_ID(Item.CHECK_LIST_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_PG>().Local.FirstOrDefault(f => f.CHECK_LIST_PG_ID == Item.CHECK_LIST_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_CHECK_LIST_PG Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_PG.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_PG Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_PG>().Local.FirstOrDefault(f => f.CHECK_LIST_PG_ID == Item.CHECK_LIST_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_CHECK_LIST_PG NewItem, ART_WF_MOCKUP_CHECK_LIST_PG OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_CHECK_LIST_PG"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCHECK_LIST_PG_ID(int? CHECK_LIST_PG_ID, ARTWORKEntities dc) { var Item = GetByCHECK_LIST_PG_ID(CHECK_LIST_PG_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_CHECK_LIST_PRODUCT_SERVICE
{
    public static ART_WF_MOCKUP_CHECK_LIST_PRODUCT GetByCHECK_LIST_PRODUCT_ID(int? CHECK_LIST_PRODUCT_ID, ARTWORKEntities dc) { if (CHECK_LIST_PRODUCT_ID == null || CHECK_LIST_PRODUCT_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCT where p.CHECK_LIST_PRODUCT_ID == CHECK_LIST_PRODUCT_ID select p).FirstOrDefault(); }
    private static int? GetChkByCHECK_LIST_PRODUCT_ID(int? CHECK_LIST_PRODUCT_ID, ARTWORKEntities dc) { if (CHECK_LIST_PRODUCT_ID == null || CHECK_LIST_PRODUCT_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCT where p.CHECK_LIST_PRODUCT_ID == CHECK_LIST_PRODUCT_ID select p.CHECK_LIST_PRODUCT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_CHECK_LIST_PRODUCT> GetByItem(ART_WF_MOCKUP_CHECK_LIST_PRODUCT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_PRODUCT>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCT select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_PRODUCT> CriteriaBy(IQueryable<ART_WF_MOCKUP_CHECK_LIST_PRODUCT> q, ART_WF_MOCKUP_CHECK_LIST_PRODUCT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_PRODUCT_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_PRODUCT_ID == criteria.CHECK_LIST_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID == criteria.CHECK_LIST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DRAINED_WEIGHT)) { doWork = true; q = (from r in q where r.DRAINED_WEIGHT == criteria.DRAINED_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE == criteria.PRIMARY_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE == criteria.CONTAINER_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE)) { doWork = true; q = (from r in q where r.LID_TYPE == criteria.LID_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE)) { doWork = true; q = (from r in q where r.PACKING_STYLE == criteria.PACKING_STYLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE == criteria.PACK_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_PRODUCT_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_PRODUCT> GetByItemContain(ART_WF_MOCKUP_CHECK_LIST_PRODUCT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_PRODUCT>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCT select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_PRODUCT> CriteriaByContains(IQueryable<ART_WF_MOCKUP_CHECK_LIST_PRODUCT> q, ART_WF_MOCKUP_CHECK_LIST_PRODUCT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_PRODUCT_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_PRODUCT_ID == criteria.CHECK_LIST_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID.ToString().Contains(criteria.CHECK_LIST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DRAINED_WEIGHT)) { doWork = true; q = (from r in q where r.DRAINED_WEIGHT.Contains(criteria.DRAINED_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE.Contains(criteria.PRIMARY_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE.Contains(criteria.CONTAINER_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE)) { doWork = true; q = (from r in q where r.LID_TYPE.Contains(criteria.LID_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE)) { doWork = true; q = (from r in q where r.PACKING_STYLE.Contains(criteria.PACKING_STYLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE.Contains(criteria.PACK_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_PRODUCT_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_PRODUCT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCT select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_CHECK_LIST_PRODUCT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCHECK_LIST_PRODUCT_ID(Item.CHECK_LIST_PRODUCT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCHECK_LIST_PRODUCT_ID(Item.CHECK_LIST_PRODUCT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_PRODUCT>().Local.FirstOrDefault(f => f.CHECK_LIST_PRODUCT_ID == Item.CHECK_LIST_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_PRODUCT Item, ARTWORKEntities dc) { if (GetChkByCHECK_LIST_PRODUCT_ID(Item.CHECK_LIST_PRODUCT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCT.Add(Item); dc.SaveChanges(); } else { var temp = GetByCHECK_LIST_PRODUCT_ID(Item.CHECK_LIST_PRODUCT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_PRODUCT>().Local.FirstOrDefault(f => f.CHECK_LIST_PRODUCT_ID == Item.CHECK_LIST_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_CHECK_LIST_PRODUCT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_PRODUCT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_PRODUCT>().Local.FirstOrDefault(f => f.CHECK_LIST_PRODUCT_ID == Item.CHECK_LIST_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_CHECK_LIST_PRODUCT NewItem, ART_WF_MOCKUP_CHECK_LIST_PRODUCT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_CHECK_LIST_PRODUCT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCHECK_LIST_PRODUCT_ID(int? CHECK_LIST_PRODUCT_ID, ARTWORKEntities dc) { var Item = GetByCHECK_LIST_PRODUCT_ID(CHECK_LIST_PRODUCT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT_SERVICE
{
    public static ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT GetByCHECK_LIST_PLANT_ID(int? CHECK_LIST_PLANT_ID, ARTWORKEntities dc) { if (CHECK_LIST_PLANT_ID == null || CHECK_LIST_PLANT_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT where p.CHECK_LIST_PLANT_ID == CHECK_LIST_PLANT_ID select p).FirstOrDefault(); }
    private static int? GetChkByCHECK_LIST_PLANT_ID(int? CHECK_LIST_PLANT_ID, ARTWORKEntities dc) { if (CHECK_LIST_PLANT_ID == null || CHECK_LIST_PLANT_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT where p.CHECK_LIST_PLANT_ID == CHECK_LIST_PLANT_ID select p.CHECK_LIST_PLANT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT> GetByItem(ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT> CriteriaBy(IQueryable<ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT> q, ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_PLANT_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_PLANT_ID == criteria.CHECK_LIST_PLANT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID == criteria.CHECK_LIST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT_ID)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT_ID == criteria.PRODUCTION_PLANT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_PLANT_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT> GetByItemContain(ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT> CriteriaByContains(IQueryable<ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT> q, ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_PLANT_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_PLANT_ID == criteria.CHECK_LIST_PLANT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID.ToString().Contains(criteria.CHECK_LIST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT_ID)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT_ID.ToString().Contains(criteria.PRODUCTION_PLANT_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_PLANT_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCHECK_LIST_PLANT_ID(Item.CHECK_LIST_PLANT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCHECK_LIST_PLANT_ID(Item.CHECK_LIST_PLANT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT>().Local.FirstOrDefault(f => f.CHECK_LIST_PLANT_ID == Item.CHECK_LIST_PLANT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT Item, ARTWORKEntities dc) { if (GetChkByCHECK_LIST_PLANT_ID(Item.CHECK_LIST_PLANT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT.Add(Item); dc.SaveChanges(); } else { var temp = GetByCHECK_LIST_PLANT_ID(Item.CHECK_LIST_PLANT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT>().Local.FirstOrDefault(f => f.CHECK_LIST_PLANT_ID == Item.CHECK_LIST_PLANT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT>().Local.FirstOrDefault(f => f.CHECK_LIST_PLANT_ID == Item.CHECK_LIST_PLANT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT NewItem, ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_CHECK_LIST_PRODUCTION_PLANT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCHECK_LIST_PLANT_ID(int? CHECK_LIST_PLANT_ID, ARTWORKEntities dc) { var Item = GetByCHECK_LIST_PLANT_ID(CHECK_LIST_PLANT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_CHECK_LIST_REFERENCE_SERVICE
{
    public static ART_WF_MOCKUP_CHECK_LIST_REFERENCE GetByCHECK_LIST_REFERENCE_ID(int? CHECK_LIST_REFERENCE_ID, ARTWORKEntities dc) { if (CHECK_LIST_REFERENCE_ID == null || CHECK_LIST_REFERENCE_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_REFERENCE where p.CHECK_LIST_REFERENCE_ID == CHECK_LIST_REFERENCE_ID select p).FirstOrDefault(); }
    private static int? GetChkByCHECK_LIST_REFERENCE_ID(int? CHECK_LIST_REFERENCE_ID, ARTWORKEntities dc) { if (CHECK_LIST_REFERENCE_ID == null || CHECK_LIST_REFERENCE_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_CHECK_LIST_REFERENCE where p.CHECK_LIST_REFERENCE_ID == CHECK_LIST_REFERENCE_ID select p.CHECK_LIST_REFERENCE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_CHECK_LIST_REFERENCE> GetByItem(ART_WF_MOCKUP_CHECK_LIST_REFERENCE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_REFERENCE>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_CHECK_LIST_REFERENCE select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_REFERENCE> CriteriaBy(IQueryable<ART_WF_MOCKUP_CHECK_LIST_REFERENCE> q, ART_WF_MOCKUP_CHECK_LIST_REFERENCE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_REFERENCE_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_REFERENCE_ID == criteria.CHECK_LIST_REFERENCE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID == criteria.CHECK_LIST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_NO)) { doWork = true; q = (from r in q where r.REFERENCE_NO == criteria.REFERENCE_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DRAINED_WEIGHT)) { doWork = true; q = (from r in q where r.DRAINED_WEIGHT == criteria.DRAINED_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_REFERENCE_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_REFERENCE> GetByItemContain(ART_WF_MOCKUP_CHECK_LIST_REFERENCE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_CHECK_LIST_REFERENCE>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_CHECK_LIST_REFERENCE select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_CHECK_LIST_REFERENCE> CriteriaByContains(IQueryable<ART_WF_MOCKUP_CHECK_LIST_REFERENCE> q, ART_WF_MOCKUP_CHECK_LIST_REFERENCE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_REFERENCE_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_REFERENCE_ID == criteria.CHECK_LIST_REFERENCE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID.ToString().Contains(criteria.CHECK_LIST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_NO)) { doWork = true; q = (from r in q where r.REFERENCE_NO.Contains(criteria.REFERENCE_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DRAINED_WEIGHT)) { doWork = true; q = (from r in q where r.DRAINED_WEIGHT.Contains(criteria.DRAINED_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.CHECK_LIST_REFERENCE_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_CHECK_LIST_REFERENCE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_CHECK_LIST_REFERENCE select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_CHECK_LIST_REFERENCE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCHECK_LIST_REFERENCE_ID(Item.CHECK_LIST_REFERENCE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_REFERENCE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCHECK_LIST_REFERENCE_ID(Item.CHECK_LIST_REFERENCE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_REFERENCE>().Local.FirstOrDefault(f => f.CHECK_LIST_REFERENCE_ID == Item.CHECK_LIST_REFERENCE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_REFERENCE Item, ARTWORKEntities dc) { if (GetChkByCHECK_LIST_REFERENCE_ID(Item.CHECK_LIST_REFERENCE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_REFERENCE.Add(Item); dc.SaveChanges(); } else { var temp = GetByCHECK_LIST_REFERENCE_ID(Item.CHECK_LIST_REFERENCE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_REFERENCE>().Local.FirstOrDefault(f => f.CHECK_LIST_REFERENCE_ID == Item.CHECK_LIST_REFERENCE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_CHECK_LIST_REFERENCE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_CHECK_LIST_REFERENCE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_CHECK_LIST_REFERENCE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_CHECK_LIST_REFERENCE>().Local.FirstOrDefault(f => f.CHECK_LIST_REFERENCE_ID == Item.CHECK_LIST_REFERENCE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_CHECK_LIST_REFERENCE NewItem, ART_WF_MOCKUP_CHECK_LIST_REFERENCE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_CHECK_LIST_REFERENCE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCHECK_LIST_REFERENCE_ID(int? CHECK_LIST_REFERENCE_ID, ARTWORKEntities dc) { var Item = GetByCHECK_LIST_REFERENCE_ID(CHECK_LIST_REFERENCE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS GetByMOCKUP_SUB_ID(int? MOCKUP_SUB_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_ID == null || MOCKUP_SUB_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS where p.MOCKUP_SUB_ID == MOCKUP_SUB_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_SUB_ID(int? MOCKUP_SUB_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_ID == null || MOCKUP_SUB_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS where p.MOCKUP_SUB_ID == MOCKUP_SUB_ID select p.MOCKUP_SUB_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS> GetByItem(ART_WF_MOCKUP_PROCESS Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS> q, ART_WF_MOCKUP_PROCESS criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PARENT_MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.PARENT_MOCKUP_SUB_ID == criteria.PARENT_MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_ID)) { doWork = true; q = (from r in q where r.CURRENT_STEP_ID == criteria.CURRENT_STEP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_ID)) { doWork = true; q = (from r in q where r.CURRENT_USER_ID == criteria.CURRENT_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_ROLE_ID)) { doWork = true; q = (from r in q where r.CURRENT_ROLE_ID == criteria.CURRENT_ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_VENDOR_ID)) { doWork = true; q = (from r in q where r.CURRENT_VENDOR_ID == criteria.CURRENT_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CURRENT_CUSTOMER_ID == criteria.CURRENT_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END == criteria.IS_END select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE == criteria.IS_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_TERMINATE)) { doWork = true; q = (from r in q where r.REMARK_TERMINATE == criteria.REMARK_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_KILLPROCESS)) { doWork = true; q = (from r in q where r.REMARK_KILLPROCESS == criteria.REMARK_KILLPROCESS select r); } if (!CheckValue.EqualsDefaultValue(criteria.TERMINATE_REASON_CODE)) { doWork = true; q = (from r in q where r.TERMINATE_REASON_CODE == criteria.TERMINATE_REASON_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE == criteria.IS_DELEGATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_STEP_DURATION_EXTEND)) { doWork = true; q = (from r in q where r.IS_STEP_DURATION_EXTEND == criteria.IS_STEP_DURATION_EXTEND select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_DURATION_EXTEND_REASON_ID)) { doWork = true; q = (from r in q where r.STEP_DURATION_EXTEND_REASON_ID == criteria.STEP_DURATION_EXTEND_REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_DURATION_EXTEND_REMARK)) { doWork = true; q = (from r in q where r.STEP_DURATION_EXTEND_REMARK == criteria.STEP_DURATION_EXTEND_REMARK select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS> GetByItemContain(ART_WF_MOCKUP_PROCESS Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS> q, ART_WF_MOCKUP_PROCESS criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END.Contains(criteria.IS_END) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE.Contains(criteria.IS_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_TERMINATE)) { doWork = true; q = (from r in q where r.REMARK_TERMINATE.Contains(criteria.REMARK_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_KILLPROCESS)) { doWork = true; q = (from r in q where r.REMARK_KILLPROCESS.Contains(criteria.REMARK_KILLPROCESS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE.Contains(criteria.IS_DELEGATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_STEP_DURATION_EXTEND)) { doWork = true; q = (from r in q where r.IS_STEP_DURATION_EXTEND.Contains(criteria.IS_STEP_DURATION_EXTEND) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_DURATION_EXTEND_REMARK)) { doWork = true; q = (from r in q where r.STEP_DURATION_EXTEND_REMARK.Contains(criteria.STEP_DURATION_EXTEND_REMARK) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_SUB_ID(Item.MOCKUP_SUB_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_SUB_ID(Item.MOCKUP_SUB_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS>().Local.FirstOrDefault(f => f.MOCKUP_SUB_ID == Item.MOCKUP_SUB_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_SUB_ID(Item.MOCKUP_SUB_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_SUB_ID(Item.MOCKUP_SUB_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS>().Local.FirstOrDefault(f => f.MOCKUP_SUB_ID == Item.MOCKUP_SUB_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS>().Local.FirstOrDefault(f => f.MOCKUP_SUB_ID == Item.MOCKUP_SUB_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS NewItem, ART_WF_MOCKUP_PROCESS OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_SUB_ID(int? MOCKUP_SUB_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_SUB_ID(MOCKUP_SUB_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD GetByMOCKUP_APPROVE_MATCHBOARD_ID(int? MOCKUP_APPROVE_MATCHBOARD_ID, ARTWORKEntities dc) { if (MOCKUP_APPROVE_MATCHBOARD_ID == null || MOCKUP_APPROVE_MATCHBOARD_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD where p.MOCKUP_APPROVE_MATCHBOARD_ID == MOCKUP_APPROVE_MATCHBOARD_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_APPROVE_MATCHBOARD_ID(int? MOCKUP_APPROVE_MATCHBOARD_ID, ARTWORKEntities dc) { if (MOCKUP_APPROVE_MATCHBOARD_ID == null || MOCKUP_APPROVE_MATCHBOARD_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD where p.MOCKUP_APPROVE_MATCHBOARD_ID == MOCKUP_APPROVE_MATCHBOARD_ID select p.MOCKUP_APPROVE_MATCHBOARD_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD> GetByItem(ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD> q, ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_APPROVE_MATCHBOARD_ID)) { doWork = true; q = (from r in q where r.MOCKUP_APPROVE_MATCHBOARD_ID == criteria.MOCKUP_APPROVE_MATCHBOARD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_APPROVE_MATCHBOARD_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD> GetByItemContain(ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD> q, ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_APPROVE_MATCHBOARD_ID)) { doWork = true; q = (from r in q where r.MOCKUP_APPROVE_MATCHBOARD_ID == criteria.MOCKUP_APPROVE_MATCHBOARD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_APPROVE_MATCHBOARD_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_APPROVE_MATCHBOARD_ID(Item.MOCKUP_APPROVE_MATCHBOARD_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_APPROVE_MATCHBOARD_ID(Item.MOCKUP_APPROVE_MATCHBOARD_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD>().Local.FirstOrDefault(f => f.MOCKUP_APPROVE_MATCHBOARD_ID == Item.MOCKUP_APPROVE_MATCHBOARD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_APPROVE_MATCHBOARD_ID(Item.MOCKUP_APPROVE_MATCHBOARD_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_APPROVE_MATCHBOARD_ID(Item.MOCKUP_APPROVE_MATCHBOARD_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD>().Local.FirstOrDefault(f => f.MOCKUP_APPROVE_MATCHBOARD_ID == Item.MOCKUP_APPROVE_MATCHBOARD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD>().Local.FirstOrDefault(f => f.MOCKUP_APPROVE_MATCHBOARD_ID == Item.MOCKUP_APPROVE_MATCHBOARD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD NewItem, ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_APPROVE_MATCHBOARD"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_APPROVE_MATCHBOARD_ID(int? MOCKUP_APPROVE_MATCHBOARD_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_APPROVE_MATCHBOARD_ID(MOCKUP_APPROVE_MATCHBOARD_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_CUSTOMER_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_CUSTOMER GetByMOCKUP_SUB_CUSTOMER_ID(int? MOCKUP_SUB_CUSTOMER_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_CUSTOMER_ID == null || MOCKUP_SUB_CUSTOMER_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_CUSTOMER where p.MOCKUP_SUB_CUSTOMER_ID == MOCKUP_SUB_CUSTOMER_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_SUB_CUSTOMER_ID(int? MOCKUP_SUB_CUSTOMER_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_CUSTOMER_ID == null || MOCKUP_SUB_CUSTOMER_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_CUSTOMER where p.MOCKUP_SUB_CUSTOMER_ID == MOCKUP_SUB_CUSTOMER_ID select p.MOCKUP_SUB_CUSTOMER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_CUSTOMER> GetByItem(ART_WF_MOCKUP_PROCESS_CUSTOMER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_CUSTOMER>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_CUSTOMER select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_CUSTOMER> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_CUSTOMER> q, ART_WF_MOCKUP_PROCESS_CUSTOMER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_CUSTOMER_ID == criteria.MOCKUP_SUB_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION)) { doWork = true; q = (from r in q where r.DECISION == criteria.DECISION select r); } if (!CheckValue.EqualsDefaultValue(criteria.REVISE_ID)) { doWork = true; q = (from r in q where r.REVISE_ID == criteria.REVISE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CANCEL_ID)) { doWork = true; q = (from r in q where r.CANCEL_ID == criteria.CANCEL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_CUSTOMER_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_CUSTOMER> GetByItemContain(ART_WF_MOCKUP_PROCESS_CUSTOMER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_CUSTOMER>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_CUSTOMER select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_CUSTOMER> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_CUSTOMER> q, ART_WF_MOCKUP_PROCESS_CUSTOMER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_CUSTOMER_ID == criteria.MOCKUP_SUB_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECISION)) { doWork = true; q = (from r in q where r.DECISION.Contains(criteria.DECISION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_CUSTOMER_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_CUSTOMER> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_CUSTOMER select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_CUSTOMER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_SUB_CUSTOMER_ID(Item.MOCKUP_SUB_CUSTOMER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_CUSTOMER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_SUB_CUSTOMER_ID(Item.MOCKUP_SUB_CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_CUSTOMER>().Local.FirstOrDefault(f => f.MOCKUP_SUB_CUSTOMER_ID == Item.MOCKUP_SUB_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_CUSTOMER Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_SUB_CUSTOMER_ID(Item.MOCKUP_SUB_CUSTOMER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_CUSTOMER.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_SUB_CUSTOMER_ID(Item.MOCKUP_SUB_CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_CUSTOMER>().Local.FirstOrDefault(f => f.MOCKUP_SUB_CUSTOMER_ID == Item.MOCKUP_SUB_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_CUSTOMER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_CUSTOMER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_CUSTOMER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_CUSTOMER>().Local.FirstOrDefault(f => f.MOCKUP_SUB_CUSTOMER_ID == Item.MOCKUP_SUB_CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_CUSTOMER NewItem, ART_WF_MOCKUP_PROCESS_CUSTOMER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_CUSTOMER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_SUB_CUSTOMER_ID(int? MOCKUP_SUB_CUSTOMER_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_SUB_CUSTOMER_ID(MOCKUP_SUB_CUSTOMER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG GetByMOCKUP_PROCESS_CUSTOMER_BY_PG_ID(int? MOCKUP_PROCESS_CUSTOMER_BY_PG_ID, ARTWORKEntities dc) { if (MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == null || MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG where p.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == MOCKUP_PROCESS_CUSTOMER_BY_PG_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_PROCESS_CUSTOMER_BY_PG_ID(int? MOCKUP_PROCESS_CUSTOMER_BY_PG_ID, ARTWORKEntities dc) { if (MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == null || MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG where p.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == MOCKUP_PROCESS_CUSTOMER_BY_PG_ID select p.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG> GetByItem(ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG> q, ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID)) { doWork = true; q = (from r in q where r.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == criteria.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_SEND_DIE_LINE)) { doWork = true; q = (from r in q where r.IS_SEND_DIE_LINE == criteria.IS_SEND_DIE_LINE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_SEND_PHYSICAL)) { doWork = true; q = (from r in q where r.IS_SEND_PHYSICAL == criteria.IS_SEND_PHYSICAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE)) { doWork = true; q = (from r in q where r.PACKING_STYLE == criteria.PACKING_STYLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURPOSE_OF)) { doWork = true; q = (from r in q where r.PURPOSE_OF == criteria.PURPOSE_OF select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG> GetByItemContain(ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG> q, ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID)) { doWork = true; q = (from r in q where r.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == criteria.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_SEND_DIE_LINE)) { doWork = true; q = (from r in q where r.IS_SEND_DIE_LINE.Contains(criteria.IS_SEND_DIE_LINE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_SEND_PHYSICAL)) { doWork = true; q = (from r in q where r.IS_SEND_PHYSICAL.Contains(criteria.IS_SEND_PHYSICAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE)) { doWork = true; q = (from r in q where r.PACKING_STYLE.Contains(criteria.PACKING_STYLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURPOSE_OF)) { doWork = true; q = (from r in q where r.PURPOSE_OF.Contains(criteria.PURPOSE_OF) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_PROCESS_CUSTOMER_BY_PG_ID(Item.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_PROCESS_CUSTOMER_BY_PG_ID(Item.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == Item.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_PROCESS_CUSTOMER_BY_PG_ID(Item.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_PROCESS_CUSTOMER_BY_PG_ID(Item.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == Item.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID == Item.MOCKUP_PROCESS_CUSTOMER_BY_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG NewItem, ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_CUSTOMER_BY_PG"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_PROCESS_CUSTOMER_BY_PG_ID(int? MOCKUP_PROCESS_CUSTOMER_BY_PG_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_PROCESS_CUSTOMER_BY_PG_ID(MOCKUP_PROCESS_CUSTOMER_BY_PG_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_PG_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_PG GetByMOCKUP_SUB_PG_ID(int? MOCKUP_SUB_PG_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_PG_ID == null || MOCKUP_SUB_PG_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_PG where p.MOCKUP_SUB_PG_ID == MOCKUP_SUB_PG_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_SUB_PG_ID(int? MOCKUP_SUB_PG_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_PG_ID == null || MOCKUP_SUB_PG_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_PG where p.MOCKUP_SUB_PG_ID == MOCKUP_SUB_PG_ID select p.MOCKUP_SUB_PG_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_PG> GetByItem(ART_WF_MOCKUP_PROCESS_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PG>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PG> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_PG> q, ART_WF_MOCKUP_PROCESS_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_PG_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_PG_ID == criteria.MOCKUP_SUB_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PA_USER_ID)) { doWork = true; q = (from r in q where r.PA_USER_ID == criteria.PA_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PG_USER_ID)) { doWork = true; q = (from r in q where r.PG_USER_ID == criteria.PG_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.GRADE_OF)) { doWork = true; q = (from r in q where r.GRADE_OF == criteria.GRADE_OF select r); } if (!CheckValue.EqualsDefaultValue(criteria.GRADE_OF_OTHER)) { doWork = true; q = (from r in q where r.GRADE_OF_OTHER == criteria.GRADE_OF_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.DI_CUT)) { doWork = true; q = (from r in q where r.DI_CUT == criteria.DI_CUT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DI_CUT_OTHER)) { doWork = true; q = (from r in q where r.DI_CUT_OTHER == criteria.DI_CUT_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHEET_SIZE)) { doWork = true; q = (from r in q where r.SHEET_SIZE == criteria.SHEET_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACCESSORIES)) { doWork = true; q = (from r in q where r.ACCESSORIES == criteria.ACCESSORIES select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR)) { doWork = true; q = (from r in q where r.VENDOR == criteria.VENDOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_OTHER)) { doWork = true; q = (from r in q where r.VENDOR_OTHER == criteria.VENDOR_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINT_SYSTEM)) { doWork = true; q = (from r in q where r.PRINT_SYSTEM == criteria.PRINT_SYSTEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.FLUTE)) { doWork = true; q = (from r in q where r.FLUTE == criteria.FLUTE select r); } if (!CheckValue.EqualsDefaultValue(criteria.FLUTE_OTHER)) { doWork = true; q = (from r in q where r.FLUTE_OTHER == criteria.FLUTE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIMENSION_OF)) { doWork = true; q = (from r in q where r.DIMENSION_OF == criteria.DIMENSION_OF select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLL_SHEET)) { doWork = true; q = (from r in q where r.ROLL_SHEET == criteria.ROLL_SHEET select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLL_SHEET_OTHER)) { doWork = true; q = (from r in q where r.ROLL_SHEET_OTHER == criteria.ROLL_SHEET_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_PG)) { doWork = true; q = (from r in q where r.REMARK_PG == criteria.REMARK_PG select r); } if (!CheckValue.EqualsDefaultValue(criteria.FINAL_INFO)) { doWork = true; q = (from r in q where r.FINAL_INFO == criteria.FINAL_INFO select r); } if (!CheckValue.EqualsDefaultValue(criteria.ID_MM)) { doWork = true; q = (from r in q where r.ID_MM == criteria.ID_MM select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN == criteria.CUSTOMER_DESIGN select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN_REMARK)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN_REMARK == criteria.CUSTOMER_DESIGN_REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC == criteria.CUSTOMER_SPEC select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC_REMARK)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC_REMARK == criteria.CUSTOMER_SPEC_REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE == criteria.CUSTOMER_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE_REMARK)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE_REMARK == criteria.CUSTOMER_SIZE_REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR == criteria.CUSTOMER_NOMINATES_VENDOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR_REMARK)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR_REMARK == criteria.CUSTOMER_NOMINATES_VENDOR_REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIE_LINE_MOCKUP_ID)) { doWork = true; q = (from r in q where r.DIE_LINE_MOCKUP_ID == criteria.DIE_LINE_MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.SUSTAIN_MATERIAL)) { doWork = true; q = (from r in q where r.SUSTAIN_MATERIAL == criteria.SUSTAIN_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLASTIC_TYPE)) { doWork = true; q = (from r in q where r.PLASTIC_TYPE == criteria.PLASTIC_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REUSEABLE)) { doWork = true; q = (from r in q where r.REUSEABLE == criteria.REUSEABLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECYCLABLE)) { doWork = true; q = (from r in q where r.RECYCLABLE == criteria.RECYCLABLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPOSATABLE)) { doWork = true; q = (from r in q where r.COMPOSATABLE == criteria.COMPOSATABLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECYCLE_CONTENT)) { doWork = true; q = (from r in q where r.RECYCLE_CONTENT == criteria.RECYCLE_CONTENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CERT)) { doWork = true; q = (from r in q where r.CERT == criteria.CERT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CERT_SOURCE)) { doWork = true; q = (from r in q where r.CERT_SOURCE == criteria.CERT_SOURCE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PKG_WEIGHT)) { doWork = true; q = (from r in q where r.PKG_WEIGHT == criteria.PKG_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SUSTAIN_OTHER)) { doWork = true; q = (from r in q where r.SUSTAIN_OTHER == criteria.SUSTAIN_OTHER select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PG> GetByItemContain(ART_WF_MOCKUP_PROCESS_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PG>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PG> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_PG> q, ART_WF_MOCKUP_PROCESS_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_PG_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_PG_ID == criteria.MOCKUP_SUB_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.GRADE_OF_OTHER)) { doWork = true; q = (from r in q where r.GRADE_OF_OTHER.Contains(criteria.GRADE_OF_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DI_CUT_OTHER)) { doWork = true; q = (from r in q where r.DI_CUT_OTHER.Contains(criteria.DI_CUT_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHEET_SIZE)) { doWork = true; q = (from r in q where r.SHEET_SIZE.Contains(criteria.SHEET_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACCESSORIES)) { doWork = true; q = (from r in q where r.ACCESSORIES.Contains(criteria.ACCESSORIES) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_OTHER)) { doWork = true; q = (from r in q where r.VENDOR_OTHER.Contains(criteria.VENDOR_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINT_SYSTEM)) { doWork = true; q = (from r in q where r.PRINT_SYSTEM.Contains(criteria.PRINT_SYSTEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FLUTE_OTHER)) { doWork = true; q = (from r in q where r.FLUTE_OTHER.Contains(criteria.FLUTE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIMENSION_OF)) { doWork = true; q = (from r in q where r.DIMENSION_OF.Contains(criteria.DIMENSION_OF) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLL_SHEET)) { doWork = true; q = (from r in q where r.ROLL_SHEET.Contains(criteria.ROLL_SHEET) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLL_SHEET_OTHER)) { doWork = true; q = (from r in q where r.ROLL_SHEET_OTHER.Contains(criteria.ROLL_SHEET_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_PG)) { doWork = true; q = (from r in q where r.REMARK_PG.Contains(criteria.REMARK_PG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FINAL_INFO)) { doWork = true; q = (from r in q where r.FINAL_INFO.Contains(criteria.FINAL_INFO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ID_MM)) { doWork = true; q = (from r in q where r.ID_MM.Contains(criteria.ID_MM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN.Contains(criteria.CUSTOMER_DESIGN) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN_REMARK)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN_REMARK.Contains(criteria.CUSTOMER_DESIGN_REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC.Contains(criteria.CUSTOMER_SPEC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC_REMARK)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC_REMARK.Contains(criteria.CUSTOMER_SPEC_REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE.Contains(criteria.CUSTOMER_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE_REMARK)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE_REMARK.Contains(criteria.CUSTOMER_SIZE_REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR.Contains(criteria.CUSTOMER_NOMINATES_VENDOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR_REMARK)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR_REMARK.Contains(criteria.CUSTOMER_NOMINATES_VENDOR_REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REUSEABLE)) { doWork = true; q = (from r in q where r.REUSEABLE.Contains(criteria.REUSEABLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECYCLABLE)) { doWork = true; q = (from r in q where r.RECYCLABLE.Contains(criteria.RECYCLABLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPOSATABLE)) { doWork = true; q = (from r in q where r.COMPOSATABLE.Contains(criteria.COMPOSATABLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CERT)) { doWork = true; q = (from r in q where r.CERT.Contains(criteria.CERT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SUSTAIN_OTHER)) { doWork = true; q = (from r in q where r.SUSTAIN_OTHER.Contains(criteria.SUSTAIN_OTHER) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PG> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_PG select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_PG Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_SUB_PG_ID(Item.MOCKUP_SUB_PG_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_SUB_PG_ID(Item.MOCKUP_SUB_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG>().Local.FirstOrDefault(f => f.MOCKUP_SUB_PG_ID == Item.MOCKUP_SUB_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_PG Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_SUB_PG_ID(Item.MOCKUP_SUB_PG_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_SUB_PG_ID(Item.MOCKUP_SUB_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG>().Local.FirstOrDefault(f => f.MOCKUP_SUB_PG_ID == Item.MOCKUP_SUB_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_PG Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_PG Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG>().Local.FirstOrDefault(f => f.MOCKUP_SUB_PG_ID == Item.MOCKUP_SUB_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_PG NewItem, ART_WF_MOCKUP_PROCESS_PG OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_PG"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_SUB_PG_ID(int? MOCKUP_SUB_PG_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_SUB_PG_ID(MOCKUP_SUB_PG_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE GetByPRICE_TEMPLATE_ID(int? PRICE_TEMPLATE_ID, ARTWORKEntities dc) { if (PRICE_TEMPLATE_ID == null || PRICE_TEMPLATE_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE where p.PRICE_TEMPLATE_ID == PRICE_TEMPLATE_ID select p).FirstOrDefault(); }
    private static int? GetChkByPRICE_TEMPLATE_ID(int? PRICE_TEMPLATE_ID, ARTWORKEntities dc) { if (PRICE_TEMPLATE_ID == null || PRICE_TEMPLATE_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE where p.PRICE_TEMPLATE_ID == PRICE_TEMPLATE_ID select p.PRICE_TEMPLATE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE> GetByItem(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE> q, ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PRICE_TEMPLATE_ID)) { doWork = true; q = (from r in q where r.PRICE_TEMPLATE_ID == criteria.PRICE_TEMPLATE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SCALE)) { doWork = true; q = (from r in q where r.SCALE == criteria.SCALE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRICE)) { doWork = true; q = (from r in q where r.PRICE == criteria.PRICE select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID == criteria.USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_ID)) { doWork = true; q = (from r in q where r.VENDOR_ID == criteria.VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SELECTED)) { doWork = true; q = (from r in q where r.SELECTED == criteria.SELECTED select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.PRICE_TEMPLATE_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE> GetByItemContain(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE> q, ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PRICE_TEMPLATE_ID)) { doWork = true; q = (from r in q where r.PRICE_TEMPLATE_ID == criteria.PRICE_TEMPLATE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SCALE)) { doWork = true; q = (from r in q where r.SCALE.ToString().Contains(criteria.SCALE.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SELECTED)) { doWork = true; q = (from r in q where r.SELECTED.Contains(criteria.SELECTED) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.PRICE_TEMPLATE_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPRICE_TEMPLATE_ID(Item.PRICE_TEMPLATE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPRICE_TEMPLATE_ID(Item.PRICE_TEMPLATE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE>().Local.FirstOrDefault(f => f.PRICE_TEMPLATE_ID == Item.PRICE_TEMPLATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE Item, ARTWORKEntities dc) { if (GetChkByPRICE_TEMPLATE_ID(Item.PRICE_TEMPLATE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE.Add(Item); dc.SaveChanges(); } else { var temp = GetByPRICE_TEMPLATE_ID(Item.PRICE_TEMPLATE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE>().Local.FirstOrDefault(f => f.PRICE_TEMPLATE_ID == Item.PRICE_TEMPLATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE>().Local.FirstOrDefault(f => f.PRICE_TEMPLATE_ID == Item.PRICE_TEMPLATE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE NewItem, ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPRICE_TEMPLATE_ID(int? PRICE_TEMPLATE_ID, ARTWORKEntities dc) { var Item = GetByPRICE_TEMPLATE_ID(PRICE_TEMPLATE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG GetByPRICE_TEMPLATE_VENDOR_ID(int? PRICE_TEMPLATE_VENDOR_ID, ARTWORKEntities dc) { if (PRICE_TEMPLATE_VENDOR_ID == null || PRICE_TEMPLATE_VENDOR_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG where p.PRICE_TEMPLATE_VENDOR_ID == PRICE_TEMPLATE_VENDOR_ID select p).FirstOrDefault(); }
    private static int? GetChkByPRICE_TEMPLATE_VENDOR_ID(int? PRICE_TEMPLATE_VENDOR_ID, ARTWORKEntities dc) { if (PRICE_TEMPLATE_VENDOR_ID == null || PRICE_TEMPLATE_VENDOR_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG where p.PRICE_TEMPLATE_VENDOR_ID == PRICE_TEMPLATE_VENDOR_ID select p.PRICE_TEMPLATE_VENDOR_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG> GetByItem(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG> q, ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PRICE_TEMPLATE_VENDOR_ID)) { doWork = true; q = (from r in q where r.PRICE_TEMPLATE_VENDOR_ID == criteria.PRICE_TEMPLATE_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_BY_PG)) { doWork = true; q = (from r in q where r.COMMENT_BY_PG == criteria.COMMENT_BY_PG select r); } if (!CheckValue.EqualsDefaultValue(criteria.SKUS)) { doWork = true; q = (from r in q where r.SKUS == criteria.SKUS select r); } if (!CheckValue.EqualsDefaultValue(criteria.VOLUME)) { doWork = true; q = (from r in q where r.VOLUME == criteria.VOLUME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIAL_COLOR)) { doWork = true; q = (from r in q where r.SPECIAL_COLOR == criteria.SPECIAL_COLOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIRECTION_OF_STICKER)) { doWork = true; q = (from r in q where r.DIRECTION_OF_STICKER == criteria.DIRECTION_OF_STICKER select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OF_PRINTING)) { doWork = true; q = (from r in q where r.STYLE_OF_PRINTING == criteria.STYLE_OF_PRINTING select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OF_PRINTING_OTHER)) { doWork = true; q = (from r in q where r.STYLE_OF_PRINTING_OTHER == criteria.STYLE_OF_PRINTING_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.PRICE_TEMPLATE_VENDOR_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG> GetByItemContain(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG> q, ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PRICE_TEMPLATE_VENDOR_ID)) { doWork = true; q = (from r in q where r.PRICE_TEMPLATE_VENDOR_ID == criteria.PRICE_TEMPLATE_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_BY_PG)) { doWork = true; q = (from r in q where r.COMMENT_BY_PG.Contains(criteria.COMMENT_BY_PG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SKUS)) { doWork = true; q = (from r in q where r.SKUS.Contains(criteria.SKUS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VOLUME)) { doWork = true; q = (from r in q where r.VOLUME.Contains(criteria.VOLUME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIAL_COLOR)) { doWork = true; q = (from r in q where r.SPECIAL_COLOR.Contains(criteria.SPECIAL_COLOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OF_PRINTING_OTHER)) { doWork = true; q = (from r in q where r.STYLE_OF_PRINTING_OTHER.Contains(criteria.STYLE_OF_PRINTING_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.PRICE_TEMPLATE_VENDOR_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPRICE_TEMPLATE_VENDOR_ID(Item.PRICE_TEMPLATE_VENDOR_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPRICE_TEMPLATE_VENDOR_ID(Item.PRICE_TEMPLATE_VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG>().Local.FirstOrDefault(f => f.PRICE_TEMPLATE_VENDOR_ID == Item.PRICE_TEMPLATE_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG Item, ARTWORKEntities dc) { if (GetChkByPRICE_TEMPLATE_VENDOR_ID(Item.PRICE_TEMPLATE_VENDOR_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG.Add(Item); dc.SaveChanges(); } else { var temp = GetByPRICE_TEMPLATE_VENDOR_ID(Item.PRICE_TEMPLATE_VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG>().Local.FirstOrDefault(f => f.PRICE_TEMPLATE_VENDOR_ID == Item.PRICE_TEMPLATE_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG>().Local.FirstOrDefault(f => f.PRICE_TEMPLATE_VENDOR_ID == Item.PRICE_TEMPLATE_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG NewItem, ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPRICE_TEMPLATE_VENDOR_ID(int? PRICE_TEMPLATE_VENDOR_ID, ARTWORKEntities dc) { var Item = GetByPRICE_TEMPLATE_VENDOR_ID(PRICE_TEMPLATE_VENDOR_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP GetByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID(int? ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID, ARTWORKEntities dc) { if (ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == null || ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP where p.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID(int? ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID, ARTWORKEntities dc) { if (ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == null || ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP where p.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID select p.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP> GetByItem(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP> q, ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID)) { doWork = true; q = (from r in q where r.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == criteria.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENY_BY_PG_SUP)) { doWork = true; q = (from r in q where r.COMMENY_BY_PG_SUP == criteria.COMMENY_BY_PG_SUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP> GetByItemContain(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP> q, ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID)) { doWork = true; q = (from r in q where r.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == criteria.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENY_BY_PG_SUP)) { doWork = true; q = (from r in q where r.COMMENY_BY_PG_SUP.Contains(criteria.COMMENY_BY_PG_SUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID(Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID(Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP>().Local.FirstOrDefault(f => f.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP Item, ARTWORKEntities dc) { if (GetChkByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID(Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID(Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP>().Local.FirstOrDefault(f => f.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP>().Local.FirstOrDefault(f => f.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID == Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP NewItem, ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID(int? ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID, ARTWORKEntities dc) { var Item = GetByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_PG_SUP_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR GetByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID(int? ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID, ARTWORKEntities dc) { if (ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == null || ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR where p.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID(int? ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID, ARTWORKEntities dc) { if (ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == null || ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR where p.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID select p.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR> GetByItem(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR> q, ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID)) { doWork = true; q = (from r in q where r.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == criteria.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_BY_VENDOR)) { doWork = true; q = (from r in q where r.COMMENT_BY_VENDOR == criteria.COMMENT_BY_VENDOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR> GetByItemContain(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR> q, ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID)) { doWork = true; q = (from r in q where r.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == criteria.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT_BY_VENDOR)) { doWork = true; q = (from r in q where r.COMMENT_BY_VENDOR.Contains(criteria.COMMENT_BY_VENDOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID(Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID(Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR>().Local.FirstOrDefault(f => f.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR Item, ARTWORKEntities dc) { if (GetChkByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID(Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID(Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR>().Local.FirstOrDefault(f => f.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR>().Local.FirstOrDefault(f => f.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID == Item.ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR NewItem, ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_BY_VENDOR"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID(int? ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID, ARTWORKEntities dc) { var Item = GetByART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID(ART_WF_MOCKUP_PROCESS_PG_PRICE_TEMPLATE_HEADER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR GetByPG_SELECT_VENDOR_ID(int? PG_SELECT_VENDOR_ID, ARTWORKEntities dc) { if (PG_SELECT_VENDOR_ID == null || PG_SELECT_VENDOR_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR where p.PG_SELECT_VENDOR_ID == PG_SELECT_VENDOR_ID select p).FirstOrDefault(); }
    private static int? GetChkByPG_SELECT_VENDOR_ID(int? PG_SELECT_VENDOR_ID, ARTWORKEntities dc) { if (PG_SELECT_VENDOR_ID == null || PG_SELECT_VENDOR_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR where p.PG_SELECT_VENDOR_ID == PG_SELECT_VENDOR_ID select p.PG_SELECT_VENDOR_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR> GetByItem(ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR> q, ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PG_SELECT_VENDOR_ID)) { doWork = true; q = (from r in q where r.PG_SELECT_VENDOR_ID == criteria.PG_SELECT_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_ID)) { doWork = true; q = (from r in q where r.VENDOR_ID == criteria.VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID == criteria.USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.PG_SELECT_VENDOR_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR> GetByItemContain(ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR> q, ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PG_SELECT_VENDOR_ID)) { doWork = true; q = (from r in q where r.PG_SELECT_VENDOR_ID == criteria.PG_SELECT_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_ID)) { doWork = true; q = (from r in q where r.VENDOR_ID.ToString().Contains(criteria.VENDOR_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.USER_ID)) { doWork = true; q = (from r in q where r.USER_ID.ToString().Contains(criteria.USER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.PG_SELECT_VENDOR_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPG_SELECT_VENDOR_ID(Item.PG_SELECT_VENDOR_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPG_SELECT_VENDOR_ID(Item.PG_SELECT_VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR>().Local.FirstOrDefault(f => f.PG_SELECT_VENDOR_ID == Item.PG_SELECT_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR Item, ARTWORKEntities dc) { if (GetChkByPG_SELECT_VENDOR_ID(Item.PG_SELECT_VENDOR_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR.Add(Item); dc.SaveChanges(); } else { var temp = GetByPG_SELECT_VENDOR_ID(Item.PG_SELECT_VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR>().Local.FirstOrDefault(f => f.PG_SELECT_VENDOR_ID == Item.PG_SELECT_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR>().Local.FirstOrDefault(f => f.PG_SELECT_VENDOR_ID == Item.PG_SELECT_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR NewItem, ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_PG_SELECT_VENDOR"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPG_SELECT_VENDOR_ID(int? PG_SELECT_VENDOR_ID, ARTWORKEntities dc) { var Item = GetByPG_SELECT_VENDOR_ID(PG_SELECT_VENDOR_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_PLANNING_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_PLANNING GetByMOCKUP_SUB_PLANNING_ID(int? MOCKUP_SUB_PLANNING_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_PLANNING_ID == null || MOCKUP_SUB_PLANNING_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_PLANNING where p.MOCKUP_SUB_PLANNING_ID == MOCKUP_SUB_PLANNING_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_SUB_PLANNING_ID(int? MOCKUP_SUB_PLANNING_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_PLANNING_ID == null || MOCKUP_SUB_PLANNING_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_PLANNING where p.MOCKUP_SUB_PLANNING_ID == MOCKUP_SUB_PLANNING_ID select p.MOCKUP_SUB_PLANNING_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_PLANNING> GetByItem(ART_WF_MOCKUP_PROCESS_PLANNING Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PLANNING>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_PLANNING select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PLANNING> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_PLANNING> q, ART_WF_MOCKUP_PROCESS_PLANNING criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_PLANNING_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_PLANNING_ID == criteria.MOCKUP_SUB_PLANNING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_PLANNING_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PLANNING> GetByItemContain(ART_WF_MOCKUP_PROCESS_PLANNING Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PLANNING>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_PLANNING select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PLANNING> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_PLANNING> q, ART_WF_MOCKUP_PROCESS_PLANNING criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_PLANNING_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_PLANNING_ID == criteria.MOCKUP_SUB_PLANNING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_PLANNING_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PLANNING> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_PLANNING select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_PLANNING Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_SUB_PLANNING_ID(Item.MOCKUP_SUB_PLANNING_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PLANNING.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_SUB_PLANNING_ID(Item.MOCKUP_SUB_PLANNING_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PLANNING>().Local.FirstOrDefault(f => f.MOCKUP_SUB_PLANNING_ID == Item.MOCKUP_SUB_PLANNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_PLANNING Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_SUB_PLANNING_ID(Item.MOCKUP_SUB_PLANNING_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PLANNING.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_SUB_PLANNING_ID(Item.MOCKUP_SUB_PLANNING_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PLANNING>().Local.FirstOrDefault(f => f.MOCKUP_SUB_PLANNING_ID == Item.MOCKUP_SUB_PLANNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_PLANNING Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PLANNING.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_PLANNING Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PLANNING>().Local.FirstOrDefault(f => f.MOCKUP_SUB_PLANNING_ID == Item.MOCKUP_SUB_PLANNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_PLANNING NewItem, ART_WF_MOCKUP_PROCESS_PLANNING OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_PLANNING"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_SUB_PLANNING_ID(int? MOCKUP_SUB_PLANNING_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_SUB_PLANNING_ID(MOCKUP_SUB_PLANNING_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG GetByMOCKUP_SUB_RD_BY_PLANNING_ID(int? MOCKUP_SUB_RD_BY_PLANNING_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_RD_BY_PLANNING_ID == null || MOCKUP_SUB_RD_BY_PLANNING_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG where p.MOCKUP_SUB_RD_BY_PLANNING_ID == MOCKUP_SUB_RD_BY_PLANNING_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_SUB_RD_BY_PLANNING_ID(int? MOCKUP_SUB_RD_BY_PLANNING_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_RD_BY_PLANNING_ID == null || MOCKUP_SUB_RD_BY_PLANNING_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG where p.MOCKUP_SUB_RD_BY_PLANNING_ID == MOCKUP_SUB_RD_BY_PLANNING_ID select p.MOCKUP_SUB_RD_BY_PLANNING_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG> GetByItem(ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG> q, ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_RD_BY_PLANNING_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_RD_BY_PLANNING_ID == criteria.MOCKUP_SUB_RD_BY_PLANNING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_RD_BY_PLANNING_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG> GetByItemContain(ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG> q, ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_RD_BY_PLANNING_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_RD_BY_PLANNING_ID == criteria.MOCKUP_SUB_RD_BY_PLANNING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_RD_BY_PLANNING_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_SUB_RD_BY_PLANNING_ID(Item.MOCKUP_SUB_RD_BY_PLANNING_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_SUB_RD_BY_PLANNING_ID(Item.MOCKUP_SUB_RD_BY_PLANNING_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_SUB_RD_BY_PLANNING_ID == Item.MOCKUP_SUB_RD_BY_PLANNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_SUB_RD_BY_PLANNING_ID(Item.MOCKUP_SUB_RD_BY_PLANNING_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_SUB_RD_BY_PLANNING_ID(Item.MOCKUP_SUB_RD_BY_PLANNING_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_SUB_RD_BY_PLANNING_ID == Item.MOCKUP_SUB_RD_BY_PLANNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_SUB_RD_BY_PLANNING_ID == Item.MOCKUP_SUB_RD_BY_PLANNING_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG NewItem, ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_PLANNING_BY_PG"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_SUB_RD_BY_PLANNING_ID(int? MOCKUP_SUB_RD_BY_PLANNING_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_SUB_RD_BY_PLANNING_ID(MOCKUP_SUB_RD_BY_PLANNING_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_RD_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_RD GetByMOCKUP_SUB_RD_ID(int? MOCKUP_SUB_RD_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_RD_ID == null || MOCKUP_SUB_RD_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_RD where p.MOCKUP_SUB_RD_ID == MOCKUP_SUB_RD_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_SUB_RD_ID(int? MOCKUP_SUB_RD_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_RD_ID == null || MOCKUP_SUB_RD_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_RD where p.MOCKUP_SUB_RD_ID == MOCKUP_SUB_RD_ID select p.MOCKUP_SUB_RD_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_RD> GetByItem(ART_WF_MOCKUP_PROCESS_RD Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_RD>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_RD select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_RD> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_RD> q, ART_WF_MOCKUP_PROCESS_RD criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_RD_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_RD_ID == criteria.MOCKUP_SUB_RD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_FINAL_SAMPLE)) { doWork = true; q = (from r in q where r.IS_FINAL_SAMPLE == criteria.IS_FINAL_SAMPLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_SAMPLE)) { doWork = true; q = (from r in q where r.TYPE_OF_SAMPLE == criteria.TYPE_OF_SAMPLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_RD_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_RD> GetByItemContain(ART_WF_MOCKUP_PROCESS_RD Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_RD>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_RD select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_RD> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_RD> q, ART_WF_MOCKUP_PROCESS_RD criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_RD_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_RD_ID == criteria.MOCKUP_SUB_RD_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_FINAL_SAMPLE)) { doWork = true; q = (from r in q where r.IS_FINAL_SAMPLE.Contains(criteria.IS_FINAL_SAMPLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_SAMPLE)) { doWork = true; q = (from r in q where r.TYPE_OF_SAMPLE.Contains(criteria.TYPE_OF_SAMPLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_RD_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_RD> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_RD select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_RD Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_SUB_RD_ID(Item.MOCKUP_SUB_RD_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_RD.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_SUB_RD_ID(Item.MOCKUP_SUB_RD_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_RD>().Local.FirstOrDefault(f => f.MOCKUP_SUB_RD_ID == Item.MOCKUP_SUB_RD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_RD Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_SUB_RD_ID(Item.MOCKUP_SUB_RD_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_RD.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_SUB_RD_ID(Item.MOCKUP_SUB_RD_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_RD>().Local.FirstOrDefault(f => f.MOCKUP_SUB_RD_ID == Item.MOCKUP_SUB_RD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_RD Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_RD.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_RD Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_RD>().Local.FirstOrDefault(f => f.MOCKUP_SUB_RD_ID == Item.MOCKUP_SUB_RD_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_RD NewItem, ART_WF_MOCKUP_PROCESS_RD OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_RD"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_SUB_RD_ID(int? MOCKUP_SUB_RD_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_SUB_RD_ID(MOCKUP_SUB_RD_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_RD_BY_PG_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_RD_BY_PG GetByMOCKUP_PROCESS_RD_BY_PG_ID(int? MOCKUP_PROCESS_RD_BY_PG_ID, ARTWORKEntities dc) { if (MOCKUP_PROCESS_RD_BY_PG_ID == null || MOCKUP_PROCESS_RD_BY_PG_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_RD_BY_PG where p.MOCKUP_PROCESS_RD_BY_PG_ID == MOCKUP_PROCESS_RD_BY_PG_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_PROCESS_RD_BY_PG_ID(int? MOCKUP_PROCESS_RD_BY_PG_ID, ARTWORKEntities dc) { if (MOCKUP_PROCESS_RD_BY_PG_ID == null || MOCKUP_PROCESS_RD_BY_PG_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_RD_BY_PG where p.MOCKUP_PROCESS_RD_BY_PG_ID == MOCKUP_PROCESS_RD_BY_PG_ID select p.MOCKUP_PROCESS_RD_BY_PG_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_RD_BY_PG> GetByItem(ART_WF_MOCKUP_PROCESS_RD_BY_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_RD_BY_PG>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_RD_BY_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_RD_BY_PG> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_RD_BY_PG> q, ART_WF_MOCKUP_PROCESS_RD_BY_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_PROCESS_RD_BY_PG_ID)) { doWork = true; q = (from r in q where r.MOCKUP_PROCESS_RD_BY_PG_ID == criteria.MOCKUP_PROCESS_RD_BY_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_PROCESS_RD_BY_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_RD_BY_PG> GetByItemContain(ART_WF_MOCKUP_PROCESS_RD_BY_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_RD_BY_PG>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_RD_BY_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_RD_BY_PG> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_RD_BY_PG> q, ART_WF_MOCKUP_PROCESS_RD_BY_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_PROCESS_RD_BY_PG_ID)) { doWork = true; q = (from r in q where r.MOCKUP_PROCESS_RD_BY_PG_ID == criteria.MOCKUP_PROCESS_RD_BY_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_PROCESS_RD_BY_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_RD_BY_PG> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_RD_BY_PG select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_RD_BY_PG Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_PROCESS_RD_BY_PG_ID(Item.MOCKUP_PROCESS_RD_BY_PG_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_RD_BY_PG.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_PROCESS_RD_BY_PG_ID(Item.MOCKUP_PROCESS_RD_BY_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_RD_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_PROCESS_RD_BY_PG_ID == Item.MOCKUP_PROCESS_RD_BY_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_RD_BY_PG Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_PROCESS_RD_BY_PG_ID(Item.MOCKUP_PROCESS_RD_BY_PG_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_RD_BY_PG.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_PROCESS_RD_BY_PG_ID(Item.MOCKUP_PROCESS_RD_BY_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_RD_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_PROCESS_RD_BY_PG_ID == Item.MOCKUP_PROCESS_RD_BY_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_RD_BY_PG Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_RD_BY_PG.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_RD_BY_PG Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_RD_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_PROCESS_RD_BY_PG_ID == Item.MOCKUP_PROCESS_RD_BY_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_RD_BY_PG NewItem, ART_WF_MOCKUP_PROCESS_RD_BY_PG OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_RD_BY_PG"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_PROCESS_RD_BY_PG_ID(int? MOCKUP_PROCESS_RD_BY_PG_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_PROCESS_RD_BY_PG_ID(MOCKUP_PROCESS_RD_BY_PG_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_VENDOR_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_VENDOR GetByMOCKUP_SUB_VENDOR_ID(int? MOCKUP_SUB_VENDOR_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_VENDOR_ID == null || MOCKUP_SUB_VENDOR_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_VENDOR where p.MOCKUP_SUB_VENDOR_ID == MOCKUP_SUB_VENDOR_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_SUB_VENDOR_ID(int? MOCKUP_SUB_VENDOR_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_VENDOR_ID == null || MOCKUP_SUB_VENDOR_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_VENDOR where p.MOCKUP_SUB_VENDOR_ID == MOCKUP_SUB_VENDOR_ID select p.MOCKUP_SUB_VENDOR_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_VENDOR> GetByItem(ART_WF_MOCKUP_PROCESS_VENDOR Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_VENDOR>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_VENDOR select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_VENDOR> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_VENDOR> q, ART_WF_MOCKUP_PROCESS_VENDOR criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_VENDOR_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_VENDOR_ID == criteria.MOCKUP_SUB_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_VENDOR_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_VENDOR> GetByItemContain(ART_WF_MOCKUP_PROCESS_VENDOR Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_VENDOR>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_VENDOR select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_VENDOR> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_VENDOR> q, ART_WF_MOCKUP_PROCESS_VENDOR criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_VENDOR_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_VENDOR_ID == criteria.MOCKUP_SUB_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_VENDOR_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_VENDOR> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_VENDOR select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_VENDOR Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_SUB_VENDOR_ID(Item.MOCKUP_SUB_VENDOR_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_VENDOR.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_SUB_VENDOR_ID(Item.MOCKUP_SUB_VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_VENDOR>().Local.FirstOrDefault(f => f.MOCKUP_SUB_VENDOR_ID == Item.MOCKUP_SUB_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_VENDOR Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_SUB_VENDOR_ID(Item.MOCKUP_SUB_VENDOR_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_VENDOR.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_SUB_VENDOR_ID(Item.MOCKUP_SUB_VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_VENDOR>().Local.FirstOrDefault(f => f.MOCKUP_SUB_VENDOR_ID == Item.MOCKUP_SUB_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_VENDOR Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_VENDOR.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_VENDOR Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_VENDOR>().Local.FirstOrDefault(f => f.MOCKUP_SUB_VENDOR_ID == Item.MOCKUP_SUB_VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_VENDOR NewItem, ART_WF_MOCKUP_PROCESS_VENDOR OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_VENDOR"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_SUB_VENDOR_ID(int? MOCKUP_SUB_VENDOR_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_SUB_VENDOR_ID(MOCKUP_SUB_VENDOR_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG GetByMOCKUP_PROCESS_VENDOR_BY_PG_ID(int? MOCKUP_PROCESS_VENDOR_BY_PG_ID, ARTWORKEntities dc) { if (MOCKUP_PROCESS_VENDOR_BY_PG_ID == null || MOCKUP_PROCESS_VENDOR_BY_PG_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG where p.MOCKUP_PROCESS_VENDOR_BY_PG_ID == MOCKUP_PROCESS_VENDOR_BY_PG_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_PROCESS_VENDOR_BY_PG_ID(int? MOCKUP_PROCESS_VENDOR_BY_PG_ID, ARTWORKEntities dc) { if (MOCKUP_PROCESS_VENDOR_BY_PG_ID == null || MOCKUP_PROCESS_VENDOR_BY_PG_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG where p.MOCKUP_PROCESS_VENDOR_BY_PG_ID == MOCKUP_PROCESS_VENDOR_BY_PG_ID select p.MOCKUP_PROCESS_VENDOR_BY_PG_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG> GetByItem(ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG> q, ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_PROCESS_VENDOR_BY_PG_ID)) { doWork = true; q = (from r in q where r.MOCKUP_PROCESS_VENDOR_BY_PG_ID == criteria.MOCKUP_PROCESS_VENDOR_BY_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEND_TO_VENDOR_TYPE)) { doWork = true; q = (from r in q where r.SEND_TO_VENDOR_TYPE == criteria.SEND_TO_VENDOR_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SAMPLE_AMOUNT_FOR_REQ_SAMPLE_DIELINE)) { doWork = true; q = (from r in q where r.SAMPLE_AMOUNT_FOR_REQ_SAMPLE_DIELINE == criteria.SAMPLE_AMOUNT_FOR_REQ_SAMPLE_DIELINE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SAMPLE_AMOUNT_FOR_SEND_PRIMARY)) { doWork = true; q = (from r in q where r.SAMPLE_AMOUNT_FOR_SEND_PRIMARY == criteria.SAMPLE_AMOUNT_FOR_SEND_PRIMARY select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_PROCESS_VENDOR_BY_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG> GetByItemContain(ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG> q, ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_PROCESS_VENDOR_BY_PG_ID)) { doWork = true; q = (from r in q where r.MOCKUP_PROCESS_VENDOR_BY_PG_ID == criteria.MOCKUP_PROCESS_VENDOR_BY_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEND_TO_VENDOR_TYPE)) { doWork = true; q = (from r in q where r.SEND_TO_VENDOR_TYPE.Contains(criteria.SEND_TO_VENDOR_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SAMPLE_AMOUNT_FOR_REQ_SAMPLE_DIELINE)) { doWork = true; q = (from r in q where r.SAMPLE_AMOUNT_FOR_REQ_SAMPLE_DIELINE.Contains(criteria.SAMPLE_AMOUNT_FOR_REQ_SAMPLE_DIELINE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SAMPLE_AMOUNT_FOR_SEND_PRIMARY)) { doWork = true; q = (from r in q where r.SAMPLE_AMOUNT_FOR_SEND_PRIMARY.Contains(criteria.SAMPLE_AMOUNT_FOR_SEND_PRIMARY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_PROCESS_VENDOR_BY_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_PROCESS_VENDOR_BY_PG_ID(Item.MOCKUP_PROCESS_VENDOR_BY_PG_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_PROCESS_VENDOR_BY_PG_ID(Item.MOCKUP_PROCESS_VENDOR_BY_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_PROCESS_VENDOR_BY_PG_ID == Item.MOCKUP_PROCESS_VENDOR_BY_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_PROCESS_VENDOR_BY_PG_ID(Item.MOCKUP_PROCESS_VENDOR_BY_PG_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_PROCESS_VENDOR_BY_PG_ID(Item.MOCKUP_PROCESS_VENDOR_BY_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_PROCESS_VENDOR_BY_PG_ID == Item.MOCKUP_PROCESS_VENDOR_BY_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_PROCESS_VENDOR_BY_PG_ID == Item.MOCKUP_PROCESS_VENDOR_BY_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG NewItem, ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_VENDOR_BY_PG"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_PROCESS_VENDOR_BY_PG_ID(int? MOCKUP_PROCESS_VENDOR_BY_PG_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_PROCESS_VENDOR_BY_PG_ID(MOCKUP_PROCESS_VENDOR_BY_PG_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_WAREHOUSE_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_WAREHOUSE GetByMOCKUP_SUB_WAREHOUSE_ID(int? MOCKUP_SUB_WAREHOUSE_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_WAREHOUSE_ID == null || MOCKUP_SUB_WAREHOUSE_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE where p.MOCKUP_SUB_WAREHOUSE_ID == MOCKUP_SUB_WAREHOUSE_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_SUB_WAREHOUSE_ID(int? MOCKUP_SUB_WAREHOUSE_ID, ARTWORKEntities dc) { if (MOCKUP_SUB_WAREHOUSE_ID == null || MOCKUP_SUB_WAREHOUSE_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE where p.MOCKUP_SUB_WAREHOUSE_ID == MOCKUP_SUB_WAREHOUSE_ID select p.MOCKUP_SUB_WAREHOUSE_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_WAREHOUSE> GetByItem(ART_WF_MOCKUP_PROCESS_WAREHOUSE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_WAREHOUSE>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_WAREHOUSE> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_WAREHOUSE> q, ART_WF_MOCKUP_PROCESS_WAREHOUSE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_WAREHOUSE_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_WAREHOUSE_ID == criteria.MOCKUP_SUB_WAREHOUSE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE == criteria.ACTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECEIVE_PHYSICAL)) { doWork = true; q = (from r in q where r.RECEIVE_PHYSICAL == criteria.RECEIVE_PHYSICAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEST_PACK_RESULT)) { doWork = true; q = (from r in q where r.TEST_PACK_RESULT == criteria.TEST_PACK_RESULT select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEST_PACK_FAIL_ID)) { doWork = true; q = (from r in q where r.TEST_PACK_FAIL_ID == criteria.TEST_PACK_FAIL_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NEED_COMMISSIONING)) { doWork = true; q = (from r in q where r.NEED_COMMISSIONING == criteria.NEED_COMMISSIONING select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DIFFICULT)) { doWork = true; q = (from r in q where r.IS_DIFFICULT == criteria.IS_DIFFICULT select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT == criteria.COMMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_WAREHOUSE_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_WAREHOUSE> GetByItemContain(ART_WF_MOCKUP_PROCESS_WAREHOUSE Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_WAREHOUSE>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_WAREHOUSE> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_WAREHOUSE> q, ART_WF_MOCKUP_PROCESS_WAREHOUSE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_WAREHOUSE_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_WAREHOUSE_ID == criteria.MOCKUP_SUB_WAREHOUSE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ACTION_CODE)) { doWork = true; q = (from r in q where r.ACTION_CODE.Contains(criteria.ACTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECEIVE_PHYSICAL)) { doWork = true; q = (from r in q where r.RECEIVE_PHYSICAL.Contains(criteria.RECEIVE_PHYSICAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEST_PACK_RESULT)) { doWork = true; q = (from r in q where r.TEST_PACK_RESULT.Contains(criteria.TEST_PACK_RESULT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NEED_COMMISSIONING)) { doWork = true; q = (from r in q where r.NEED_COMMISSIONING.Contains(criteria.NEED_COMMISSIONING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DIFFICULT)) { doWork = true; q = (from r in q where r.IS_DIFFICULT.Contains(criteria.IS_DIFFICULT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMMENT)) { doWork = true; q = (from r in q where r.COMMENT.Contains(criteria.COMMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_SUB_WAREHOUSE_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_WAREHOUSE> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_WAREHOUSE Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_SUB_WAREHOUSE_ID(Item.MOCKUP_SUB_WAREHOUSE_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_SUB_WAREHOUSE_ID(Item.MOCKUP_SUB_WAREHOUSE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_WAREHOUSE>().Local.FirstOrDefault(f => f.MOCKUP_SUB_WAREHOUSE_ID == Item.MOCKUP_SUB_WAREHOUSE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_WAREHOUSE Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_SUB_WAREHOUSE_ID(Item.MOCKUP_SUB_WAREHOUSE_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_SUB_WAREHOUSE_ID(Item.MOCKUP_SUB_WAREHOUSE_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_WAREHOUSE>().Local.FirstOrDefault(f => f.MOCKUP_SUB_WAREHOUSE_ID == Item.MOCKUP_SUB_WAREHOUSE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_WAREHOUSE Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_WAREHOUSE Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_WAREHOUSE>().Local.FirstOrDefault(f => f.MOCKUP_SUB_WAREHOUSE_ID == Item.MOCKUP_SUB_WAREHOUSE_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_WAREHOUSE NewItem, ART_WF_MOCKUP_PROCESS_WAREHOUSE OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_WAREHOUSE"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_SUB_WAREHOUSE_ID(int? MOCKUP_SUB_WAREHOUSE_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_SUB_WAREHOUSE_ID(MOCKUP_SUB_WAREHOUSE_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG_SERVICE
{
    public static ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG GetByMOCKUP_PROCESS_WAREHOUSE_BY_PG_ID(int? MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID, ARTWORKEntities dc) { if (MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == null || MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == 0) return null; else return (from p in dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG where p.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID select p).FirstOrDefault(); }
    private static int? GetChkByMOCKUP_PROCESS_WAREHOUSE_BY_PG_ID(int? MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID, ARTWORKEntities dc) { if (MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == null || MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == 0) return null; else { var temp = (from p in dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG where p.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID select p.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG> GetByItem(ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG>(); else return CriteriaBy((from p in dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG> CriteriaBy(IQueryable<ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG> q, ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID)) { doWork = true; q = (from r in q where r.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == criteria.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEST_PACK_SIZING)) { doWork = true; q = (from r in q where r.TEST_PACK_SIZING == criteria.TEST_PACK_SIZING select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEST_PACK_HARD_EASY)) { doWork = true; q = (from r in q where r.TEST_PACK_HARD_EASY == criteria.TEST_PACK_HARD_EASY select r); } if (!CheckValue.EqualsDefaultValue(criteria.SUPPLIER_PRIMARY_CONTAINER)) { doWork = true; q = (from r in q where r.SUPPLIER_PRIMARY_CONTAINER == criteria.SUPPLIER_PRIMARY_CONTAINER select r); } if (!CheckValue.EqualsDefaultValue(criteria.SUPPLIER_PRIMARY_LID)) { doWork = true; q = (from r in q where r.SUPPLIER_PRIMARY_LID == criteria.SUPPLIER_PRIMARY_LID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_FACTORY)) { doWork = true; q = (from r in q where r.SHIP_TO_FACTORY == criteria.SHIP_TO_FACTORY select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG> GetByItemContain(ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG>(); else return CriteriaByContains((from p in dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG select p), Item).ToList(); }
    private static IQueryable<ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG> CriteriaByContains(IQueryable<ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG> q, ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID)) { doWork = true; q = (from r in q where r.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == criteria.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEST_PACK_SIZING)) { doWork = true; q = (from r in q where r.TEST_PACK_SIZING.Contains(criteria.TEST_PACK_SIZING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEST_PACK_HARD_EASY)) { doWork = true; q = (from r in q where r.TEST_PACK_HARD_EASY.Contains(criteria.TEST_PACK_HARD_EASY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SUPPLIER_PRIMARY_CONTAINER)) { doWork = true; q = (from r in q where r.SUPPLIER_PRIMARY_CONTAINER.Contains(criteria.SUPPLIER_PRIMARY_CONTAINER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SUPPLIER_PRIMARY_LID)) { doWork = true; q = (from r in q where r.SUPPLIER_PRIMARY_LID.Contains(criteria.SUPPLIER_PRIMARY_LID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_FACTORY)) { doWork = true; q = (from r in q where r.SHIP_TO_FACTORY.Contains(criteria.SHIP_TO_FACTORY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == 0 select r); } return q; }
    public static List<ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByMOCKUP_PROCESS_WAREHOUSE_BY_PG_ID(Item.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByMOCKUP_PROCESS_WAREHOUSE_BY_PG_ID(Item.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == Item.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG Item, ARTWORKEntities dc) { if (GetChkByMOCKUP_PROCESS_WAREHOUSE_BY_PG_ID(Item.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG.Add(Item); dc.SaveChanges(); } else { var temp = GetByMOCKUP_PROCESS_WAREHOUSE_BY_PG_ID(Item.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == Item.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG>().Local.FirstOrDefault(f => f.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID == Item.MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG NewItem, ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_MOCKUP_PROCESS_WAREHOUSE_BY_PG"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByMOCKUP_PROCESS_WAREHOUSE_BY_PG_ID(int? MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID, ARTWORKEntities dc) { var Item = GetByMOCKUP_PROCESS_WAREHOUSE_BY_PG_ID(MOCKUP_PROCESS_WAREHOUSE_BY_PG_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class ART_WF_REMARK_REASON_OTHER_SERVICE
{
    public static ART_WF_REMARK_REASON_OTHER GetByART_WF_REMARK_REASON_OTHER_ID(int? ART_WF_REMARK_REASON_OTHER_ID, ARTWORKEntities dc) { if (ART_WF_REMARK_REASON_OTHER_ID == null || ART_WF_REMARK_REASON_OTHER_ID == 0) return null; else return (from p in dc.ART_WF_REMARK_REASON_OTHER where p.ART_WF_REMARK_REASON_OTHER_ID == ART_WF_REMARK_REASON_OTHER_ID select p).FirstOrDefault(); }
    private static int? GetChkByART_WF_REMARK_REASON_OTHER_ID(int? ART_WF_REMARK_REASON_OTHER_ID, ARTWORKEntities dc) { if (ART_WF_REMARK_REASON_OTHER_ID == null || ART_WF_REMARK_REASON_OTHER_ID == 0) return null; else { var temp = (from p in dc.ART_WF_REMARK_REASON_OTHER where p.ART_WF_REMARK_REASON_OTHER_ID == ART_WF_REMARK_REASON_OTHER_ID select p.ART_WF_REMARK_REASON_OTHER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<ART_WF_REMARK_REASON_OTHER> GetByItem(ART_WF_REMARK_REASON_OTHER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_REMARK_REASON_OTHER>(); else return CriteriaBy((from p in dc.ART_WF_REMARK_REASON_OTHER select p), Item).ToList(); }
    private static IQueryable<ART_WF_REMARK_REASON_OTHER> CriteriaBy(IQueryable<ART_WF_REMARK_REASON_OTHER> q, ART_WF_REMARK_REASON_OTHER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_REMARK_REASON_OTHER_ID)) { doWork = true; q = (from r in q where r.ART_WF_REMARK_REASON_OTHER_ID == criteria.ART_WF_REMARK_REASON_OTHER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE == criteria.WF_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_SUB_ID)) { doWork = true; q = (from r in q where r.WF_SUB_ID == criteria.WF_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_STEP)) { doWork = true; q = (from r in q where r.WF_STEP == criteria.WF_STEP select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_REASON)) { doWork = true; q = (from r in q where r.REMARK_REASON == criteria.REMARK_REASON select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ART_WF_REMARK_REASON_OTHER_ID == 0 select r); } return q; }
    public static List<ART_WF_REMARK_REASON_OTHER> GetByItemContain(ART_WF_REMARK_REASON_OTHER Item, ARTWORKEntities dc) { if (Item == null) return new List<ART_WF_REMARK_REASON_OTHER>(); else return CriteriaByContains((from p in dc.ART_WF_REMARK_REASON_OTHER select p), Item).ToList(); }
    private static IQueryable<ART_WF_REMARK_REASON_OTHER> CriteriaByContains(IQueryable<ART_WF_REMARK_REASON_OTHER> q, ART_WF_REMARK_REASON_OTHER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ART_WF_REMARK_REASON_OTHER_ID)) { doWork = true; q = (from r in q where r.ART_WF_REMARK_REASON_OTHER_ID == criteria.ART_WF_REMARK_REASON_OTHER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE.Contains(criteria.WF_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_REASON)) { doWork = true; q = (from r in q where r.REMARK_REASON.Contains(criteria.REMARK_REASON) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ART_WF_REMARK_REASON_OTHER_ID == 0 select r); } return q; }
    public static List<ART_WF_REMARK_REASON_OTHER> GetAll(ARTWORKEntities dc) { return (from p in dc.ART_WF_REMARK_REASON_OTHER select p).ToList(); }
    public static void SaveOrUpdate(ART_WF_REMARK_REASON_OTHER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByART_WF_REMARK_REASON_OTHER_ID(Item.ART_WF_REMARK_REASON_OTHER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_REMARK_REASON_OTHER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByART_WF_REMARK_REASON_OTHER_ID(Item.ART_WF_REMARK_REASON_OTHER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_REMARK_REASON_OTHER>().Local.FirstOrDefault(f => f.ART_WF_REMARK_REASON_OTHER_ID == Item.ART_WF_REMARK_REASON_OTHER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(ART_WF_REMARK_REASON_OTHER Item, ARTWORKEntities dc) { if (GetChkByART_WF_REMARK_REASON_OTHER_ID(Item.ART_WF_REMARK_REASON_OTHER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_REMARK_REASON_OTHER.Add(Item); dc.SaveChanges(); } else { var temp = GetByART_WF_REMARK_REASON_OTHER_ID(Item.ART_WF_REMARK_REASON_OTHER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_REMARK_REASON_OTHER>().Local.FirstOrDefault(f => f.ART_WF_REMARK_REASON_OTHER_ID == Item.ART_WF_REMARK_REASON_OTHER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(ART_WF_REMARK_REASON_OTHER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.ART_WF_REMARK_REASON_OTHER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(ART_WF_REMARK_REASON_OTHER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<ART_WF_REMARK_REASON_OTHER>().Local.FirstOrDefault(f => f.ART_WF_REMARK_REASON_OTHER_ID == Item.ART_WF_REMARK_REASON_OTHER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(ART_WF_REMARK_REASON_OTHER NewItem, ART_WF_REMARK_REASON_OTHER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "ART_WF_REMARK_REASON_OTHER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByART_WF_REMARK_REASON_OTHER_ID(int? ART_WF_REMARK_REASON_OTHER_ID, ARTWORKEntities dc) { var Item = GetByART_WF_REMARK_REASON_OTHER_ID(ART_WF_REMARK_REASON_OTHER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
//public class IGRID_M_OUTBOUND_HEADER_SERVICE
//{
//    public static IGRID_M_OUTBOUND_HEADER GetByIGRID_OUTBOUND_HEADER_ID(int? IGRID_OUTBOUND_HEADER_ID, ARTWORKEntities dc) { if (IGRID_OUTBOUND_HEADER_ID == null || IGRID_OUTBOUND_HEADER_ID == 0) return null; else return (from p in dc.IGRID_M_OUTBOUND_HEADER where p.IGRID_OUTBOUND_HEADER_ID == IGRID_OUTBOUND_HEADER_ID select p).FirstOrDefault(); }
//    private static int? GetChkByIGRID_OUTBOUND_HEADER_ID(int? IGRID_OUTBOUND_HEADER_ID, ARTWORKEntities dc) { if (IGRID_OUTBOUND_HEADER_ID == null || IGRID_OUTBOUND_HEADER_ID == 0) return null; else { var temp = (from p in dc.IGRID_M_OUTBOUND_HEADER where p.IGRID_OUTBOUND_HEADER_ID == IGRID_OUTBOUND_HEADER_ID select p.IGRID_OUTBOUND_HEADER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
//    public static List<IGRID_M_OUTBOUND_HEADER> GetByItem(IGRID_M_OUTBOUND_HEADER Item, ARTWORKEntities dc) { if (Item == null) return new List<IGRID_M_OUTBOUND_HEADER>(); else return CriteriaBy((from p in dc.IGRID_M_OUTBOUND_HEADER select p), Item).ToList(); }
//    private static IQueryable<IGRID_M_OUTBOUND_HEADER> CriteriaBy(IQueryable<IGRID_M_OUTBOUND_HEADER> q, IGRID_M_OUTBOUND_HEADER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.IGRID_OUTBOUND_HEADER_ID)) { doWork = true; q = (from r in q where r.IGRID_OUTBOUND_HEADER_ID == criteria.IGRID_OUTBOUND_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_NO)) { doWork = true; q = (from r in q where r.ARTWORK_NO == criteria.ARTWORK_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE)) { doWork = true; q = (from r in q where r.DATE == criteria.DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TIME)) { doWork = true; q = (from r in q where r.TIME == criteria.TIME select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECORD_TYPE)) { doWork = true; q = (from r in q where r.RECORD_TYPE == criteria.RECORD_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NUMBER)) { doWork = true; q = (from r in q where r.MATERIAL_NUMBER == criteria.MATERIAL_NUMBER select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION == criteria.MATERIAL_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_CREATE_DATE)) { doWork = true; q = (from r in q where r.MATERIAL_CREATE_DATE == criteria.MATERIAL_CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_URL)) { doWork = true; q = (from r in q where r.ARTWORK_URL == criteria.ARTWORK_URL select r); } if (!CheckValue.EqualsDefaultValue(criteria.STATUS)) { doWork = true; q = (from r in q where r.STATUS == criteria.STATUS select r); } if (!CheckValue.EqualsDefaultValue(criteria.PA_USER_NAME)) { doWork = true; q = (from r in q where r.PA_USER_NAME == criteria.PA_USER_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.PG_USER_NAME)) { doWork = true; q = (from r in q where r.PG_USER_NAME == criteria.PG_USER_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_MATERIAL)) { doWork = true; q = (from r in q where r.REFERENCE_MATERIAL == criteria.REFERENCE_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_PRIMARY)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_PRIMARY == criteria.PRINTING_STYLE_OF_PRIMARY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_SECONDARY)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_SECONDARY == criteria.PRINTING_STYLE_OF_SECONDARY select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN == criteria.CUSTOMER_DESIGN select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN_DETAIL == criteria.CUSTOMER_DESIGN_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC == criteria.CUSTOMER_SPEC select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC_DETAIL == criteria.CUSTOMER_SPEC_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE == criteria.CUSTOMER_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE_DETAIL == criteria.CUSTOMER_SIZE_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR == criteria.CUSTOMER_NOMINATES_VENDOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR_DETAIL == criteria.CUSTOMER_NOMINATES_VENDOR_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_COLOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_COLOR == criteria.CUSTOMER_NOMINATES_COLOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_COLOR_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_COLOR_DETAIL == criteria.CUSTOMER_NOMINATES_COLOR_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SCANABLE)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SCANABLE == criteria.CUSTOMER_BARCODE_SCANABLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SCANABLE_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SCANABLE_DETAIL == criteria.CUSTOMER_BARCODE_SCANABLE_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SPEC == criteria.CUSTOMER_BARCODE_SPEC select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SPEC_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SPEC_DETAIL == criteria.CUSTOMER_BARCODE_SPEC_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.FIRST_INFO_GROUP)) { doWork = true; q = (from r in q where r.FIRST_INFO_GROUP == criteria.FIRST_INFO_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_NUMBER)) { doWork = true; q = (from r in q where r.SO_NUMBER == criteria.SO_NUMBER select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_ITEM)) { doWork = true; q = (from r in q where r.SO_ITEM == criteria.SO_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_PLANT)) { doWork = true; q = (from r in q where r.SO_PLANT == criteria.SO_PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PIC_MKT)) { doWork = true; q = (from r in q where r.PIC_MKT == criteria.PIC_MKT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESTINATION)) { doWork = true; q = (from r in q where r.DESTINATION == criteria.DESTINATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOTE_OF_PA)) { doWork = true; q = (from r in q where r.NOTE_OF_PA == criteria.NOTE_OF_PA select r); } if (!CheckValue.EqualsDefaultValue(criteria.FINAL_INFO_GROUP)) { doWork = true; q = (from r in q where r.FINAL_INFO_GROUP == criteria.FINAL_INFO_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOTE_OF_PG)) { doWork = true; q = (from r in q where r.NOTE_OF_PG == criteria.NOTE_OF_PG select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPLETE_INFO_GROUP)) { doWork = true; q = (from r in q where r.COMPLETE_INFO_GROUP == criteria.COMPLETE_INFO_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXPIRY_DATE_SYSTEM)) { doWork = true; q = (from r in q where r.EXPIRY_DATE_SYSTEM == criteria.EXPIRY_DATE_SYSTEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.SERIOUSNESS_OF_COLOR_PRINTING)) { doWork = true; q = (from r in q where r.SERIOUSNESS_OF_COLOR_PRINTING == criteria.SERIOUSNESS_OF_COLOR_PRINTING select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS)) { doWork = true; q = (from r in q where r.ANALYSIS == criteria.ANALYSIS select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHADE_LIMIT)) { doWork = true; q = (from r in q where r.SHADE_LIMIT == criteria.SHADE_LIMIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGE_QUANTITY)) { doWork = true; q = (from r in q where r.PACKAGE_QUANTITY == criteria.PACKAGE_QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.WASTE_PERCENT)) { doWork = true; q = (from r in q where r.WASTE_PERCENT == criteria.WASTE_PERCENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.IGRID_OUTBOUND_HEADER_ID == 0 select r); } return q; }
//    public static List<IGRID_M_OUTBOUND_HEADER> GetByItemContain(IGRID_M_OUTBOUND_HEADER Item, ARTWORKEntities dc) { if (Item == null) return new List<IGRID_M_OUTBOUND_HEADER>(); else return CriteriaByContains((from p in dc.IGRID_M_OUTBOUND_HEADER select p), Item).ToList(); }
//    private static IQueryable<IGRID_M_OUTBOUND_HEADER> CriteriaByContains(IQueryable<IGRID_M_OUTBOUND_HEADER> q, IGRID_M_OUTBOUND_HEADER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.IGRID_OUTBOUND_HEADER_ID)) { doWork = true; q = (from r in q where r.IGRID_OUTBOUND_HEADER_ID == criteria.IGRID_OUTBOUND_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_NO)) { doWork = true; q = (from r in q where r.ARTWORK_NO.Contains(criteria.ARTWORK_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE)) { doWork = true; q = (from r in q where r.DATE.Contains(criteria.DATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TIME)) { doWork = true; q = (from r in q where r.TIME.Contains(criteria.TIME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECORD_TYPE)) { doWork = true; q = (from r in q where r.RECORD_TYPE.Contains(criteria.RECORD_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NUMBER)) { doWork = true; q = (from r in q where r.MATERIAL_NUMBER.Contains(criteria.MATERIAL_NUMBER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION.Contains(criteria.MATERIAL_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_URL)) { doWork = true; q = (from r in q where r.ARTWORK_URL.Contains(criteria.ARTWORK_URL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STATUS)) { doWork = true; q = (from r in q where r.STATUS.Contains(criteria.STATUS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PA_USER_NAME)) { doWork = true; q = (from r in q where r.PA_USER_NAME.Contains(criteria.PA_USER_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PG_USER_NAME)) { doWork = true; q = (from r in q where r.PG_USER_NAME.Contains(criteria.PG_USER_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_MATERIAL)) { doWork = true; q = (from r in q where r.REFERENCE_MATERIAL.Contains(criteria.REFERENCE_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_PRIMARY)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_PRIMARY.Contains(criteria.PRINTING_STYLE_OF_PRIMARY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_SECONDARY)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_SECONDARY.Contains(criteria.PRINTING_STYLE_OF_SECONDARY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN.Contains(criteria.CUSTOMER_DESIGN) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN_DETAIL.Contains(criteria.CUSTOMER_DESIGN_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC.Contains(criteria.CUSTOMER_SPEC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC_DETAIL.Contains(criteria.CUSTOMER_SPEC_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE.Contains(criteria.CUSTOMER_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE_DETAIL.Contains(criteria.CUSTOMER_SIZE_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR.Contains(criteria.CUSTOMER_NOMINATES_VENDOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR_DETAIL.Contains(criteria.CUSTOMER_NOMINATES_VENDOR_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_COLOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_COLOR.Contains(criteria.CUSTOMER_NOMINATES_COLOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_COLOR_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_COLOR_DETAIL.Contains(criteria.CUSTOMER_NOMINATES_COLOR_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SCANABLE)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SCANABLE.Contains(criteria.CUSTOMER_BARCODE_SCANABLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SCANABLE_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SCANABLE_DETAIL.Contains(criteria.CUSTOMER_BARCODE_SCANABLE_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SPEC.Contains(criteria.CUSTOMER_BARCODE_SPEC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SPEC_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SPEC_DETAIL.Contains(criteria.CUSTOMER_BARCODE_SPEC_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FIRST_INFO_GROUP)) { doWork = true; q = (from r in q where r.FIRST_INFO_GROUP.Contains(criteria.FIRST_INFO_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_NUMBER)) { doWork = true; q = (from r in q where r.SO_NUMBER.Contains(criteria.SO_NUMBER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_ITEM)) { doWork = true; q = (from r in q where r.SO_ITEM.Contains(criteria.SO_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_PLANT)) { doWork = true; q = (from r in q where r.SO_PLANT.Contains(criteria.SO_PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PIC_MKT)) { doWork = true; q = (from r in q where r.PIC_MKT.Contains(criteria.PIC_MKT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESTINATION)) { doWork = true; q = (from r in q where r.DESTINATION.Contains(criteria.DESTINATION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOTE_OF_PA)) { doWork = true; q = (from r in q where r.NOTE_OF_PA.Contains(criteria.NOTE_OF_PA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FINAL_INFO_GROUP)) { doWork = true; q = (from r in q where r.FINAL_INFO_GROUP.Contains(criteria.FINAL_INFO_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOTE_OF_PG)) { doWork = true; q = (from r in q where r.NOTE_OF_PG.Contains(criteria.NOTE_OF_PG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPLETE_INFO_GROUP)) { doWork = true; q = (from r in q where r.COMPLETE_INFO_GROUP.Contains(criteria.COMPLETE_INFO_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXPIRY_DATE_SYSTEM)) { doWork = true; q = (from r in q where r.EXPIRY_DATE_SYSTEM.Contains(criteria.EXPIRY_DATE_SYSTEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SERIOUSNESS_OF_COLOR_PRINTING)) { doWork = true; q = (from r in q where r.SERIOUSNESS_OF_COLOR_PRINTING.Contains(criteria.SERIOUSNESS_OF_COLOR_PRINTING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS)) { doWork = true; q = (from r in q where r.ANALYSIS.Contains(criteria.ANALYSIS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHADE_LIMIT)) { doWork = true; q = (from r in q where r.SHADE_LIMIT.Contains(criteria.SHADE_LIMIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.IGRID_OUTBOUND_HEADER_ID == 0 select r); } return q; }
//    public static List<IGRID_M_OUTBOUND_HEADER> GetAll(ARTWORKEntities dc) { return (from p in dc.IGRID_M_OUTBOUND_HEADER select p).ToList(); }
//    public static void SaveOrUpdate(IGRID_M_OUTBOUND_HEADER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByIGRID_OUTBOUND_HEADER_ID(Item.IGRID_OUTBOUND_HEADER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.IGRID_M_OUTBOUND_HEADER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByIGRID_OUTBOUND_HEADER_ID(Item.IGRID_OUTBOUND_HEADER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<IGRID_M_OUTBOUND_HEADER>().Local.FirstOrDefault(f => f.IGRID_OUTBOUND_HEADER_ID == Item.IGRID_OUTBOUND_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
//    public static void SaveOrUpdateNoLog(IGRID_M_OUTBOUND_HEADER Item, ARTWORKEntities dc) { if (GetChkByIGRID_OUTBOUND_HEADER_ID(Item.IGRID_OUTBOUND_HEADER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.IGRID_M_OUTBOUND_HEADER.Add(Item); dc.SaveChanges(); } else { var temp = GetByIGRID_OUTBOUND_HEADER_ID(Item.IGRID_OUTBOUND_HEADER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<IGRID_M_OUTBOUND_HEADER>().Local.FirstOrDefault(f => f.IGRID_OUTBOUND_HEADER_ID == Item.IGRID_OUTBOUND_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
//    public static void SaveNoLog(IGRID_M_OUTBOUND_HEADER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.IGRID_M_OUTBOUND_HEADER.Add(Item); dc.SaveChanges(); }
//    public static void UpdateNoLog(IGRID_M_OUTBOUND_HEADER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<IGRID_M_OUTBOUND_HEADER>().Local.FirstOrDefault(f => f.IGRID_OUTBOUND_HEADER_ID == Item.IGRID_OUTBOUND_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
//    private static void SaveLog(IGRID_M_OUTBOUND_HEADER NewItem, IGRID_M_OUTBOUND_HEADER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "IGRID_M_OUTBOUND_HEADER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
//    public static void DeleteByIGRID_OUTBOUND_HEADER_ID(int? IGRID_OUTBOUND_HEADER_ID, ARTWORKEntities dc) { var Item = GetByIGRID_OUTBOUND_HEADER_ID(IGRID_OUTBOUND_HEADER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
//}
public class IGRID_M_OUTBOUND_HEADER_SERVICE
{
    public static IGRID_M_OUTBOUND_HEADER GetByIGRID_OUTBOUND_HEADER_ID(int? IGRID_OUTBOUND_HEADER_ID, ARTWORKEntities dc) { if (IGRID_OUTBOUND_HEADER_ID == null || IGRID_OUTBOUND_HEADER_ID == 0) return null; else return (from p in dc.IGRID_M_OUTBOUND_HEADER where p.IGRID_OUTBOUND_HEADER_ID == IGRID_OUTBOUND_HEADER_ID select p).FirstOrDefault(); }
    private static int? GetChkByIGRID_OUTBOUND_HEADER_ID(int? IGRID_OUTBOUND_HEADER_ID, ARTWORKEntities dc) { if (IGRID_OUTBOUND_HEADER_ID == null || IGRID_OUTBOUND_HEADER_ID == 0) return null; else { var temp = (from p in dc.IGRID_M_OUTBOUND_HEADER where p.IGRID_OUTBOUND_HEADER_ID == IGRID_OUTBOUND_HEADER_ID select p.IGRID_OUTBOUND_HEADER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<IGRID_M_OUTBOUND_HEADER> GetByItem(IGRID_M_OUTBOUND_HEADER Item, ARTWORKEntities dc) { if (Item == null) return new List<IGRID_M_OUTBOUND_HEADER>(); else return CriteriaBy((from p in dc.IGRID_M_OUTBOUND_HEADER select p), Item).ToList(); }
    private static IQueryable<IGRID_M_OUTBOUND_HEADER> CriteriaBy(IQueryable<IGRID_M_OUTBOUND_HEADER> q, IGRID_M_OUTBOUND_HEADER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.IGRID_OUTBOUND_HEADER_ID)) { doWork = true; q = (from r in q where r.IGRID_OUTBOUND_HEADER_ID == criteria.IGRID_OUTBOUND_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_NO)) { doWork = true; q = (from r in q where r.ARTWORK_NO == criteria.ARTWORK_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE)) { doWork = true; q = (from r in q where r.DATE == criteria.DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TIME)) { doWork = true; q = (from r in q where r.TIME == criteria.TIME select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECORD_TYPE)) { doWork = true; q = (from r in q where r.RECORD_TYPE == criteria.RECORD_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NUMBER)) { doWork = true; q = (from r in q where r.MATERIAL_NUMBER == criteria.MATERIAL_NUMBER select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION == criteria.MATERIAL_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_CREATE_DATE)) { doWork = true; q = (from r in q where r.MATERIAL_CREATE_DATE == criteria.MATERIAL_CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_URL)) { doWork = true; q = (from r in q where r.ARTWORK_URL == criteria.ARTWORK_URL select r); } if (!CheckValue.EqualsDefaultValue(criteria.STATUS)) { doWork = true; q = (from r in q where r.STATUS == criteria.STATUS select r); } if (!CheckValue.EqualsDefaultValue(criteria.PA_USER_NAME)) { doWork = true; q = (from r in q where r.PA_USER_NAME == criteria.PA_USER_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.PG_USER_NAME)) { doWork = true; q = (from r in q where r.PG_USER_NAME == criteria.PG_USER_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_MATERIAL)) { doWork = true; q = (from r in q where r.REFERENCE_MATERIAL == criteria.REFERENCE_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_PRIMARY)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_PRIMARY == criteria.PRINTING_STYLE_OF_PRIMARY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_SECONDARY)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_SECONDARY == criteria.PRINTING_STYLE_OF_SECONDARY select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN == criteria.CUSTOMER_DESIGN select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN_DETAIL == criteria.CUSTOMER_DESIGN_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC == criteria.CUSTOMER_SPEC select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC_DETAIL == criteria.CUSTOMER_SPEC_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE == criteria.CUSTOMER_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE_DETAIL == criteria.CUSTOMER_SIZE_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR == criteria.CUSTOMER_NOMINATES_VENDOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR_DETAIL == criteria.CUSTOMER_NOMINATES_VENDOR_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_COLOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_COLOR == criteria.CUSTOMER_NOMINATES_COLOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_COLOR_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_COLOR_DETAIL == criteria.CUSTOMER_NOMINATES_COLOR_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SCANABLE)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SCANABLE == criteria.CUSTOMER_BARCODE_SCANABLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SCANABLE_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SCANABLE_DETAIL == criteria.CUSTOMER_BARCODE_SCANABLE_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SPEC == criteria.CUSTOMER_BARCODE_SPEC select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SPEC_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SPEC_DETAIL == criteria.CUSTOMER_BARCODE_SPEC_DETAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.FIRST_INFO_GROUP)) { doWork = true; q = (from r in q where r.FIRST_INFO_GROUP == criteria.FIRST_INFO_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_NUMBER)) { doWork = true; q = (from r in q where r.SO_NUMBER == criteria.SO_NUMBER select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_ITEM)) { doWork = true; q = (from r in q where r.SO_ITEM == criteria.SO_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_PLANT)) { doWork = true; q = (from r in q where r.SO_PLANT == criteria.SO_PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PIC_MKT)) { doWork = true; q = (from r in q where r.PIC_MKT == criteria.PIC_MKT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESTINATION)) { doWork = true; q = (from r in q where r.DESTINATION == criteria.DESTINATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOTE_OF_PA)) { doWork = true; q = (from r in q where r.NOTE_OF_PA == criteria.NOTE_OF_PA select r); } if (!CheckValue.EqualsDefaultValue(criteria.FINAL_INFO_GROUP)) { doWork = true; q = (from r in q where r.FINAL_INFO_GROUP == criteria.FINAL_INFO_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOTE_OF_PG)) { doWork = true; q = (from r in q where r.NOTE_OF_PG == criteria.NOTE_OF_PG select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPLETE_INFO_GROUP)) { doWork = true; q = (from r in q where r.COMPLETE_INFO_GROUP == criteria.COMPLETE_INFO_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXPIRY_DATE_SYSTEM)) { doWork = true; q = (from r in q where r.EXPIRY_DATE_SYSTEM == criteria.EXPIRY_DATE_SYSTEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.SERIOUSNESS_OF_COLOR_PRINTING)) { doWork = true; q = (from r in q where r.SERIOUSNESS_OF_COLOR_PRINTING == criteria.SERIOUSNESS_OF_COLOR_PRINTING select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS)) { doWork = true; q = (from r in q where r.ANALYSIS == criteria.ANALYSIS select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHADE_LIMIT)) { doWork = true; q = (from r in q where r.SHADE_LIMIT == criteria.SHADE_LIMIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGE_QUANTITY)) { doWork = true; q = (from r in q where r.PACKAGE_QUANTITY == criteria.PACKAGE_QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.WASTE_PERCENT)) { doWork = true; q = (from r in q where r.WASTE_PERCENT == criteria.WASTE_PERCENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHANGE_POINT)) { doWork = true; q = (from r in q where r.CHANGE_POINT == criteria.CHANGE_POINT select r); } if (!doWork) { q = (from r in q where r.IGRID_OUTBOUND_HEADER_ID == 0 select r); } return q; }
    public static List<IGRID_M_OUTBOUND_HEADER> GetByItemContain(IGRID_M_OUTBOUND_HEADER Item, ARTWORKEntities dc) { if (Item == null) return new List<IGRID_M_OUTBOUND_HEADER>(); else return CriteriaByContains((from p in dc.IGRID_M_OUTBOUND_HEADER select p), Item).ToList(); }
    private static IQueryable<IGRID_M_OUTBOUND_HEADER> CriteriaByContains(IQueryable<IGRID_M_OUTBOUND_HEADER> q, IGRID_M_OUTBOUND_HEADER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.IGRID_OUTBOUND_HEADER_ID)) { doWork = true; q = (from r in q where r.IGRID_OUTBOUND_HEADER_ID == criteria.IGRID_OUTBOUND_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_NO)) { doWork = true; q = (from r in q where r.ARTWORK_NO.Contains(criteria.ARTWORK_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE)) { doWork = true; q = (from r in q where r.DATE.Contains(criteria.DATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TIME)) { doWork = true; q = (from r in q where r.TIME.Contains(criteria.TIME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECORD_TYPE)) { doWork = true; q = (from r in q where r.RECORD_TYPE.Contains(criteria.RECORD_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NUMBER)) { doWork = true; q = (from r in q where r.MATERIAL_NUMBER.Contains(criteria.MATERIAL_NUMBER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION.Contains(criteria.MATERIAL_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_URL)) { doWork = true; q = (from r in q where r.ARTWORK_URL.Contains(criteria.ARTWORK_URL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STATUS)) { doWork = true; q = (from r in q where r.STATUS.Contains(criteria.STATUS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PA_USER_NAME)) { doWork = true; q = (from r in q where r.PA_USER_NAME.Contains(criteria.PA_USER_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PG_USER_NAME)) { doWork = true; q = (from r in q where r.PG_USER_NAME.Contains(criteria.PG_USER_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_MATERIAL)) { doWork = true; q = (from r in q where r.REFERENCE_MATERIAL.Contains(criteria.REFERENCE_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_PRIMARY)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_PRIMARY.Contains(criteria.PRINTING_STYLE_OF_PRIMARY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINTING_STYLE_OF_SECONDARY)) { doWork = true; q = (from r in q where r.PRINTING_STYLE_OF_SECONDARY.Contains(criteria.PRINTING_STYLE_OF_SECONDARY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN.Contains(criteria.CUSTOMER_DESIGN) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_DESIGN_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_DESIGN_DETAIL.Contains(criteria.CUSTOMER_DESIGN_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC.Contains(criteria.CUSTOMER_SPEC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SPEC_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_SPEC_DETAIL.Contains(criteria.CUSTOMER_SPEC_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE.Contains(criteria.CUSTOMER_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_SIZE_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_SIZE_DETAIL.Contains(criteria.CUSTOMER_SIZE_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR.Contains(criteria.CUSTOMER_NOMINATES_VENDOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_VENDOR_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_VENDOR_DETAIL.Contains(criteria.CUSTOMER_NOMINATES_VENDOR_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_COLOR)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_COLOR.Contains(criteria.CUSTOMER_NOMINATES_COLOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NOMINATES_COLOR_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_NOMINATES_COLOR_DETAIL.Contains(criteria.CUSTOMER_NOMINATES_COLOR_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SCANABLE)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SCANABLE.Contains(criteria.CUSTOMER_BARCODE_SCANABLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SCANABLE_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SCANABLE_DETAIL.Contains(criteria.CUSTOMER_BARCODE_SCANABLE_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SPEC)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SPEC.Contains(criteria.CUSTOMER_BARCODE_SPEC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_BARCODE_SPEC_DETAIL)) { doWork = true; q = (from r in q where r.CUSTOMER_BARCODE_SPEC_DETAIL.Contains(criteria.CUSTOMER_BARCODE_SPEC_DETAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FIRST_INFO_GROUP)) { doWork = true; q = (from r in q where r.FIRST_INFO_GROUP.Contains(criteria.FIRST_INFO_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_NUMBER)) { doWork = true; q = (from r in q where r.SO_NUMBER.Contains(criteria.SO_NUMBER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_ITEM)) { doWork = true; q = (from r in q where r.SO_ITEM.Contains(criteria.SO_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_PLANT)) { doWork = true; q = (from r in q where r.SO_PLANT.Contains(criteria.SO_PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PIC_MKT)) { doWork = true; q = (from r in q where r.PIC_MKT.Contains(criteria.PIC_MKT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESTINATION)) { doWork = true; q = (from r in q where r.DESTINATION.Contains(criteria.DESTINATION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOTE_OF_PA)) { doWork = true; q = (from r in q where r.NOTE_OF_PA.Contains(criteria.NOTE_OF_PA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FINAL_INFO_GROUP)) { doWork = true; q = (from r in q where r.FINAL_INFO_GROUP.Contains(criteria.FINAL_INFO_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOTE_OF_PG)) { doWork = true; q = (from r in q where r.NOTE_OF_PG.Contains(criteria.NOTE_OF_PG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPLETE_INFO_GROUP)) { doWork = true; q = (from r in q where r.COMPLETE_INFO_GROUP.Contains(criteria.COMPLETE_INFO_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXPIRY_DATE_SYSTEM)) { doWork = true; q = (from r in q where r.EXPIRY_DATE_SYSTEM.Contains(criteria.EXPIRY_DATE_SYSTEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SERIOUSNESS_OF_COLOR_PRINTING)) { doWork = true; q = (from r in q where r.SERIOUSNESS_OF_COLOR_PRINTING.Contains(criteria.SERIOUSNESS_OF_COLOR_PRINTING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ANALYSIS)) { doWork = true; q = (from r in q where r.ANALYSIS.Contains(criteria.ANALYSIS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHADE_LIMIT)) { doWork = true; q = (from r in q where r.SHADE_LIMIT.Contains(criteria.SHADE_LIMIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHANGE_POINT)) { doWork = true; q = (from r in q where r.CHANGE_POINT.Contains(criteria.CHANGE_POINT) select r); } if (!doWork) { q = (from r in q where r.IGRID_OUTBOUND_HEADER_ID == 0 select r); } return q; }
    public static List<IGRID_M_OUTBOUND_HEADER> GetAll(ARTWORKEntities dc) { return (from p in dc.IGRID_M_OUTBOUND_HEADER select p).ToList(); }
    public static void SaveOrUpdate(IGRID_M_OUTBOUND_HEADER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByIGRID_OUTBOUND_HEADER_ID(Item.IGRID_OUTBOUND_HEADER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.IGRID_M_OUTBOUND_HEADER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByIGRID_OUTBOUND_HEADER_ID(Item.IGRID_OUTBOUND_HEADER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<IGRID_M_OUTBOUND_HEADER>().Local.FirstOrDefault(f => f.IGRID_OUTBOUND_HEADER_ID == Item.IGRID_OUTBOUND_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(IGRID_M_OUTBOUND_HEADER Item, ARTWORKEntities dc) { if (GetChkByIGRID_OUTBOUND_HEADER_ID(Item.IGRID_OUTBOUND_HEADER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.IGRID_M_OUTBOUND_HEADER.Add(Item); dc.SaveChanges(); } else { var temp = GetByIGRID_OUTBOUND_HEADER_ID(Item.IGRID_OUTBOUND_HEADER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<IGRID_M_OUTBOUND_HEADER>().Local.FirstOrDefault(f => f.IGRID_OUTBOUND_HEADER_ID == Item.IGRID_OUTBOUND_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(IGRID_M_OUTBOUND_HEADER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.IGRID_M_OUTBOUND_HEADER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(IGRID_M_OUTBOUND_HEADER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<IGRID_M_OUTBOUND_HEADER>().Local.FirstOrDefault(f => f.IGRID_OUTBOUND_HEADER_ID == Item.IGRID_OUTBOUND_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(IGRID_M_OUTBOUND_HEADER NewItem, IGRID_M_OUTBOUND_HEADER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "IGRID_M_OUTBOUND_HEADER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByIGRID_OUTBOUND_HEADER_ID(int? IGRID_OUTBOUND_HEADER_ID, ARTWORKEntities dc) { var Item = GetByIGRID_OUTBOUND_HEADER_ID(IGRID_OUTBOUND_HEADER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class IGRID_M_OUTBOUND_ITEM_SERVICE
{
    public static IGRID_M_OUTBOUND_ITEM GetByIGRID_OUTBOUND_ITEM_ID(int? IGRID_OUTBOUND_ITEM_ID, ARTWORKEntities dc) { if (IGRID_OUTBOUND_ITEM_ID == null || IGRID_OUTBOUND_ITEM_ID == 0) return null; else return (from p in dc.IGRID_M_OUTBOUND_ITEM where p.IGRID_OUTBOUND_ITEM_ID == IGRID_OUTBOUND_ITEM_ID select p).FirstOrDefault(); }
    private static int? GetChkByIGRID_OUTBOUND_ITEM_ID(int? IGRID_OUTBOUND_ITEM_ID, ARTWORKEntities dc) { if (IGRID_OUTBOUND_ITEM_ID == null || IGRID_OUTBOUND_ITEM_ID == 0) return null; else { var temp = (from p in dc.IGRID_M_OUTBOUND_ITEM where p.IGRID_OUTBOUND_ITEM_ID == IGRID_OUTBOUND_ITEM_ID select p.IGRID_OUTBOUND_ITEM_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<IGRID_M_OUTBOUND_ITEM> GetByItem(IGRID_M_OUTBOUND_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<IGRID_M_OUTBOUND_ITEM>(); else return CriteriaBy((from p in dc.IGRID_M_OUTBOUND_ITEM select p), Item).ToList(); }
    private static IQueryable<IGRID_M_OUTBOUND_ITEM> CriteriaBy(IQueryable<IGRID_M_OUTBOUND_ITEM> q, IGRID_M_OUTBOUND_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.IGRID_OUTBOUND_ITEM_ID)) { doWork = true; q = (from r in q where r.IGRID_OUTBOUND_ITEM_ID == criteria.IGRID_OUTBOUND_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_NO)) { doWork = true; q = (from r in q where r.ARTWORK_NO == criteria.ARTWORK_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE)) { doWork = true; q = (from r in q where r.DATE == criteria.DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TIME)) { doWork = true; q = (from r in q where r.TIME == criteria.TIME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHARACTERISTIC_NAME)) { doWork = true; q = (from r in q where r.CHARACTERISTIC_NAME == criteria.CHARACTERISTIC_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHARACTERISTIC_VALUE)) { doWork = true; q = (from r in q where r.CHARACTERISTIC_VALUE == criteria.CHARACTERISTIC_VALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHARACTERISTIC_DESCRIPTION)) { doWork = true; q = (from r in q where r.CHARACTERISTIC_DESCRIPTION == criteria.CHARACTERISTIC_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.IGRID_OUTBOUND_ITEM_ID == 0 select r); } return q; }
    public static List<IGRID_M_OUTBOUND_ITEM> GetByItemContain(IGRID_M_OUTBOUND_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<IGRID_M_OUTBOUND_ITEM>(); else return CriteriaByContains((from p in dc.IGRID_M_OUTBOUND_ITEM select p), Item).ToList(); }
    private static IQueryable<IGRID_M_OUTBOUND_ITEM> CriteriaByContains(IQueryable<IGRID_M_OUTBOUND_ITEM> q, IGRID_M_OUTBOUND_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.IGRID_OUTBOUND_ITEM_ID)) { doWork = true; q = (from r in q where r.IGRID_OUTBOUND_ITEM_ID == criteria.IGRID_OUTBOUND_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_NO)) { doWork = true; q = (from r in q where r.ARTWORK_NO.Contains(criteria.ARTWORK_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE)) { doWork = true; q = (from r in q where r.DATE.Contains(criteria.DATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TIME)) { doWork = true; q = (from r in q where r.TIME.Contains(criteria.TIME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHARACTERISTIC_NAME)) { doWork = true; q = (from r in q where r.CHARACTERISTIC_NAME.Contains(criteria.CHARACTERISTIC_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHARACTERISTIC_VALUE)) { doWork = true; q = (from r in q where r.CHARACTERISTIC_VALUE.Contains(criteria.CHARACTERISTIC_VALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHARACTERISTIC_DESCRIPTION)) { doWork = true; q = (from r in q where r.CHARACTERISTIC_DESCRIPTION.Contains(criteria.CHARACTERISTIC_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.IGRID_OUTBOUND_ITEM_ID == 0 select r); } return q; }
    public static List<IGRID_M_OUTBOUND_ITEM> GetAll(ARTWORKEntities dc) { return (from p in dc.IGRID_M_OUTBOUND_ITEM select p).ToList(); }
    public static void SaveOrUpdate(IGRID_M_OUTBOUND_ITEM Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByIGRID_OUTBOUND_ITEM_ID(Item.IGRID_OUTBOUND_ITEM_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.IGRID_M_OUTBOUND_ITEM.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByIGRID_OUTBOUND_ITEM_ID(Item.IGRID_OUTBOUND_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<IGRID_M_OUTBOUND_ITEM>().Local.FirstOrDefault(f => f.IGRID_OUTBOUND_ITEM_ID == Item.IGRID_OUTBOUND_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(IGRID_M_OUTBOUND_ITEM Item, ARTWORKEntities dc) { if (GetChkByIGRID_OUTBOUND_ITEM_ID(Item.IGRID_OUTBOUND_ITEM_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.IGRID_M_OUTBOUND_ITEM.Add(Item); dc.SaveChanges(); } else { var temp = GetByIGRID_OUTBOUND_ITEM_ID(Item.IGRID_OUTBOUND_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<IGRID_M_OUTBOUND_ITEM>().Local.FirstOrDefault(f => f.IGRID_OUTBOUND_ITEM_ID == Item.IGRID_OUTBOUND_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(IGRID_M_OUTBOUND_ITEM Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.IGRID_M_OUTBOUND_ITEM.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(IGRID_M_OUTBOUND_ITEM Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<IGRID_M_OUTBOUND_ITEM>().Local.FirstOrDefault(f => f.IGRID_OUTBOUND_ITEM_ID == Item.IGRID_OUTBOUND_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(IGRID_M_OUTBOUND_ITEM NewItem, IGRID_M_OUTBOUND_ITEM OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "IGRID_M_OUTBOUND_ITEM"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByIGRID_OUTBOUND_ITEM_ID(int? IGRID_OUTBOUND_ITEM_ID, ARTWORKEntities dc) { var Item = GetByIGRID_OUTBOUND_ITEM_ID(IGRID_OUTBOUND_ITEM_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_2P_SERVICE
{
    public static SAP_M_2P GetByTWO_P_ID(int? TWO_P_ID, ARTWORKEntities dc) { if (TWO_P_ID == null || TWO_P_ID == 0) return null; else return (from p in dc.SAP_M_2P where p.TWO_P_ID == TWO_P_ID select p).FirstOrDefault(); }
    private static int? GetChkByTWO_P_ID(int? TWO_P_ID, ARTWORKEntities dc) { if (TWO_P_ID == null || TWO_P_ID == 0) return null; else { var temp = (from p in dc.SAP_M_2P where p.TWO_P_ID == TWO_P_ID select p.TWO_P_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_2P> GetByItem(SAP_M_2P Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_2P>(); else return CriteriaBy((from p in dc.SAP_M_2P select p), Item).ToList(); }
    private static IQueryable<SAP_M_2P> CriteriaBy(IQueryable<SAP_M_2P> q, SAP_M_2P criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.TWO_P_ID)) { doWork = true; q = (from r in q where r.TWO_P_ID == criteria.TWO_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_SYLE_VALUE)) { doWork = true; q = (from r in q where r.PACKING_SYLE_VALUE == criteria.PACKING_SYLE_VALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_SYLE_DESCRIPTION)) { doWork = true; q = (from r in q where r.PACKING_SYLE_DESCRIPTION == criteria.PACKING_SYLE_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_VALUE)) { doWork = true; q = (from r in q where r.PACK_SIZE_VALUE == criteria.PACK_SIZE_VALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_DESCRIPTION)) { doWork = true; q = (from r in q where r.PACK_SIZE_DESCRIPTION == criteria.PACK_SIZE_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.TWO_P_ID == 0 select r); } return q; }
    public static List<SAP_M_2P> GetByItemContain(SAP_M_2P Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_2P>(); else return CriteriaByContains((from p in dc.SAP_M_2P select p), Item).ToList(); }
    private static IQueryable<SAP_M_2P> CriteriaByContains(IQueryable<SAP_M_2P> q, SAP_M_2P criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.TWO_P_ID)) { doWork = true; q = (from r in q where r.TWO_P_ID == criteria.TWO_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_SYLE_VALUE)) { doWork = true; q = (from r in q where r.PACKING_SYLE_VALUE.Contains(criteria.PACKING_SYLE_VALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_SYLE_DESCRIPTION)) { doWork = true; q = (from r in q where r.PACKING_SYLE_DESCRIPTION.Contains(criteria.PACKING_SYLE_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_VALUE)) { doWork = true; q = (from r in q where r.PACK_SIZE_VALUE.Contains(criteria.PACK_SIZE_VALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_DESCRIPTION)) { doWork = true; q = (from r in q where r.PACK_SIZE_DESCRIPTION.Contains(criteria.PACK_SIZE_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.TWO_P_ID == 0 select r); } return q; }
    public static List<SAP_M_2P> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_2P select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_2P Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByTWO_P_ID(Item.TWO_P_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_2P.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByTWO_P_ID(Item.TWO_P_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_2P>().Local.FirstOrDefault(f => f.TWO_P_ID == Item.TWO_P_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_2P Item, ARTWORKEntities dc) { if (GetChkByTWO_P_ID(Item.TWO_P_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_2P.Add(Item); dc.SaveChanges(); } else { var temp = GetByTWO_P_ID(Item.TWO_P_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_2P>().Local.FirstOrDefault(f => f.TWO_P_ID == Item.TWO_P_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_2P Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_2P.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_2P Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_2P>().Local.FirstOrDefault(f => f.TWO_P_ID == Item.TWO_P_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_2P NewItem, SAP_M_2P OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_2P"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByTWO_P_ID(int? TWO_P_ID, ARTWORKEntities dc) { var Item = GetByTWO_P_ID(TWO_P_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_3P_SERVICE
{
    public static SAP_M_3P GetByTHREE_P_ID(int? THREE_P_ID, ARTWORKEntities dc) { if (THREE_P_ID == null || THREE_P_ID == 0) return null; else return (from p in dc.SAP_M_3P where p.THREE_P_ID == THREE_P_ID select p).FirstOrDefault(); }
    private static int? GetChkByTHREE_P_ID(int? THREE_P_ID, ARTWORKEntities dc) { if (THREE_P_ID == null || THREE_P_ID == 0) return null; else { var temp = (from p in dc.SAP_M_3P where p.THREE_P_ID == THREE_P_ID select p.THREE_P_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_3P> GetByItem(SAP_M_3P Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_3P>(); else return CriteriaBy((from p in dc.SAP_M_3P select p), Item).ToList(); }
    private static IQueryable<SAP_M_3P> CriteriaBy(IQueryable<SAP_M_3P> q, SAP_M_3P criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.THREE_P_ID)) { doWork = true; q = (from r in q where r.THREE_P_ID == criteria.THREE_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_VALUE)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_VALUE == criteria.PRIMARY_SIZE_VALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_DESCRIPTION)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_DESCRIPTION == criteria.PRIMARY_SIZE_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_VALUE)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_VALUE == criteria.CONTAINER_TYPE_VALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_DESCRIPTION)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_DESCRIPTION == criteria.CONTAINER_TYPE_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_VALUE)) { doWork = true; q = (from r in q where r.LID_TYPE_VALUE == criteria.LID_TYPE_VALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_DESCRIPTION)) { doWork = true; q = (from r in q where r.LID_TYPE_DESCRIPTION == criteria.LID_TYPE_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.THREE_P_ID == 0 select r); } return q; }
    public static List<SAP_M_3P> GetByItemContain(SAP_M_3P Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_3P>(); else return CriteriaByContains((from p in dc.SAP_M_3P select p), Item).ToList(); }
    private static IQueryable<SAP_M_3P> CriteriaByContains(IQueryable<SAP_M_3P> q, SAP_M_3P criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.THREE_P_ID)) { doWork = true; q = (from r in q where r.THREE_P_ID == criteria.THREE_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_VALUE)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_VALUE.Contains(criteria.PRIMARY_SIZE_VALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_DESCRIPTION)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_DESCRIPTION.Contains(criteria.PRIMARY_SIZE_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_VALUE)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_VALUE.Contains(criteria.CONTAINER_TYPE_VALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_DESCRIPTION)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_DESCRIPTION.Contains(criteria.CONTAINER_TYPE_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_VALUE)) { doWork = true; q = (from r in q where r.LID_TYPE_VALUE.Contains(criteria.LID_TYPE_VALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_DESCRIPTION)) { doWork = true; q = (from r in q where r.LID_TYPE_DESCRIPTION.Contains(criteria.LID_TYPE_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.THREE_P_ID == 0 select r); } return q; }
    public static List<SAP_M_3P> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_3P select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_3P Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByTHREE_P_ID(Item.THREE_P_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_3P.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByTHREE_P_ID(Item.THREE_P_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_3P>().Local.FirstOrDefault(f => f.THREE_P_ID == Item.THREE_P_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_3P Item, ARTWORKEntities dc) { if (GetChkByTHREE_P_ID(Item.THREE_P_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_3P.Add(Item); dc.SaveChanges(); } else { var temp = GetByTHREE_P_ID(Item.THREE_P_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_3P>().Local.FirstOrDefault(f => f.THREE_P_ID == Item.THREE_P_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_3P Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_3P.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_3P Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_3P>().Local.FirstOrDefault(f => f.THREE_P_ID == Item.THREE_P_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_3P NewItem, SAP_M_3P OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_3P"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByTHREE_P_ID(int? THREE_P_ID, ARTWORKEntities dc) { var Item = GetByTHREE_P_ID(THREE_P_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_BRAND_SERVICE
{
    public static SAP_M_BRAND GetByBRAND_ID(int? BRAND_ID, ARTWORKEntities dc) { if (BRAND_ID == null || BRAND_ID == 0) return null; else return (from p in dc.SAP_M_BRAND where p.BRAND_ID == BRAND_ID select p).FirstOrDefault(); }
    private static int? GetChkByBRAND_ID(int? BRAND_ID, ARTWORKEntities dc) { if (BRAND_ID == null || BRAND_ID == 0) return null; else { var temp = (from p in dc.SAP_M_BRAND where p.BRAND_ID == BRAND_ID select p.BRAND_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_BRAND> GetByItem(SAP_M_BRAND Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_BRAND>(); else return CriteriaBy((from p in dc.SAP_M_BRAND select p), Item).ToList(); }
    private static IQueryable<SAP_M_BRAND> CriteriaBy(IQueryable<SAP_M_BRAND> q, SAP_M_BRAND criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_GROUP)) { doWork = true; q = (from r in q where r.MATERIAL_GROUP == criteria.MATERIAL_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION == criteria.DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.BRAND_ID == 0 select r); } return q; }
    public static List<SAP_M_BRAND> GetByItemContain(SAP_M_BRAND Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_BRAND>(); else return CriteriaByContains((from p in dc.SAP_M_BRAND select p), Item).ToList(); }
    private static IQueryable<SAP_M_BRAND> CriteriaByContains(IQueryable<SAP_M_BRAND> q, SAP_M_BRAND criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_GROUP)) { doWork = true; q = (from r in q where r.MATERIAL_GROUP.Contains(criteria.MATERIAL_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION.Contains(criteria.DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.BRAND_ID == 0 select r); } return q; }
    public static List<SAP_M_BRAND> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_BRAND select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_BRAND Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByBRAND_ID(Item.BRAND_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_BRAND.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByBRAND_ID(Item.BRAND_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_BRAND>().Local.FirstOrDefault(f => f.BRAND_ID == Item.BRAND_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_BRAND Item, ARTWORKEntities dc) { if (GetChkByBRAND_ID(Item.BRAND_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_BRAND.Add(Item); dc.SaveChanges(); } else { var temp = GetByBRAND_ID(Item.BRAND_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_BRAND>().Local.FirstOrDefault(f => f.BRAND_ID == Item.BRAND_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_BRAND Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_BRAND.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_BRAND Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_BRAND>().Local.FirstOrDefault(f => f.BRAND_ID == Item.BRAND_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_BRAND NewItem, SAP_M_BRAND OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_BRAND"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByBRAND_ID(int? BRAND_ID, ARTWORKEntities dc) { var Item = GetByBRAND_ID(BRAND_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_CHARACTERISTIC_SERVICE
{
    public static SAP_M_CHARACTERISTIC GetByCHARACTERISTIC_ID(int? CHARACTERISTIC_ID, ARTWORKEntities dc) { if (CHARACTERISTIC_ID == null || CHARACTERISTIC_ID == 0) return null; else return (from p in dc.SAP_M_CHARACTERISTIC where p.CHARACTERISTIC_ID == CHARACTERISTIC_ID select p).FirstOrDefault(); }
    private static int? GetChkByCHARACTERISTIC_ID(int? CHARACTERISTIC_ID, ARTWORKEntities dc) { if (CHARACTERISTIC_ID == null || CHARACTERISTIC_ID == 0) return null; else { var temp = (from p in dc.SAP_M_CHARACTERISTIC where p.CHARACTERISTIC_ID == CHARACTERISTIC_ID select p.CHARACTERISTIC_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_CHARACTERISTIC> GetByItem(SAP_M_CHARACTERISTIC Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_CHARACTERISTIC>(); else return CriteriaBy((from p in dc.SAP_M_CHARACTERISTIC select p), Item).ToList(); }
    private static IQueryable<SAP_M_CHARACTERISTIC> CriteriaBy(IQueryable<SAP_M_CHARACTERISTIC> q, SAP_M_CHARACTERISTIC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHARACTERISTIC_ID)) { doWork = true; q = (from r in q where r.CHARACTERISTIC_ID == criteria.CHARACTERISTIC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NAME)) { doWork = true; q = (from r in q where r.NAME == criteria.NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUE)) { doWork = true; q = (from r in q where r.VALUE == criteria.VALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION == criteria.DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.CHARACTERISTIC_ID == 0 select r); } return q; }
    public static List<SAP_M_CHARACTERISTIC> GetByItemContain(SAP_M_CHARACTERISTIC Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_CHARACTERISTIC>(); else return CriteriaByContains((from p in dc.SAP_M_CHARACTERISTIC select p), Item).ToList(); }
    private static IQueryable<SAP_M_CHARACTERISTIC> CriteriaByContains(IQueryable<SAP_M_CHARACTERISTIC> q, SAP_M_CHARACTERISTIC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHARACTERISTIC_ID)) { doWork = true; q = (from r in q where r.CHARACTERISTIC_ID == criteria.CHARACTERISTIC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NAME)) { doWork = true; q = (from r in q where r.NAME.Contains(criteria.NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUE)) { doWork = true; q = (from r in q where r.VALUE.Contains(criteria.VALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION.Contains(criteria.DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.CHARACTERISTIC_ID == 0 select r); } return q; }
    public static List<SAP_M_CHARACTERISTIC> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_CHARACTERISTIC select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_CHARACTERISTIC Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCHARACTERISTIC_ID(Item.CHARACTERISTIC_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_CHARACTERISTIC.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCHARACTERISTIC_ID(Item.CHARACTERISTIC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_CHARACTERISTIC>().Local.FirstOrDefault(f => f.CHARACTERISTIC_ID == Item.CHARACTERISTIC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_CHARACTERISTIC Item, ARTWORKEntities dc) { if (GetChkByCHARACTERISTIC_ID(Item.CHARACTERISTIC_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_CHARACTERISTIC.Add(Item); dc.SaveChanges(); } else { var temp = GetByCHARACTERISTIC_ID(Item.CHARACTERISTIC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_CHARACTERISTIC>().Local.FirstOrDefault(f => f.CHARACTERISTIC_ID == Item.CHARACTERISTIC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_CHARACTERISTIC Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_CHARACTERISTIC.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_CHARACTERISTIC Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_CHARACTERISTIC>().Local.FirstOrDefault(f => f.CHARACTERISTIC_ID == Item.CHARACTERISTIC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_CHARACTERISTIC NewItem, SAP_M_CHARACTERISTIC OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_CHARACTERISTIC"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCHARACTERISTIC_ID(int? CHARACTERISTIC_ID, ARTWORKEntities dc) { var Item = GetByCHARACTERISTIC_ID(CHARACTERISTIC_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_CHARACTERISTIC_ITEM_SERVICE
{
    public static SAP_M_CHARACTERISTIC_ITEM GetByCHARACTERISTIC_ITEM_ID(int? CHARACTERISTIC_ITEM_ID, ARTWORKEntities dc) { if (CHARACTERISTIC_ITEM_ID == null || CHARACTERISTIC_ITEM_ID == 0) return null; else return (from p in dc.SAP_M_CHARACTERISTIC_ITEM where p.CHARACTERISTIC_ITEM_ID == CHARACTERISTIC_ITEM_ID select p).FirstOrDefault(); }
    private static int? GetChkByCHARACTERISTIC_ITEM_ID(int? CHARACTERISTIC_ITEM_ID, ARTWORKEntities dc) { if (CHARACTERISTIC_ITEM_ID == null || CHARACTERISTIC_ITEM_ID == 0) return null; else { var temp = (from p in dc.SAP_M_CHARACTERISTIC_ITEM where p.CHARACTERISTIC_ITEM_ID == CHARACTERISTIC_ITEM_ID select p.CHARACTERISTIC_ITEM_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_CHARACTERISTIC_ITEM> GetByItem(SAP_M_CHARACTERISTIC_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_CHARACTERISTIC_ITEM>(); else return CriteriaBy((from p in dc.SAP_M_CHARACTERISTIC_ITEM select p), Item).ToList(); }
    private static IQueryable<SAP_M_CHARACTERISTIC_ITEM> CriteriaBy(IQueryable<SAP_M_CHARACTERISTIC_ITEM> q, SAP_M_CHARACTERISTIC_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHARACTERISTIC_ITEM_ID)) { doWork = true; q = (from r in q where r.CHARACTERISTIC_ITEM_ID == criteria.CHARACTERISTIC_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NAME)) { doWork = true; q = (from r in q where r.NAME == criteria.NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION == criteria.DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.CHARACTERISTIC_ITEM_ID == 0 select r); } return q; }
    public static List<SAP_M_CHARACTERISTIC_ITEM> GetByItemContain(SAP_M_CHARACTERISTIC_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_CHARACTERISTIC_ITEM>(); else return CriteriaByContains((from p in dc.SAP_M_CHARACTERISTIC_ITEM select p), Item).ToList(); }
    private static IQueryable<SAP_M_CHARACTERISTIC_ITEM> CriteriaByContains(IQueryable<SAP_M_CHARACTERISTIC_ITEM> q, SAP_M_CHARACTERISTIC_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CHARACTERISTIC_ITEM_ID)) { doWork = true; q = (from r in q where r.CHARACTERISTIC_ITEM_ID == criteria.CHARACTERISTIC_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NAME)) { doWork = true; q = (from r in q where r.NAME.Contains(criteria.NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION.Contains(criteria.DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.CHARACTERISTIC_ITEM_ID == 0 select r); } return q; }
    public static List<SAP_M_CHARACTERISTIC_ITEM> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_CHARACTERISTIC_ITEM select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_CHARACTERISTIC_ITEM Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCHARACTERISTIC_ITEM_ID(Item.CHARACTERISTIC_ITEM_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_CHARACTERISTIC_ITEM.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCHARACTERISTIC_ITEM_ID(Item.CHARACTERISTIC_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_CHARACTERISTIC_ITEM>().Local.FirstOrDefault(f => f.CHARACTERISTIC_ITEM_ID == Item.CHARACTERISTIC_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_CHARACTERISTIC_ITEM Item, ARTWORKEntities dc) { if (GetChkByCHARACTERISTIC_ITEM_ID(Item.CHARACTERISTIC_ITEM_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_CHARACTERISTIC_ITEM.Add(Item); dc.SaveChanges(); } else { var temp = GetByCHARACTERISTIC_ITEM_ID(Item.CHARACTERISTIC_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_CHARACTERISTIC_ITEM>().Local.FirstOrDefault(f => f.CHARACTERISTIC_ITEM_ID == Item.CHARACTERISTIC_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_CHARACTERISTIC_ITEM Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_CHARACTERISTIC_ITEM.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_CHARACTERISTIC_ITEM Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_CHARACTERISTIC_ITEM>().Local.FirstOrDefault(f => f.CHARACTERISTIC_ITEM_ID == Item.CHARACTERISTIC_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_CHARACTERISTIC_ITEM NewItem, SAP_M_CHARACTERISTIC_ITEM OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_CHARACTERISTIC_ITEM"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCHARACTERISTIC_ITEM_ID(int? CHARACTERISTIC_ITEM_ID, ARTWORKEntities dc) { var Item = GetByCHARACTERISTIC_ITEM_ID(CHARACTERISTIC_ITEM_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_COMPANY_SERVICE
{
    public static SAP_M_COMPANY GetByCOMPANY_ID(int? COMPANY_ID, ARTWORKEntities dc) { if (COMPANY_ID == null || COMPANY_ID == 0) return null; else return (from p in dc.SAP_M_COMPANY where p.COMPANY_ID == COMPANY_ID select p).FirstOrDefault(); }
    private static int? GetChkByCOMPANY_ID(int? COMPANY_ID, ARTWORKEntities dc) { if (COMPANY_ID == null || COMPANY_ID == 0) return null; else { var temp = (from p in dc.SAP_M_COMPANY where p.COMPANY_ID == COMPANY_ID select p.COMPANY_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_COMPANY> GetByItem(SAP_M_COMPANY Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_COMPANY>(); else return CriteriaBy((from p in dc.SAP_M_COMPANY select p), Item).ToList(); }
    private static IQueryable<SAP_M_COMPANY> CriteriaBy(IQueryable<SAP_M_COMPANY> q, SAP_M_COMPANY criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ID)) { doWork = true; q = (from r in q where r.COMPANY_ID == criteria.COMPANY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_CODE)) { doWork = true; q = (from r in q where r.COMPANY_CODE == criteria.COMPANY_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION == criteria.DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.COM_CODE)) { doWork = true; q = (from r in q where r.COM_CODE == criteria.COM_CODE select r); } if (!doWork) { q = (from r in q where r.COMPANY_ID == 0 select r); } return q; }
    public static List<SAP_M_COMPANY> GetByItemContain(SAP_M_COMPANY Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_COMPANY>(); else return CriteriaByContains((from p in dc.SAP_M_COMPANY select p), Item).ToList(); }
    private static IQueryable<SAP_M_COMPANY> CriteriaByContains(IQueryable<SAP_M_COMPANY> q, SAP_M_COMPANY criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ID)) { doWork = true; q = (from r in q where r.COMPANY_ID == criteria.COMPANY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_CODE)) { doWork = true; q = (from r in q where r.COMPANY_CODE.Contains(criteria.COMPANY_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION.Contains(criteria.DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COM_CODE)) { doWork = true; q = (from r in q where r.COM_CODE.Contains(criteria.COM_CODE) select r); } if (!doWork) { q = (from r in q where r.COMPANY_ID == 0 select r); } return q; }
    public static List<SAP_M_COMPANY> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_COMPANY select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_COMPANY Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCOMPANY_ID(Item.COMPANY_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_COMPANY.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCOMPANY_ID(Item.COMPANY_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_COMPANY>().Local.FirstOrDefault(f => f.COMPANY_ID == Item.COMPANY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_COMPANY Item, ARTWORKEntities dc) { if (GetChkByCOMPANY_ID(Item.COMPANY_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_COMPANY.Add(Item); dc.SaveChanges(); } else { var temp = GetByCOMPANY_ID(Item.COMPANY_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_COMPANY>().Local.FirstOrDefault(f => f.COMPANY_ID == Item.COMPANY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_COMPANY Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_COMPANY.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_COMPANY Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_COMPANY>().Local.FirstOrDefault(f => f.COMPANY_ID == Item.COMPANY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_COMPANY NewItem, SAP_M_COMPANY OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_COMPANY"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCOMPANY_ID(int? COMPANY_ID, ARTWORKEntities dc) { var Item = GetByCOMPANY_ID(COMPANY_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_COUNTRY_SERVICE
{
    public static SAP_M_COUNTRY GetByCOUNTRY_ID(int? COUNTRY_ID, ARTWORKEntities dc) { if (COUNTRY_ID == null || COUNTRY_ID == 0) return null; else return (from p in dc.SAP_M_COUNTRY where p.COUNTRY_ID == COUNTRY_ID select p).FirstOrDefault(); }
    private static int? GetChkByCOUNTRY_ID(int? COUNTRY_ID, ARTWORKEntities dc) { if (COUNTRY_ID == null || COUNTRY_ID == 0) return null; else { var temp = (from p in dc.SAP_M_COUNTRY where p.COUNTRY_ID == COUNTRY_ID select p.COUNTRY_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_COUNTRY> GetByItem(SAP_M_COUNTRY Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_COUNTRY>(); else return CriteriaBy((from p in dc.SAP_M_COUNTRY select p), Item).ToList(); }
    private static IQueryable<SAP_M_COUNTRY> CriteriaBy(IQueryable<SAP_M_COUNTRY> q, SAP_M_COUNTRY criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY_ID)) { doWork = true; q = (from r in q where r.COUNTRY_ID == criteria.COUNTRY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY_CODE)) { doWork = true; q = (from r in q where r.COUNTRY_CODE == criteria.COUNTRY_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.NAME)) { doWork = true; q = (from r in q where r.NAME == criteria.NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE == criteria.ZONE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.COUNTRY_ID == 0 select r); } return q; }
    public static List<SAP_M_COUNTRY> GetByItemContain(SAP_M_COUNTRY Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_COUNTRY>(); else return CriteriaByContains((from p in dc.SAP_M_COUNTRY select p), Item).ToList(); }
    private static IQueryable<SAP_M_COUNTRY> CriteriaByContains(IQueryable<SAP_M_COUNTRY> q, SAP_M_COUNTRY criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY_ID)) { doWork = true; q = (from r in q where r.COUNTRY_ID == criteria.COUNTRY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY_CODE)) { doWork = true; q = (from r in q where r.COUNTRY_CODE.Contains(criteria.COUNTRY_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NAME)) { doWork = true; q = (from r in q where r.NAME.Contains(criteria.NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE.Contains(criteria.ZONE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.COUNTRY_ID == 0 select r); } return q; }
    public static List<SAP_M_COUNTRY> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_COUNTRY select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_COUNTRY Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCOUNTRY_ID(Item.COUNTRY_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_COUNTRY.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCOUNTRY_ID(Item.COUNTRY_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_COUNTRY>().Local.FirstOrDefault(f => f.COUNTRY_ID == Item.COUNTRY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_COUNTRY Item, ARTWORKEntities dc) { if (GetChkByCOUNTRY_ID(Item.COUNTRY_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_COUNTRY.Add(Item); dc.SaveChanges(); } else { var temp = GetByCOUNTRY_ID(Item.COUNTRY_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_COUNTRY>().Local.FirstOrDefault(f => f.COUNTRY_ID == Item.COUNTRY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_COUNTRY Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_COUNTRY.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_COUNTRY Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_COUNTRY>().Local.FirstOrDefault(f => f.COUNTRY_ID == Item.COUNTRY_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_COUNTRY NewItem, SAP_M_COUNTRY OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_COUNTRY"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCOUNTRY_ID(int? COUNTRY_ID, ARTWORKEntities dc) { var Item = GetByCOUNTRY_ID(COUNTRY_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_LONG_TEXT_SERVICE
{
    public static SAP_M_LONG_TEXT GetByLONG_TEXT_ID(int? LONG_TEXT_ID, ARTWORKEntities dc) { if (LONG_TEXT_ID == null || LONG_TEXT_ID == 0) return null; else return (from p in dc.SAP_M_LONG_TEXT where p.LONG_TEXT_ID == LONG_TEXT_ID select p).FirstOrDefault(); }
    private static int? GetChkByLONG_TEXT_ID(int? LONG_TEXT_ID, ARTWORKEntities dc) { if (LONG_TEXT_ID == null || LONG_TEXT_ID == 0) return null; else { var temp = (from p in dc.SAP_M_LONG_TEXT where p.LONG_TEXT_ID == LONG_TEXT_ID select p.LONG_TEXT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_LONG_TEXT> GetByItem(SAP_M_LONG_TEXT Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_LONG_TEXT>(); else return CriteriaBy((from p in dc.SAP_M_LONG_TEXT select p), Item).ToList(); }
    private static IQueryable<SAP_M_LONG_TEXT> CriteriaBy(IQueryable<SAP_M_LONG_TEXT> q, SAP_M_LONG_TEXT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.LONG_TEXT_ID)) { doWork = true; q = (from r in q where r.LONG_TEXT_ID == criteria.LONG_TEXT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEXT_NAME)) { doWork = true; q = (from r in q where r.TEXT_NAME == criteria.TEXT_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEXT_ID)) { doWork = true; q = (from r in q where r.TEXT_ID == criteria.TEXT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEXT_LANGUAGE)) { doWork = true; q = (from r in q where r.TEXT_LANGUAGE == criteria.TEXT_LANGUAGE select r); } if (!CheckValue.EqualsDefaultValue(criteria.LINE_ID)) { doWork = true; q = (from r in q where r.LINE_ID == criteria.LINE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.LINE_TEXT)) { doWork = true; q = (from r in q where r.LINE_TEXT == criteria.LINE_TEXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.LONG_TEXT_ID == 0 select r); } return q; }
    public static List<SAP_M_LONG_TEXT> GetByItemContain(SAP_M_LONG_TEXT Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_LONG_TEXT>(); else return CriteriaByContains((from p in dc.SAP_M_LONG_TEXT select p), Item).ToList(); }
    private static IQueryable<SAP_M_LONG_TEXT> CriteriaByContains(IQueryable<SAP_M_LONG_TEXT> q, SAP_M_LONG_TEXT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.LONG_TEXT_ID)) { doWork = true; q = (from r in q where r.LONG_TEXT_ID == criteria.LONG_TEXT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEXT_NAME)) { doWork = true; q = (from r in q where r.TEXT_NAME.Contains(criteria.TEXT_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEXT_ID)) { doWork = true; q = (from r in q where r.TEXT_ID.Contains(criteria.TEXT_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TEXT_LANGUAGE)) { doWork = true; q = (from r in q where r.TEXT_LANGUAGE.Contains(criteria.TEXT_LANGUAGE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LINE_ID)) { doWork = true; q = (from r in q where r.LINE_ID.ToString().Contains(criteria.LINE_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LINE_TEXT)) { doWork = true; q = (from r in q where r.LINE_TEXT.Contains(criteria.LINE_TEXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.LONG_TEXT_ID == 0 select r); } return q; }
    public static List<SAP_M_LONG_TEXT> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_LONG_TEXT select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_LONG_TEXT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByLONG_TEXT_ID(Item.LONG_TEXT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_LONG_TEXT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByLONG_TEXT_ID(Item.LONG_TEXT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_LONG_TEXT>().Local.FirstOrDefault(f => f.LONG_TEXT_ID == Item.LONG_TEXT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_LONG_TEXT Item, ARTWORKEntities dc) { if (GetChkByLONG_TEXT_ID(Item.LONG_TEXT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_LONG_TEXT.Add(Item); dc.SaveChanges(); } else { var temp = GetByLONG_TEXT_ID(Item.LONG_TEXT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_LONG_TEXT>().Local.FirstOrDefault(f => f.LONG_TEXT_ID == Item.LONG_TEXT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_LONG_TEXT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_LONG_TEXT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_LONG_TEXT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_LONG_TEXT>().Local.FirstOrDefault(f => f.LONG_TEXT_ID == Item.LONG_TEXT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_LONG_TEXT NewItem, SAP_M_LONG_TEXT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_LONG_TEXT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByLONG_TEXT_ID(int? LONG_TEXT_ID, ARTWORKEntities dc) { var Item = GetByLONG_TEXT_ID(LONG_TEXT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_MATERIAL_CONVERSION_SERVICE
{
    public static SAP_M_MATERIAL_CONVERSION GetBySAP_M_MATERIAL_CONVERSION_ID(int? SAP_M_MATERIAL_CONVERSION_ID, ARTWORKEntities dc) { if (SAP_M_MATERIAL_CONVERSION_ID == null || SAP_M_MATERIAL_CONVERSION_ID == 0) return null; else return (from p in dc.SAP_M_MATERIAL_CONVERSION where p.SAP_M_MATERIAL_CONVERSION_ID == SAP_M_MATERIAL_CONVERSION_ID select p).FirstOrDefault(); }
    private static int? GetChkBySAP_M_MATERIAL_CONVERSION_ID(int? SAP_M_MATERIAL_CONVERSION_ID, ARTWORKEntities dc) { if (SAP_M_MATERIAL_CONVERSION_ID == null || SAP_M_MATERIAL_CONVERSION_ID == 0) return null; else { var temp = (from p in dc.SAP_M_MATERIAL_CONVERSION where p.SAP_M_MATERIAL_CONVERSION_ID == SAP_M_MATERIAL_CONVERSION_ID select p.SAP_M_MATERIAL_CONVERSION_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_MATERIAL_CONVERSION> GetByItem(SAP_M_MATERIAL_CONVERSION Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_MATERIAL_CONVERSION>(); else return CriteriaBy((from p in dc.SAP_M_MATERIAL_CONVERSION select p), Item).ToList(); }
    private static IQueryable<SAP_M_MATERIAL_CONVERSION> CriteriaBy(IQueryable<SAP_M_MATERIAL_CONVERSION> q, SAP_M_MATERIAL_CONVERSION criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.SAP_M_MATERIAL_CONVERSION_ID)) { doWork = true; q = (from r in q where r.SAP_M_MATERIAL_CONVERSION_ID == criteria.SAP_M_MATERIAL_CONVERSION_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO == criteria.MATERIAL_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHAR_NAME)) { doWork = true; q = (from r in q where r.CHAR_NAME == criteria.CHAR_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHAR_VALUE)) { doWork = true; q = (from r in q where r.CHAR_VALUE == criteria.CHAR_VALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHAR_DESCRIPTION)) { doWork = true; q = (from r in q where r.CHAR_DESCRIPTION == criteria.CHAR_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.SAP_M_MATERIAL_CONVERSION_ID == 0 select r); } return q; }
    public static List<SAP_M_MATERIAL_CONVERSION> GetByItemContain(SAP_M_MATERIAL_CONVERSION Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_MATERIAL_CONVERSION>(); else return CriteriaByContains((from p in dc.SAP_M_MATERIAL_CONVERSION select p), Item).ToList(); }
    private static IQueryable<SAP_M_MATERIAL_CONVERSION> CriteriaByContains(IQueryable<SAP_M_MATERIAL_CONVERSION> q, SAP_M_MATERIAL_CONVERSION criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.SAP_M_MATERIAL_CONVERSION_ID)) { doWork = true; q = (from r in q where r.SAP_M_MATERIAL_CONVERSION_ID == criteria.SAP_M_MATERIAL_CONVERSION_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NO)) { doWork = true; q = (from r in q where r.MATERIAL_NO.Contains(criteria.MATERIAL_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHAR_NAME)) { doWork = true; q = (from r in q where r.CHAR_NAME.Contains(criteria.CHAR_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHAR_VALUE)) { doWork = true; q = (from r in q where r.CHAR_VALUE.Contains(criteria.CHAR_VALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHAR_DESCRIPTION)) { doWork = true; q = (from r in q where r.CHAR_DESCRIPTION.Contains(criteria.CHAR_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.SAP_M_MATERIAL_CONVERSION_ID == 0 select r); } return q; }
    public static List<SAP_M_MATERIAL_CONVERSION> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_MATERIAL_CONVERSION select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_MATERIAL_CONVERSION Item, ARTWORKEntities dc) { string Action = ""; if (GetChkBySAP_M_MATERIAL_CONVERSION_ID(Item.SAP_M_MATERIAL_CONVERSION_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_MATERIAL_CONVERSION.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetBySAP_M_MATERIAL_CONVERSION_ID(Item.SAP_M_MATERIAL_CONVERSION_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_MATERIAL_CONVERSION>().Local.FirstOrDefault(f => f.SAP_M_MATERIAL_CONVERSION_ID == Item.SAP_M_MATERIAL_CONVERSION_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_MATERIAL_CONVERSION Item, ARTWORKEntities dc) { if (GetChkBySAP_M_MATERIAL_CONVERSION_ID(Item.SAP_M_MATERIAL_CONVERSION_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_MATERIAL_CONVERSION.Add(Item); dc.SaveChanges(); } else { var temp = GetBySAP_M_MATERIAL_CONVERSION_ID(Item.SAP_M_MATERIAL_CONVERSION_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_MATERIAL_CONVERSION>().Local.FirstOrDefault(f => f.SAP_M_MATERIAL_CONVERSION_ID == Item.SAP_M_MATERIAL_CONVERSION_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_MATERIAL_CONVERSION Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_MATERIAL_CONVERSION.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_MATERIAL_CONVERSION Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_MATERIAL_CONVERSION>().Local.FirstOrDefault(f => f.SAP_M_MATERIAL_CONVERSION_ID == Item.SAP_M_MATERIAL_CONVERSION_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_MATERIAL_CONVERSION NewItem, SAP_M_MATERIAL_CONVERSION OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_MATERIAL_CONVERSION"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteBySAP_M_MATERIAL_CONVERSION_ID(int? SAP_M_MATERIAL_CONVERSION_ID, ARTWORKEntities dc) { var Item = GetBySAP_M_MATERIAL_CONVERSION_ID(SAP_M_MATERIAL_CONVERSION_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_ORDER_BOM_SERVICE
{
    public static SAP_M_ORDER_BOM GetByORDER_BOM_ID(int? ORDER_BOM_ID, ARTWORKEntities dc) { if (ORDER_BOM_ID == null || ORDER_BOM_ID == 0) return null; else return (from p in dc.SAP_M_ORDER_BOM where p.ORDER_BOM_ID == ORDER_BOM_ID select p).FirstOrDefault(); }
    private static int? GetChkByORDER_BOM_ID(int? ORDER_BOM_ID, ARTWORKEntities dc) { if (ORDER_BOM_ID == null || ORDER_BOM_ID == 0) return null; else { var temp = (from p in dc.SAP_M_ORDER_BOM where p.ORDER_BOM_ID == ORDER_BOM_ID select p.ORDER_BOM_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_ORDER_BOM> GetByItem(SAP_M_ORDER_BOM Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_ORDER_BOM>(); else return CriteriaBy((from p in dc.SAP_M_ORDER_BOM select p), Item).ToList(); }
    private static IQueryable<SAP_M_ORDER_BOM> CriteriaBy(IQueryable<SAP_M_ORDER_BOM> q, SAP_M_ORDER_BOM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ORDER_BOM_ID)) { doWork = true; q = (from r in q where r.ORDER_BOM_ID == criteria.ORDER_BOM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHANGE_TYPE)) { doWork = true; q = (from r in q where r.CHANGE_TYPE == criteria.CHANGE_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE)) { doWork = true; q = (from r in q where r.DATE == criteria.DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TIME)) { doWork = true; q = (from r in q where r.TIME == criteria.TIME select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTER)) { doWork = true; q = (from r in q where r.COUNTER == criteria.COUNTER select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL)) { doWork = true; q = (from r in q where r.MATERIAL == criteria.MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PARTY)) { doWork = true; q = (from r in q where r.SOLD_TO_PARTY == criteria.SOLD_TO_PARTY select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PARTY)) { doWork = true; q = (from r in q where r.SHIP_TO_PARTY == criteria.SHIP_TO_PARTY select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID == criteria.ADDITIONAL_BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROUTE)) { doWork = true; q = (from r in q where r.ROUTE == criteria.ROUTE select r); } if (!CheckValue.EqualsDefaultValue(criteria.INTRANSIT_PORT)) { doWork = true; q = (from r in q where r.INTRANSIT_PORT == criteria.INTRANSIT_PORT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORGANIZATION)) { doWork = true; q = (from r in q where r.SALES_ORGANIZATION == criteria.SALES_ORGANIZATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NUMBER)) { doWork = true; q = (from r in q where r.MATERIAL_NUMBER == criteria.MATERIAL_NUMBER select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY_KEY)) { doWork = true; q = (from r in q where r.COUNTRY_KEY == criteria.COUNTRY_KEY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_QUANTITY)) { doWork = true; q = (from r in q where r.PACKAGING_QUANTITY == criteria.PACKAGING_QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_UNIT)) { doWork = true; q = (from r in q where r.PACKAGING_UNIT == criteria.PACKAGING_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.FG_QUANTITY)) { doWork = true; q = (from r in q where r.FG_QUANTITY == criteria.FG_QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.FG_UNIT)) { doWork = true; q = (from r in q where r.FG_UNIT == criteria.FG_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.START_DATE)) { doWork = true; q = (from r in q where r.START_DATE == criteria.START_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.END_DATE)) { doWork = true; q = (from r in q where r.END_DATE == criteria.END_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.WASTE_PERCENT)) { doWork = true; q = (from r in q where r.WASTE_PERCENT == criteria.WASTE_PERCENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTER_REFERENCE)) { doWork = true; q = (from r in q where r.COUNTER_REFERENCE == criteria.COUNTER_REFERENCE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ORDER_BOM_ID == 0 select r); } return q; }
    public static List<SAP_M_ORDER_BOM> GetByItemContain(SAP_M_ORDER_BOM Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_ORDER_BOM>(); else return CriteriaByContains((from p in dc.SAP_M_ORDER_BOM select p), Item).ToList(); }
    private static IQueryable<SAP_M_ORDER_BOM> CriteriaByContains(IQueryable<SAP_M_ORDER_BOM> q, SAP_M_ORDER_BOM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ORDER_BOM_ID)) { doWork = true; q = (from r in q where r.ORDER_BOM_ID == criteria.ORDER_BOM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHANGE_TYPE)) { doWork = true; q = (from r in q where r.CHANGE_TYPE.Contains(criteria.CHANGE_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE)) { doWork = true; q = (from r in q where r.DATE.Contains(criteria.DATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TIME)) { doWork = true; q = (from r in q where r.TIME.Contains(criteria.TIME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL)) { doWork = true; q = (from r in q where r.MATERIAL.Contains(criteria.MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PARTY)) { doWork = true; q = (from r in q where r.SOLD_TO_PARTY.Contains(criteria.SOLD_TO_PARTY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PARTY)) { doWork = true; q = (from r in q where r.SHIP_TO_PARTY.Contains(criteria.SHIP_TO_PARTY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID.Contains(criteria.BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID.Contains(criteria.ADDITIONAL_BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROUTE)) { doWork = true; q = (from r in q where r.ROUTE.Contains(criteria.ROUTE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INTRANSIT_PORT)) { doWork = true; q = (from r in q where r.INTRANSIT_PORT.Contains(criteria.INTRANSIT_PORT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORGANIZATION)) { doWork = true; q = (from r in q where r.SALES_ORGANIZATION.Contains(criteria.SALES_ORGANIZATION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NUMBER)) { doWork = true; q = (from r in q where r.MATERIAL_NUMBER.Contains(criteria.MATERIAL_NUMBER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY_KEY)) { doWork = true; q = (from r in q where r.COUNTRY_KEY.Contains(criteria.COUNTRY_KEY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_UNIT)) { doWork = true; q = (from r in q where r.PACKAGING_UNIT.Contains(criteria.PACKAGING_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FG_UNIT)) { doWork = true; q = (from r in q where r.FG_UNIT.Contains(criteria.FG_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ORDER_BOM_ID == 0 select r); } return q; }
    public static List<SAP_M_ORDER_BOM> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_ORDER_BOM select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_ORDER_BOM Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByORDER_BOM_ID(Item.ORDER_BOM_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_ORDER_BOM.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByORDER_BOM_ID(Item.ORDER_BOM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_ORDER_BOM>().Local.FirstOrDefault(f => f.ORDER_BOM_ID == Item.ORDER_BOM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_ORDER_BOM Item, ARTWORKEntities dc) { if (GetChkByORDER_BOM_ID(Item.ORDER_BOM_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_ORDER_BOM.Add(Item); dc.SaveChanges(); } else { var temp = GetByORDER_BOM_ID(Item.ORDER_BOM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_ORDER_BOM>().Local.FirstOrDefault(f => f.ORDER_BOM_ID == Item.ORDER_BOM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_ORDER_BOM Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_ORDER_BOM.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_ORDER_BOM Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_ORDER_BOM>().Local.FirstOrDefault(f => f.ORDER_BOM_ID == Item.ORDER_BOM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_ORDER_BOM NewItem, SAP_M_ORDER_BOM OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_ORDER_BOM"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByORDER_BOM_ID(int? ORDER_BOM_ID, ARTWORKEntities dc) { var Item = GetByORDER_BOM_ID(ORDER_BOM_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_PLANT_SERVICE
{
    public static SAP_M_PLANT GetByPLANT_ID(int? PLANT_ID, ARTWORKEntities dc) { if (PLANT_ID == null || PLANT_ID == 0) return null; else return (from p in dc.SAP_M_PLANT where p.PLANT_ID == PLANT_ID select p).FirstOrDefault(); }
    private static int? GetChkByPLANT_ID(int? PLANT_ID, ARTWORKEntities dc) { if (PLANT_ID == null || PLANT_ID == 0) return null; else { var temp = (from p in dc.SAP_M_PLANT where p.PLANT_ID == PLANT_ID select p.PLANT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_PLANT> GetByItem(SAP_M_PLANT Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PLANT>(); else return CriteriaBy((from p in dc.SAP_M_PLANT select p), Item).ToList(); }
    private static IQueryable<SAP_M_PLANT> CriteriaBy(IQueryable<SAP_M_PLANT> q, SAP_M_PLANT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PLANT_ID)) { doWork = true; q = (from r in q where r.PLANT_ID == criteria.PLANT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.NAME)) { doWork = true; q = (from r in q where r.NAME == criteria.NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.PLANT_ID == 0 select r); } return q; }
    public static List<SAP_M_PLANT> GetByItemContain(SAP_M_PLANT Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PLANT>(); else return CriteriaByContains((from p in dc.SAP_M_PLANT select p), Item).ToList(); }
    private static IQueryable<SAP_M_PLANT> CriteriaByContains(IQueryable<SAP_M_PLANT> q, SAP_M_PLANT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PLANT_ID)) { doWork = true; q = (from r in q where r.PLANT_ID == criteria.PLANT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NAME)) { doWork = true; q = (from r in q where r.NAME.Contains(criteria.NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.PLANT_ID == 0 select r); } return q; }
    public static List<SAP_M_PLANT> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_PLANT select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_PLANT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPLANT_ID(Item.PLANT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PLANT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPLANT_ID(Item.PLANT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PLANT>().Local.FirstOrDefault(f => f.PLANT_ID == Item.PLANT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_PLANT Item, ARTWORKEntities dc) { if (GetChkByPLANT_ID(Item.PLANT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PLANT.Add(Item); dc.SaveChanges(); } else { var temp = GetByPLANT_ID(Item.PLANT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PLANT>().Local.FirstOrDefault(f => f.PLANT_ID == Item.PLANT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_PLANT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PLANT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_PLANT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PLANT>().Local.FirstOrDefault(f => f.PLANT_ID == Item.PLANT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_PLANT NewItem, SAP_M_PLANT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_PLANT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPLANT_ID(int? PLANT_ID, ARTWORKEntities dc) { var Item = GetByPLANT_ID(PLANT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_PO_COMPLETE_SO_HEADER_SERVICE
{
    public static SAP_M_PO_COMPLETE_SO_HEADER GetByPO_COMPLETE_SO_HEADER_ID(int? PO_COMPLETE_SO_HEADER_ID, ARTWORKEntities dc) { if (PO_COMPLETE_SO_HEADER_ID == null || PO_COMPLETE_SO_HEADER_ID == 0) return null; else return (from p in dc.SAP_M_PO_COMPLETE_SO_HEADER where p.PO_COMPLETE_SO_HEADER_ID == PO_COMPLETE_SO_HEADER_ID select p).FirstOrDefault(); }
    private static int? GetChkByPO_COMPLETE_SO_HEADER_ID(int? PO_COMPLETE_SO_HEADER_ID, ARTWORKEntities dc) { if (PO_COMPLETE_SO_HEADER_ID == null || PO_COMPLETE_SO_HEADER_ID == 0) return null; else { var temp = (from p in dc.SAP_M_PO_COMPLETE_SO_HEADER where p.PO_COMPLETE_SO_HEADER_ID == PO_COMPLETE_SO_HEADER_ID select p.PO_COMPLETE_SO_HEADER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_PO_COMPLETE_SO_HEADER> GetByItem(SAP_M_PO_COMPLETE_SO_HEADER Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_COMPLETE_SO_HEADER>(); else return CriteriaBy((from p in dc.SAP_M_PO_COMPLETE_SO_HEADER select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_COMPLETE_SO_HEADER> CriteriaBy(IQueryable<SAP_M_PO_COMPLETE_SO_HEADER> q, SAP_M_PO_COMPLETE_SO_HEADER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == criteria.PO_COMPLETE_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO == criteria.SOLD_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME == criteria.SOLD_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_SHIPMENT_DATE)) { doWork = true; q = (from r in q where r.LAST_SHIPMENT_DATE == criteria.LAST_SHIPMENT_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE_1_2)) { doWork = true; q = (from r in q where r.DATE_1_2 == criteria.DATE_1_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_ON)) { doWork = true; q = (from r in q where r.CREATE_ON == criteria.CREATE_ON select r); } if (!CheckValue.EqualsDefaultValue(criteria.RDD)) { doWork = true; q = (from r in q where r.RDD == criteria.RDD select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM == criteria.PAYMENT_TERM select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO == criteria.LC_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXPIRED_DATE)) { doWork = true; q = (from r in q where r.EXPIRED_DATE == criteria.EXPIRED_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO == criteria.SHIP_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME == criteria.SHIP_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO == criteria.SOLD_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO == criteria.SHIP_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP == criteria.SALES_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO == criteria.MARKETING_CO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME == criteria.MARKETING_CO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING == criteria.MARKETING select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME == criteria.MARKETING_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP == criteria.MARKETING_ORDER_SAP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME == criteria.MARKETING_ORDER_SAP_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG == criteria.SALES_ORG select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL == criteria.DISTRIBUTION_CHANNEL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION == criteria.DIVITION select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE == criteria.SALES_ORDER_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1 == criteria.HEADER_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2 == criteria.HEADER_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3 == criteria.HEADER_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_MIGRATION)) { doWork = true; q = (from r in q where r.IS_MIGRATION == criteria.IS_MIGRATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ASSIGN)) { doWork = true; q = (from r in q where r.IS_ASSIGN == criteria.IS_ASSIGN select r); } if (!doWork) { q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_COMPLETE_SO_HEADER> GetByItemContain(SAP_M_PO_COMPLETE_SO_HEADER Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_COMPLETE_SO_HEADER>(); else return CriteriaByContains((from p in dc.SAP_M_PO_COMPLETE_SO_HEADER select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_COMPLETE_SO_HEADER> CriteriaByContains(IQueryable<SAP_M_PO_COMPLETE_SO_HEADER> q, SAP_M_PO_COMPLETE_SO_HEADER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == criteria.PO_COMPLETE_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO.Contains(criteria.SOLD_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME.Contains(criteria.SOLD_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM.Contains(criteria.PAYMENT_TERM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO.Contains(criteria.LC_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO.Contains(criteria.SHIP_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME.Contains(criteria.SHIP_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO.Contains(criteria.SOLD_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO.Contains(criteria.SHIP_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP.Contains(criteria.SALES_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO.Contains(criteria.MARKETING_CO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME.Contains(criteria.MARKETING_CO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING.Contains(criteria.MARKETING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME.Contains(criteria.MARKETING_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP.Contains(criteria.MARKETING_ORDER_SAP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME.Contains(criteria.MARKETING_ORDER_SAP_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG.Contains(criteria.SALES_ORG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL.Contains(criteria.DISTRIBUTION_CHANNEL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION.Contains(criteria.DIVITION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE.Contains(criteria.SALES_ORDER_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1.Contains(criteria.HEADER_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2.Contains(criteria.HEADER_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3.Contains(criteria.HEADER_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_MIGRATION)) { doWork = true; q = (from r in q where r.IS_MIGRATION.Contains(criteria.IS_MIGRATION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ASSIGN)) { doWork = true; q = (from r in q where r.IS_ASSIGN.Contains(criteria.IS_ASSIGN) select r); } if (!doWork) { q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_COMPLETE_SO_HEADER> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_PO_COMPLETE_SO_HEADER select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_PO_COMPLETE_SO_HEADER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPO_COMPLETE_SO_HEADER_ID(Item.PO_COMPLETE_SO_HEADER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_HEADER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPO_COMPLETE_SO_HEADER_ID(Item.PO_COMPLETE_SO_HEADER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_HEADER>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_HEADER_ID == Item.PO_COMPLETE_SO_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_PO_COMPLETE_SO_HEADER Item, ARTWORKEntities dc) { if (GetChkByPO_COMPLETE_SO_HEADER_ID(Item.PO_COMPLETE_SO_HEADER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_HEADER.Add(Item); dc.SaveChanges(); } else { var temp = GetByPO_COMPLETE_SO_HEADER_ID(Item.PO_COMPLETE_SO_HEADER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_HEADER>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_HEADER_ID == Item.PO_COMPLETE_SO_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_PO_COMPLETE_SO_HEADER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_HEADER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_PO_COMPLETE_SO_HEADER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_HEADER>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_HEADER_ID == Item.PO_COMPLETE_SO_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_PO_COMPLETE_SO_HEADER NewItem, SAP_M_PO_COMPLETE_SO_HEADER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_PO_COMPLETE_SO_HEADER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPO_COMPLETE_SO_HEADER_ID(int? PO_COMPLETE_SO_HEADER_ID, ARTWORKEntities dc) { var Item = GetByPO_COMPLETE_SO_HEADER_ID(PO_COMPLETE_SO_HEADER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_PO_COMPLETE_SO_HEADER_TMP_SERVICE
{
    public static SAP_M_PO_COMPLETE_SO_HEADER_TMP GetByPO_COMPLETE_SO_HEADER_ID(int? PO_COMPLETE_SO_HEADER_ID, ARTWORKEntities dc) { if (PO_COMPLETE_SO_HEADER_ID == null || PO_COMPLETE_SO_HEADER_ID == 0) return null; else return (from p in dc.SAP_M_PO_COMPLETE_SO_HEADER_TMP where p.PO_COMPLETE_SO_HEADER_ID == PO_COMPLETE_SO_HEADER_ID select p).FirstOrDefault(); }
    private static int? GetChkByPO_COMPLETE_SO_HEADER_ID(int? PO_COMPLETE_SO_HEADER_ID, ARTWORKEntities dc) { if (PO_COMPLETE_SO_HEADER_ID == null || PO_COMPLETE_SO_HEADER_ID == 0) return null; else { var temp = (from p in dc.SAP_M_PO_COMPLETE_SO_HEADER_TMP where p.PO_COMPLETE_SO_HEADER_ID == PO_COMPLETE_SO_HEADER_ID select p.PO_COMPLETE_SO_HEADER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_PO_COMPLETE_SO_HEADER_TMP> GetByItem(SAP_M_PO_COMPLETE_SO_HEADER_TMP Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_COMPLETE_SO_HEADER_TMP>(); else return CriteriaBy((from p in dc.SAP_M_PO_COMPLETE_SO_HEADER_TMP select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_COMPLETE_SO_HEADER_TMP> CriteriaBy(IQueryable<SAP_M_PO_COMPLETE_SO_HEADER_TMP> q, SAP_M_PO_COMPLETE_SO_HEADER_TMP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == criteria.PO_COMPLETE_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO == criteria.SOLD_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME == criteria.SOLD_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_SHIPMENT_DATE)) { doWork = true; q = (from r in q where r.LAST_SHIPMENT_DATE == criteria.LAST_SHIPMENT_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE_1_2)) { doWork = true; q = (from r in q where r.DATE_1_2 == criteria.DATE_1_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_ON)) { doWork = true; q = (from r in q where r.CREATE_ON == criteria.CREATE_ON select r); } if (!CheckValue.EqualsDefaultValue(criteria.RDD)) { doWork = true; q = (from r in q where r.RDD == criteria.RDD select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM == criteria.PAYMENT_TERM select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO == criteria.LC_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXPIRED_DATE)) { doWork = true; q = (from r in q where r.EXPIRED_DATE == criteria.EXPIRED_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO == criteria.SHIP_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME == criteria.SHIP_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO == criteria.SOLD_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO == criteria.SHIP_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP == criteria.SALES_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO == criteria.MARKETING_CO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME == criteria.MARKETING_CO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING == criteria.MARKETING select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME == criteria.MARKETING_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP == criteria.MARKETING_ORDER_SAP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME == criteria.MARKETING_ORDER_SAP_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG == criteria.SALES_ORG select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL == criteria.DISTRIBUTION_CHANNEL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION == criteria.DIVITION select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE == criteria.SALES_ORDER_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1 == criteria.HEADER_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2 == criteria.HEADER_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3 == criteria.HEADER_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_MIGRATION)) { doWork = true; q = (from r in q where r.IS_MIGRATION == criteria.IS_MIGRATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ASSIGN)) { doWork = true; q = (from r in q where r.IS_ASSIGN == criteria.IS_ASSIGN select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_COMPLETE_SO_HEADER_TMP> GetByItemContain(SAP_M_PO_COMPLETE_SO_HEADER_TMP Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_COMPLETE_SO_HEADER_TMP>(); else return CriteriaByContains((from p in dc.SAP_M_PO_COMPLETE_SO_HEADER_TMP select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_COMPLETE_SO_HEADER_TMP> CriteriaByContains(IQueryable<SAP_M_PO_COMPLETE_SO_HEADER_TMP> q, SAP_M_PO_COMPLETE_SO_HEADER_TMP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == criteria.PO_COMPLETE_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO.Contains(criteria.SOLD_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME.Contains(criteria.SOLD_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM.Contains(criteria.PAYMENT_TERM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO.Contains(criteria.LC_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO.Contains(criteria.SHIP_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME.Contains(criteria.SHIP_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO.Contains(criteria.SOLD_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO.Contains(criteria.SHIP_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP.Contains(criteria.SALES_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO.Contains(criteria.MARKETING_CO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME.Contains(criteria.MARKETING_CO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING.Contains(criteria.MARKETING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME.Contains(criteria.MARKETING_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP.Contains(criteria.MARKETING_ORDER_SAP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME.Contains(criteria.MARKETING_ORDER_SAP_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG.Contains(criteria.SALES_ORG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL.Contains(criteria.DISTRIBUTION_CHANNEL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION.Contains(criteria.DIVITION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE.Contains(criteria.SALES_ORDER_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1.Contains(criteria.HEADER_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2.Contains(criteria.HEADER_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3.Contains(criteria.HEADER_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_MIGRATION)) { doWork = true; q = (from r in q where r.IS_MIGRATION.Contains(criteria.IS_MIGRATION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ASSIGN)) { doWork = true; q = (from r in q where r.IS_ASSIGN.Contains(criteria.IS_ASSIGN) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_COMPLETE_SO_HEADER_TMP> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_PO_COMPLETE_SO_HEADER_TMP select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_PO_COMPLETE_SO_HEADER_TMP Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPO_COMPLETE_SO_HEADER_ID(Item.PO_COMPLETE_SO_HEADER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_HEADER_TMP.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPO_COMPLETE_SO_HEADER_ID(Item.PO_COMPLETE_SO_HEADER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_HEADER_TMP>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_HEADER_ID == Item.PO_COMPLETE_SO_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_PO_COMPLETE_SO_HEADER_TMP Item, ARTWORKEntities dc) { if (GetChkByPO_COMPLETE_SO_HEADER_ID(Item.PO_COMPLETE_SO_HEADER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_HEADER_TMP.Add(Item); dc.SaveChanges(); } else { var temp = GetByPO_COMPLETE_SO_HEADER_ID(Item.PO_COMPLETE_SO_HEADER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_HEADER_TMP>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_HEADER_ID == Item.PO_COMPLETE_SO_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_PO_COMPLETE_SO_HEADER_TMP Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_HEADER_TMP.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_PO_COMPLETE_SO_HEADER_TMP Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_HEADER_TMP>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_HEADER_ID == Item.PO_COMPLETE_SO_HEADER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_PO_COMPLETE_SO_HEADER_TMP NewItem, SAP_M_PO_COMPLETE_SO_HEADER_TMP OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_PO_COMPLETE_SO_HEADER_TMP"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPO_COMPLETE_SO_HEADER_ID(int? PO_COMPLETE_SO_HEADER_ID, ARTWORKEntities dc) { var Item = GetByPO_COMPLETE_SO_HEADER_ID(PO_COMPLETE_SO_HEADER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_PO_COMPLETE_SO_ITEM_SERVICE
{
    public static SAP_M_PO_COMPLETE_SO_ITEM GetByPO_COMPLETE_SO_ITEM_ID(int? PO_COMPLETE_SO_ITEM_ID, ARTWORKEntities dc) { if (PO_COMPLETE_SO_ITEM_ID == null || PO_COMPLETE_SO_ITEM_ID == 0) return null; else return (from p in dc.SAP_M_PO_COMPLETE_SO_ITEM where p.PO_COMPLETE_SO_ITEM_ID == PO_COMPLETE_SO_ITEM_ID select p).FirstOrDefault(); }
    private static int? GetChkByPO_COMPLETE_SO_ITEM_ID(int? PO_COMPLETE_SO_ITEM_ID, ARTWORKEntities dc) { if (PO_COMPLETE_SO_ITEM_ID == null || PO_COMPLETE_SO_ITEM_ID == 0) return null; else { var temp = (from p in dc.SAP_M_PO_COMPLETE_SO_ITEM where p.PO_COMPLETE_SO_ITEM_ID == PO_COMPLETE_SO_ITEM_ID select p.PO_COMPLETE_SO_ITEM_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_PO_COMPLETE_SO_ITEM> GetByItem(SAP_M_PO_COMPLETE_SO_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_COMPLETE_SO_ITEM>(); else return CriteriaBy((from p in dc.SAP_M_PO_COMPLETE_SO_ITEM select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_COMPLETE_SO_ITEM> CriteriaBy(IQueryable<SAP_M_PO_COMPLETE_SO_ITEM> q, SAP_M_PO_COMPLETE_SO_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == criteria.PO_COMPLETE_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == criteria.PO_COMPLETE_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM)) { doWork = true; q = (from r in q where r.ITEM == criteria.ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION == criteria.MATERIAL_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_QTY)) { doWork = true; q = (from r in q where r.ORDER_QTY == criteria.ORDER_QTY select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT == criteria.ORDER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_FROM)) { doWork = true; q = (from r in q where r.ETD_DATE_FROM == criteria.ETD_DATE_FROM select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_TO)) { doWork = true; q = (from r in q where r.ETD_DATE_TO == criteria.ETD_DATE_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE == criteria.OLD_MATERIAL_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE == criteria.PACK_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT == criteria.VALUME_PER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT == criteria.VALUME_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT == criteria.SIZE_DRAIN_WT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO == criteria.PROD_INSP_MEMO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE == criteria.REJECTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION == criteria.REJECTION_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT == criteria.PORT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA == criteria.VIA select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO == criteria.IN_TRANSIT_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION == criteria.BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID == criteria.ADDITIONAL_BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION == criteria.ADDITIONAL_BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT == criteria.PRODUCTION_PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE == criteria.ZONE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY == criteria.COUNTRY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY == criteria.PRODUCTION_HIERARCHY select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER == criteria.MRP_CONTROLLER select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK == criteria.STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1 == criteria.ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2 == criteria.ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3 == criteria.ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ASSIGN)) { doWork = true; q = (from r in q where r.IS_ASSIGN == criteria.IS_ASSIGN select r); } if (!doWork) { q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_COMPLETE_SO_ITEM> GetByItemContain(SAP_M_PO_COMPLETE_SO_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_COMPLETE_SO_ITEM>(); else return CriteriaByContains((from p in dc.SAP_M_PO_COMPLETE_SO_ITEM select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_COMPLETE_SO_ITEM> CriteriaByContains(IQueryable<SAP_M_PO_COMPLETE_SO_ITEM> q, SAP_M_PO_COMPLETE_SO_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == criteria.PO_COMPLETE_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID.ToString().Contains(criteria.PO_COMPLETE_SO_HEADER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION.Contains(criteria.MATERIAL_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT.Contains(criteria.ORDER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE.Contains(criteria.OLD_MATERIAL_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE.Contains(criteria.PACK_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT.Contains(criteria.VALUME_PER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT.Contains(criteria.VALUME_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT.Contains(criteria.SIZE_DRAIN_WT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO.Contains(criteria.PROD_INSP_MEMO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE.Contains(criteria.REJECTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION.Contains(criteria.REJECTION_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT.Contains(criteria.PORT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA.Contains(criteria.VIA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO.Contains(criteria.IN_TRANSIT_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID.Contains(criteria.BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION.Contains(criteria.BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID.Contains(criteria.ADDITIONAL_BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION.Contains(criteria.ADDITIONAL_BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT.Contains(criteria.PRODUCTION_PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE.Contains(criteria.ZONE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY.Contains(criteria.COUNTRY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY.Contains(criteria.PRODUCTION_HIERARCHY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER.Contains(criteria.MRP_CONTROLLER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK.Contains(criteria.STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1.Contains(criteria.ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2.Contains(criteria.ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3.Contains(criteria.ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ASSIGN)) { doWork = true; q = (from r in q where r.IS_ASSIGN.Contains(criteria.IS_ASSIGN) select r); } if (!doWork) { q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_COMPLETE_SO_ITEM> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_PO_COMPLETE_SO_ITEM select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_PO_COMPLETE_SO_ITEM Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPO_COMPLETE_SO_ITEM_ID(Item.PO_COMPLETE_SO_ITEM_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_ITEM.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPO_COMPLETE_SO_ITEM_ID(Item.PO_COMPLETE_SO_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_ITEM>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_ITEM_ID == Item.PO_COMPLETE_SO_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_PO_COMPLETE_SO_ITEM Item, ARTWORKEntities dc) { if (GetChkByPO_COMPLETE_SO_ITEM_ID(Item.PO_COMPLETE_SO_ITEM_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_ITEM.Add(Item); dc.SaveChanges(); } else { var temp = GetByPO_COMPLETE_SO_ITEM_ID(Item.PO_COMPLETE_SO_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_ITEM>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_ITEM_ID == Item.PO_COMPLETE_SO_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_PO_COMPLETE_SO_ITEM Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_ITEM.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_PO_COMPLETE_SO_ITEM Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_ITEM>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_ITEM_ID == Item.PO_COMPLETE_SO_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_PO_COMPLETE_SO_ITEM NewItem, SAP_M_PO_COMPLETE_SO_ITEM OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_PO_COMPLETE_SO_ITEM"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPO_COMPLETE_SO_ITEM_ID(int? PO_COMPLETE_SO_ITEM_ID, ARTWORKEntities dc) { var Item = GetByPO_COMPLETE_SO_ITEM_ID(PO_COMPLETE_SO_ITEM_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_SERVICE
{
    public static SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT GetByPO_COMPLETE_SO_ITEM_COMPONENT_ID(int? PO_COMPLETE_SO_ITEM_COMPONENT_ID, ARTWORKEntities dc) { if (PO_COMPLETE_SO_ITEM_COMPONENT_ID == null || PO_COMPLETE_SO_ITEM_COMPONENT_ID == 0) return null; else return (from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT where p.PO_COMPLETE_SO_ITEM_COMPONENT_ID == PO_COMPLETE_SO_ITEM_COMPONENT_ID select p).FirstOrDefault(); }
    private static int? GetChkByPO_COMPLETE_SO_ITEM_COMPONENT_ID(int? PO_COMPLETE_SO_ITEM_COMPONENT_ID, ARTWORKEntities dc) { if (PO_COMPLETE_SO_ITEM_COMPONENT_ID == null || PO_COMPLETE_SO_ITEM_COMPONENT_ID == 0) return null; else { var temp = (from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT where p.PO_COMPLETE_SO_ITEM_COMPONENT_ID == PO_COMPLETE_SO_ITEM_COMPONENT_ID select p.PO_COMPLETE_SO_ITEM_COMPONENT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT> GetByItem(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT>(); else return CriteriaBy((from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT> CriteriaBy(IQueryable<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT> q, SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_COMPONENT_ID == criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == criteria.PO_COMPLETE_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM == criteria.COMPONENT_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL == criteria.COMPONENT_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION == criteria.DECRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.QUANTITY)) { doWork = true; q = (from r in q where r.QUANTITY == criteria.QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT == criteria.UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK == criteria.STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1 == criteria.BOM_ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2 == criteria.BOM_ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3 == criteria.BOM_ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ASSIGN)) { doWork = true; q = (from r in q where r.IS_ASSIGN == criteria.IS_ASSIGN select r); } if (!doWork) { q = (from r in q where r.PO_COMPLETE_SO_ITEM_COMPONENT_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT> GetByItemContain(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT>(); else return CriteriaByContains((from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT> CriteriaByContains(IQueryable<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT> q, SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_COMPONENT_ID == criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID.ToString().Contains(criteria.PO_COMPLETE_SO_ITEM_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM.Contains(criteria.COMPONENT_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL.Contains(criteria.COMPONENT_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION.Contains(criteria.DECRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT.Contains(criteria.UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK.Contains(criteria.STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1.Contains(criteria.BOM_ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2.Contains(criteria.BOM_ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3.Contains(criteria.BOM_ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ASSIGN)) { doWork = true; q = (from r in q where r.IS_ASSIGN.Contains(criteria.IS_ASSIGN) select r); } if (!doWork) { q = (from r in q where r.PO_COMPLETE_SO_ITEM_COMPONENT_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPO_COMPLETE_SO_ITEM_COMPONENT_ID(Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPO_COMPLETE_SO_ITEM_COMPONENT_ID(Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_ITEM_COMPONENT_ID == Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT Item, ARTWORKEntities dc) { if (GetChkByPO_COMPLETE_SO_ITEM_COMPONENT_ID(Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT.Add(Item); dc.SaveChanges(); } else { var temp = GetByPO_COMPLETE_SO_ITEM_COMPONENT_ID(Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_ITEM_COMPONENT_ID == Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_ITEM_COMPONENT_ID == Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT NewItem, SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPO_COMPLETE_SO_ITEM_COMPONENT_ID(int? PO_COMPLETE_SO_ITEM_COMPONENT_ID, ARTWORKEntities dc) { var Item = GetByPO_COMPLETE_SO_ITEM_COMPONENT_ID(PO_COMPLETE_SO_ITEM_COMPONENT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP_SERVICE
{
    public static SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP GetByPO_COMPLETE_SO_ITEM_COMPONENT_ID(int? PO_COMPLETE_SO_ITEM_COMPONENT_ID, ARTWORKEntities dc) { if (PO_COMPLETE_SO_ITEM_COMPONENT_ID == null || PO_COMPLETE_SO_ITEM_COMPONENT_ID == 0) return null; else return (from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP where p.PO_COMPLETE_SO_ITEM_COMPONENT_ID == PO_COMPLETE_SO_ITEM_COMPONENT_ID select p).FirstOrDefault(); }
    private static int? GetChkByPO_COMPLETE_SO_ITEM_COMPONENT_ID(int? PO_COMPLETE_SO_ITEM_COMPONENT_ID, ARTWORKEntities dc) { if (PO_COMPLETE_SO_ITEM_COMPONENT_ID == null || PO_COMPLETE_SO_ITEM_COMPONENT_ID == 0) return null; else { var temp = (from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP where p.PO_COMPLETE_SO_ITEM_COMPONENT_ID == PO_COMPLETE_SO_ITEM_COMPONENT_ID select p.PO_COMPLETE_SO_ITEM_COMPONENT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP> GetByItem(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP>(); else return CriteriaBy((from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP> CriteriaBy(IQueryable<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP> q, SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_COMPONENT_ID == criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == criteria.PO_COMPLETE_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM == criteria.COMPONENT_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL == criteria.COMPONENT_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION == criteria.DECRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.QUANTITY)) { doWork = true; q = (from r in q where r.QUANTITY == criteria.QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT == criteria.UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK == criteria.STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1 == criteria.BOM_ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2 == criteria.BOM_ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3 == criteria.BOM_ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ASSIGN)) { doWork = true; q = (from r in q where r.IS_ASSIGN == criteria.IS_ASSIGN select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.PO_COMPLETE_SO_ITEM_COMPONENT_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP> GetByItemContain(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP>(); else return CriteriaByContains((from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP> CriteriaByContains(IQueryable<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP> q, SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_COMPONENT_ID == criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID.ToString().Contains(criteria.PO_COMPLETE_SO_ITEM_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM.Contains(criteria.COMPONENT_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL.Contains(criteria.COMPONENT_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION.Contains(criteria.DECRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT.Contains(criteria.UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK.Contains(criteria.STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1.Contains(criteria.BOM_ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2.Contains(criteria.BOM_ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3.Contains(criteria.BOM_ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ASSIGN)) { doWork = true; q = (from r in q where r.IS_ASSIGN.Contains(criteria.IS_ASSIGN) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.PO_COMPLETE_SO_ITEM_COMPONENT_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPO_COMPLETE_SO_ITEM_COMPONENT_ID(Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPO_COMPLETE_SO_ITEM_COMPONENT_ID(Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_ITEM_COMPONENT_ID == Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP Item, ARTWORKEntities dc) { if (GetChkByPO_COMPLETE_SO_ITEM_COMPONENT_ID(Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP.Add(Item); dc.SaveChanges(); } else { var temp = GetByPO_COMPLETE_SO_ITEM_COMPONENT_ID(Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_ITEM_COMPONENT_ID == Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_ITEM_COMPONENT_ID == Item.PO_COMPLETE_SO_ITEM_COMPONENT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP NewItem, SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_PO_COMPLETE_SO_ITEM_COMPONENT_TMP"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPO_COMPLETE_SO_ITEM_COMPONENT_ID(int? PO_COMPLETE_SO_ITEM_COMPONENT_ID, ARTWORKEntities dc) { var Item = GetByPO_COMPLETE_SO_ITEM_COMPONENT_ID(PO_COMPLETE_SO_ITEM_COMPONENT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_PO_COMPLETE_SO_ITEM_TMP_SERVICE
{
    public static SAP_M_PO_COMPLETE_SO_ITEM_TMP GetByPO_COMPLETE_SO_ITEM_ID(int? PO_COMPLETE_SO_ITEM_ID, ARTWORKEntities dc) { if (PO_COMPLETE_SO_ITEM_ID == null || PO_COMPLETE_SO_ITEM_ID == 0) return null; else return (from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_TMP where p.PO_COMPLETE_SO_ITEM_ID == PO_COMPLETE_SO_ITEM_ID select p).FirstOrDefault(); }
    private static int? GetChkByPO_COMPLETE_SO_ITEM_ID(int? PO_COMPLETE_SO_ITEM_ID, ARTWORKEntities dc) { if (PO_COMPLETE_SO_ITEM_ID == null || PO_COMPLETE_SO_ITEM_ID == 0) return null; else { var temp = (from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_TMP where p.PO_COMPLETE_SO_ITEM_ID == PO_COMPLETE_SO_ITEM_ID select p.PO_COMPLETE_SO_ITEM_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_PO_COMPLETE_SO_ITEM_TMP> GetByItem(SAP_M_PO_COMPLETE_SO_ITEM_TMP Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_COMPLETE_SO_ITEM_TMP>(); else return CriteriaBy((from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_TMP select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_COMPLETE_SO_ITEM_TMP> CriteriaBy(IQueryable<SAP_M_PO_COMPLETE_SO_ITEM_TMP> q, SAP_M_PO_COMPLETE_SO_ITEM_TMP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == criteria.PO_COMPLETE_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == criteria.PO_COMPLETE_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM)) { doWork = true; q = (from r in q where r.ITEM == criteria.ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION == criteria.MATERIAL_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_QTY)) { doWork = true; q = (from r in q where r.ORDER_QTY == criteria.ORDER_QTY select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT == criteria.ORDER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_FROM)) { doWork = true; q = (from r in q where r.ETD_DATE_FROM == criteria.ETD_DATE_FROM select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_TO)) { doWork = true; q = (from r in q where r.ETD_DATE_TO == criteria.ETD_DATE_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE == criteria.OLD_MATERIAL_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE == criteria.PACK_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT == criteria.VALUME_PER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT == criteria.VALUME_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT == criteria.SIZE_DRAIN_WT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO == criteria.PROD_INSP_MEMO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE == criteria.REJECTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION == criteria.REJECTION_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT == criteria.PORT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA == criteria.VIA select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO == criteria.IN_TRANSIT_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION == criteria.BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID == criteria.ADDITIONAL_BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION == criteria.ADDITIONAL_BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT == criteria.PRODUCTION_PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE == criteria.ZONE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY == criteria.COUNTRY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY == criteria.PRODUCTION_HIERARCHY select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER == criteria.MRP_CONTROLLER select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK == criteria.STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1 == criteria.ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2 == criteria.ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3 == criteria.ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ASSIGN)) { doWork = true; q = (from r in q where r.IS_ASSIGN == criteria.IS_ASSIGN select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_COMPLETE_SO_ITEM_TMP> GetByItemContain(SAP_M_PO_COMPLETE_SO_ITEM_TMP Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_COMPLETE_SO_ITEM_TMP>(); else return CriteriaByContains((from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_TMP select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_COMPLETE_SO_ITEM_TMP> CriteriaByContains(IQueryable<SAP_M_PO_COMPLETE_SO_ITEM_TMP> q, SAP_M_PO_COMPLETE_SO_ITEM_TMP criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == criteria.PO_COMPLETE_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID.ToString().Contains(criteria.PO_COMPLETE_SO_HEADER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION.Contains(criteria.MATERIAL_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT.Contains(criteria.ORDER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE.Contains(criteria.OLD_MATERIAL_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE.Contains(criteria.PACK_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT.Contains(criteria.VALUME_PER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT.Contains(criteria.VALUME_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT.Contains(criteria.SIZE_DRAIN_WT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO.Contains(criteria.PROD_INSP_MEMO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE.Contains(criteria.REJECTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION.Contains(criteria.REJECTION_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT.Contains(criteria.PORT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA.Contains(criteria.VIA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO.Contains(criteria.IN_TRANSIT_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID.Contains(criteria.BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION.Contains(criteria.BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID.Contains(criteria.ADDITIONAL_BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION.Contains(criteria.ADDITIONAL_BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT.Contains(criteria.PRODUCTION_PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE.Contains(criteria.ZONE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY.Contains(criteria.COUNTRY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY.Contains(criteria.PRODUCTION_HIERARCHY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER.Contains(criteria.MRP_CONTROLLER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK.Contains(criteria.STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1.Contains(criteria.ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2.Contains(criteria.ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3.Contains(criteria.ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ASSIGN)) { doWork = true; q = (from r in q where r.IS_ASSIGN.Contains(criteria.IS_ASSIGN) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_COMPLETE_SO_ITEM_TMP> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_PO_COMPLETE_SO_ITEM_TMP select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_PO_COMPLETE_SO_ITEM_TMP Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPO_COMPLETE_SO_ITEM_ID(Item.PO_COMPLETE_SO_ITEM_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_ITEM_TMP.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPO_COMPLETE_SO_ITEM_ID(Item.PO_COMPLETE_SO_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_ITEM_TMP>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_ITEM_ID == Item.PO_COMPLETE_SO_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_PO_COMPLETE_SO_ITEM_TMP Item, ARTWORKEntities dc) { if (GetChkByPO_COMPLETE_SO_ITEM_ID(Item.PO_COMPLETE_SO_ITEM_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_ITEM_TMP.Add(Item); dc.SaveChanges(); } else { var temp = GetByPO_COMPLETE_SO_ITEM_ID(Item.PO_COMPLETE_SO_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_ITEM_TMP>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_ITEM_ID == Item.PO_COMPLETE_SO_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_PO_COMPLETE_SO_ITEM_TMP Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_COMPLETE_SO_ITEM_TMP.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_PO_COMPLETE_SO_ITEM_TMP Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_COMPLETE_SO_ITEM_TMP>().Local.FirstOrDefault(f => f.PO_COMPLETE_SO_ITEM_ID == Item.PO_COMPLETE_SO_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_PO_COMPLETE_SO_ITEM_TMP NewItem, SAP_M_PO_COMPLETE_SO_ITEM_TMP OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_PO_COMPLETE_SO_ITEM_TMP"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPO_COMPLETE_SO_ITEM_ID(int? PO_COMPLETE_SO_ITEM_ID, ARTWORKEntities dc) { var Item = GetByPO_COMPLETE_SO_ITEM_ID(PO_COMPLETE_SO_ITEM_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_PO_IDOC_SERVICE
{
    public static SAP_M_PO_IDOC GetByPO_IDOC_ID(int? PO_IDOC_ID, ARTWORKEntities dc) { if (PO_IDOC_ID == null || PO_IDOC_ID == 0) return null; else return (from p in dc.SAP_M_PO_IDOC where p.PO_IDOC_ID == PO_IDOC_ID select p).FirstOrDefault(); }
    private static int? GetChkByPO_IDOC_ID(int? PO_IDOC_ID, ARTWORKEntities dc) { if (PO_IDOC_ID == null || PO_IDOC_ID == 0) return null; else { var temp = (from p in dc.SAP_M_PO_IDOC where p.PO_IDOC_ID == PO_IDOC_ID select p.PO_IDOC_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_PO_IDOC> GetByItem(SAP_M_PO_IDOC Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_IDOC>(); else return CriteriaBy((from p in dc.SAP_M_PO_IDOC select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_IDOC> CriteriaBy(IQueryable<SAP_M_PO_IDOC> q, SAP_M_PO_IDOC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_IDOC_ID)) { doWork = true; q = (from r in q where r.PO_IDOC_ID == criteria.PO_IDOC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURCHASE_ORDER_NO)) { doWork = true; q = (from r in q where r.PURCHASE_ORDER_NO == criteria.PURCHASE_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENCY)) { doWork = true; q = (from r in q where r.CURRENCY == criteria.CURRENCY select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE)) { doWork = true; q = (from r in q where r.DATE == criteria.DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TIME)) { doWork = true; q = (from r in q where r.TIME == criteria.TIME select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURCHASING_ORG)) { doWork = true; q = (from r in q where r.PURCHASING_ORG == criteria.PURCHASING_ORG select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_CODE)) { doWork = true; q = (from r in q where r.COMPANY_CODE == criteria.COMPANY_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_NO)) { doWork = true; q = (from r in q where r.VENDOR_NO == criteria.VENDOR_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_NAME)) { doWork = true; q = (from r in q where r.VENDOR_NAME == criteria.VENDOR_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURCHASER)) { doWork = true; q = (from r in q where r.PURCHASER == criteria.PURCHASER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.PO_IDOC_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_IDOC> GetByItemContain(SAP_M_PO_IDOC Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_IDOC>(); else return CriteriaByContains((from p in dc.SAP_M_PO_IDOC select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_IDOC> CriteriaByContains(IQueryable<SAP_M_PO_IDOC> q, SAP_M_PO_IDOC criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_IDOC_ID)) { doWork = true; q = (from r in q where r.PO_IDOC_ID == criteria.PO_IDOC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURCHASE_ORDER_NO)) { doWork = true; q = (from r in q where r.PURCHASE_ORDER_NO.Contains(criteria.PURCHASE_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENCY)) { doWork = true; q = (from r in q where r.CURRENCY.Contains(criteria.CURRENCY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE)) { doWork = true; q = (from r in q where r.DATE.Contains(criteria.DATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TIME)) { doWork = true; q = (from r in q where r.TIME.Contains(criteria.TIME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURCHASING_ORG)) { doWork = true; q = (from r in q where r.PURCHASING_ORG.Contains(criteria.PURCHASING_ORG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_CODE)) { doWork = true; q = (from r in q where r.COMPANY_CODE.Contains(criteria.COMPANY_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_NO)) { doWork = true; q = (from r in q where r.VENDOR_NO.Contains(criteria.VENDOR_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_NAME)) { doWork = true; q = (from r in q where r.VENDOR_NAME.Contains(criteria.VENDOR_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURCHASER)) { doWork = true; q = (from r in q where r.PURCHASER.Contains(criteria.PURCHASER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.PO_IDOC_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_IDOC> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_PO_IDOC select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_PO_IDOC Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPO_IDOC_ID(Item.PO_IDOC_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_IDOC.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPO_IDOC_ID(Item.PO_IDOC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_IDOC>().Local.FirstOrDefault(f => f.PO_IDOC_ID == Item.PO_IDOC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_PO_IDOC Item, ARTWORKEntities dc) { if (GetChkByPO_IDOC_ID(Item.PO_IDOC_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_IDOC.Add(Item); dc.SaveChanges(); } else { var temp = GetByPO_IDOC_ID(Item.PO_IDOC_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_IDOC>().Local.FirstOrDefault(f => f.PO_IDOC_ID == Item.PO_IDOC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_PO_IDOC Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_IDOC.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_PO_IDOC Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_IDOC>().Local.FirstOrDefault(f => f.PO_IDOC_ID == Item.PO_IDOC_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_PO_IDOC NewItem, SAP_M_PO_IDOC OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_PO_IDOC"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPO_IDOC_ID(int? PO_IDOC_ID, ARTWORKEntities dc) { var Item = GetByPO_IDOC_ID(PO_IDOC_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_PO_IDOC_ITEM_SERVICE
{
    public static SAP_M_PO_IDOC_ITEM GetByPO_IDOC_ITEM_ID(int? PO_IDOC_ITEM_ID, ARTWORKEntities dc) { if (PO_IDOC_ITEM_ID == null || PO_IDOC_ITEM_ID == 0) return null; else return (from p in dc.SAP_M_PO_IDOC_ITEM where p.PO_IDOC_ITEM_ID == PO_IDOC_ITEM_ID select p).FirstOrDefault(); }
    private static int? GetChkByPO_IDOC_ITEM_ID(int? PO_IDOC_ITEM_ID, ARTWORKEntities dc) { if (PO_IDOC_ITEM_ID == null || PO_IDOC_ITEM_ID == 0) return null; else { var temp = (from p in dc.SAP_M_PO_IDOC_ITEM where p.PO_IDOC_ITEM_ID == PO_IDOC_ITEM_ID select p.PO_IDOC_ITEM_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_PO_IDOC_ITEM> GetByItem(SAP_M_PO_IDOC_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_IDOC_ITEM>(); else return CriteriaBy((from p in dc.SAP_M_PO_IDOC_ITEM select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_IDOC_ITEM> CriteriaBy(IQueryable<SAP_M_PO_IDOC_ITEM> q, SAP_M_PO_IDOC_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_IDOC_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_IDOC_ITEM_ID == criteria.PO_IDOC_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_IDOC_ID)) { doWork = true; q = (from r in q where r.PO_IDOC_ID == criteria.PO_IDOC_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_ITEM_NO)) { doWork = true; q = (from r in q where r.PO_ITEM_NO == criteria.PO_ITEM_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECORD_TYPE)) { doWork = true; q = (from r in q where r.RECORD_TYPE == criteria.RECORD_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DELETION_INDICATOR)) { doWork = true; q = (from r in q where r.DELETION_INDICATOR == criteria.DELETION_INDICATOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.QUANTITY)) { doWork = true; q = (from r in q where r.QUANTITY == criteria.QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT == criteria.ORDER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_PRICE_UNIT)) { doWork = true; q = (from r in q where r.ORDER_PRICE_UNIT == criteria.ORDER_PRICE_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_ORDER_PRICE)) { doWork = true; q = (from r in q where r.NET_ORDER_PRICE == criteria.NET_ORDER_PRICE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRICE_UNIT)) { doWork = true; q = (from r in q where r.PRICE_UNIT == criteria.PRICE_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.AMOUNT)) { doWork = true; q = (from r in q where r.AMOUNT == criteria.AMOUNT select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_GROUP)) { doWork = true; q = (from r in q where r.MATERIAL_GROUP == criteria.MATERIAL_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.DENOMINATOR_QUANTITY_CONVERSION)) { doWork = true; q = (from r in q where r.DENOMINATOR_QUANTITY_CONVERSION == criteria.DENOMINATOR_QUANTITY_CONVERSION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMERATOR_QUANTITY_CONVERSION)) { doWork = true; q = (from r in q where r.NUMERATOR_QUANTITY_CONVERSION == criteria.NUMERATOR_QUANTITY_CONVERSION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.METERIAL_NUMBER)) { doWork = true; q = (from r in q where r.METERIAL_NUMBER == criteria.METERIAL_NUMBER select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHORT_TEXT)) { doWork = true; q = (from r in q where r.SHORT_TEXT == criteria.SHORT_TEXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DELIVERY_DATE)) { doWork = true; q = (from r in q where r.DELIVERY_DATE == criteria.DELIVERY_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_DOCUMENT_NO)) { doWork = true; q = (from r in q where r.SALES_DOCUMENT_NO == criteria.SALES_DOCUMENT_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_DOCUMENT_ITEM)) { doWork = true; q = (from r in q where r.SALES_DOCUMENT_ITEM == criteria.SALES_DOCUMENT_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.PO_IDOC_ITEM_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_IDOC_ITEM> GetByItemContain(SAP_M_PO_IDOC_ITEM Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_PO_IDOC_ITEM>(); else return CriteriaByContains((from p in dc.SAP_M_PO_IDOC_ITEM select p), Item).ToList(); }
    private static IQueryable<SAP_M_PO_IDOC_ITEM> CriteriaByContains(IQueryable<SAP_M_PO_IDOC_ITEM> q, SAP_M_PO_IDOC_ITEM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.PO_IDOC_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_IDOC_ITEM_ID == criteria.PO_IDOC_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_IDOC_ID)) { doWork = true; q = (from r in q where r.PO_IDOC_ID.ToString().Contains(criteria.PO_IDOC_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_ITEM_NO)) { doWork = true; q = (from r in q where r.PO_ITEM_NO.Contains(criteria.PO_ITEM_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RECORD_TYPE)) { doWork = true; q = (from r in q where r.RECORD_TYPE.Contains(criteria.RECORD_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DELETION_INDICATOR)) { doWork = true; q = (from r in q where r.DELETION_INDICATOR.Contains(criteria.DELETION_INDICATOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.QUANTITY)) { doWork = true; q = (from r in q where r.QUANTITY.Contains(criteria.QUANTITY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT.Contains(criteria.ORDER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_PRICE_UNIT)) { doWork = true; q = (from r in q where r.ORDER_PRICE_UNIT.Contains(criteria.ORDER_PRICE_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_ORDER_PRICE)) { doWork = true; q = (from r in q where r.NET_ORDER_PRICE.Contains(criteria.NET_ORDER_PRICE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRICE_UNIT)) { doWork = true; q = (from r in q where r.PRICE_UNIT.Contains(criteria.PRICE_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.AMOUNT)) { doWork = true; q = (from r in q where r.AMOUNT.Contains(criteria.AMOUNT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_GROUP)) { doWork = true; q = (from r in q where r.MATERIAL_GROUP.Contains(criteria.MATERIAL_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.METERIAL_NUMBER)) { doWork = true; q = (from r in q where r.METERIAL_NUMBER.Contains(criteria.METERIAL_NUMBER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHORT_TEXT)) { doWork = true; q = (from r in q where r.SHORT_TEXT.Contains(criteria.SHORT_TEXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DELIVERY_DATE)) { doWork = true; q = (from r in q where r.DELIVERY_DATE.Contains(criteria.DELIVERY_DATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_DOCUMENT_NO)) { doWork = true; q = (from r in q where r.SALES_DOCUMENT_NO.Contains(criteria.SALES_DOCUMENT_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.PO_IDOC_ITEM_ID == 0 select r); } return q; }
    public static List<SAP_M_PO_IDOC_ITEM> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_PO_IDOC_ITEM select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_PO_IDOC_ITEM Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByPO_IDOC_ITEM_ID(Item.PO_IDOC_ITEM_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_IDOC_ITEM.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByPO_IDOC_ITEM_ID(Item.PO_IDOC_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_IDOC_ITEM>().Local.FirstOrDefault(f => f.PO_IDOC_ITEM_ID == Item.PO_IDOC_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_PO_IDOC_ITEM Item, ARTWORKEntities dc) { if (GetChkByPO_IDOC_ITEM_ID(Item.PO_IDOC_ITEM_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_IDOC_ITEM.Add(Item); dc.SaveChanges(); } else { var temp = GetByPO_IDOC_ITEM_ID(Item.PO_IDOC_ITEM_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_IDOC_ITEM>().Local.FirstOrDefault(f => f.PO_IDOC_ITEM_ID == Item.PO_IDOC_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_PO_IDOC_ITEM Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_PO_IDOC_ITEM.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_PO_IDOC_ITEM Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_PO_IDOC_ITEM>().Local.FirstOrDefault(f => f.PO_IDOC_ITEM_ID == Item.PO_IDOC_ITEM_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_PO_IDOC_ITEM NewItem, SAP_M_PO_IDOC_ITEM OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_PO_IDOC_ITEM"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByPO_IDOC_ITEM_ID(int? PO_IDOC_ITEM_ID, ARTWORKEntities dc) { var Item = GetByPO_IDOC_ITEM_ID(PO_IDOC_ITEM_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class SAP_M_TYPE_OF_PRODUCT_SERVICE
{
    public static SAP_M_TYPE_OF_PRODUCT GetByTYPE_OF_PRODUCT_ID(int? TYPE_OF_PRODUCT_ID, ARTWORKEntities dc) { if (TYPE_OF_PRODUCT_ID == null || TYPE_OF_PRODUCT_ID == 0) return null; else return (from p in dc.SAP_M_TYPE_OF_PRODUCT where p.TYPE_OF_PRODUCT_ID == TYPE_OF_PRODUCT_ID select p).FirstOrDefault(); }
    private static int? GetChkByTYPE_OF_PRODUCT_ID(int? TYPE_OF_PRODUCT_ID, ARTWORKEntities dc) { if (TYPE_OF_PRODUCT_ID == null || TYPE_OF_PRODUCT_ID == 0) return null; else { var temp = (from p in dc.SAP_M_TYPE_OF_PRODUCT where p.TYPE_OF_PRODUCT_ID == TYPE_OF_PRODUCT_ID select p.TYPE_OF_PRODUCT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<SAP_M_TYPE_OF_PRODUCT> GetByItem(SAP_M_TYPE_OF_PRODUCT Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_TYPE_OF_PRODUCT>(); else return CriteriaBy((from p in dc.SAP_M_TYPE_OF_PRODUCT select p), Item).ToList(); }
    private static IQueryable<SAP_M_TYPE_OF_PRODUCT> CriteriaBy(IQueryable<SAP_M_TYPE_OF_PRODUCT> q, SAP_M_TYPE_OF_PRODUCT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_PRODUCT_ID)) { doWork = true; q = (from r in q where r.TYPE_OF_PRODUCT_ID == criteria.TYPE_OF_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_PRODUCT)) { doWork = true; q = (from r in q where r.TYPE_OF_PRODUCT == criteria.TYPE_OF_PRODUCT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION == criteria.DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.TYPE_OF_PRODUCT_ID == 0 select r); } return q; }
    public static List<SAP_M_TYPE_OF_PRODUCT> GetByItemContain(SAP_M_TYPE_OF_PRODUCT Item, ARTWORKEntities dc) { if (Item == null) return new List<SAP_M_TYPE_OF_PRODUCT>(); else return CriteriaByContains((from p in dc.SAP_M_TYPE_OF_PRODUCT select p), Item).ToList(); }
    private static IQueryable<SAP_M_TYPE_OF_PRODUCT> CriteriaByContains(IQueryable<SAP_M_TYPE_OF_PRODUCT> q, SAP_M_TYPE_OF_PRODUCT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_PRODUCT_ID)) { doWork = true; q = (from r in q where r.TYPE_OF_PRODUCT_ID == criteria.TYPE_OF_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_PRODUCT)) { doWork = true; q = (from r in q where r.TYPE_OF_PRODUCT.Contains(criteria.TYPE_OF_PRODUCT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DESCRIPTION)) { doWork = true; q = (from r in q where r.DESCRIPTION.Contains(criteria.DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.TYPE_OF_PRODUCT_ID == 0 select r); } return q; }
    public static List<SAP_M_TYPE_OF_PRODUCT> GetAll(ARTWORKEntities dc) { return (from p in dc.SAP_M_TYPE_OF_PRODUCT select p).ToList(); }
    public static void SaveOrUpdate(SAP_M_TYPE_OF_PRODUCT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByTYPE_OF_PRODUCT_ID(Item.TYPE_OF_PRODUCT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_TYPE_OF_PRODUCT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByTYPE_OF_PRODUCT_ID(Item.TYPE_OF_PRODUCT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_TYPE_OF_PRODUCT>().Local.FirstOrDefault(f => f.TYPE_OF_PRODUCT_ID == Item.TYPE_OF_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(SAP_M_TYPE_OF_PRODUCT Item, ARTWORKEntities dc) { if (GetChkByTYPE_OF_PRODUCT_ID(Item.TYPE_OF_PRODUCT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_TYPE_OF_PRODUCT.Add(Item); dc.SaveChanges(); } else { var temp = GetByTYPE_OF_PRODUCT_ID(Item.TYPE_OF_PRODUCT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_TYPE_OF_PRODUCT>().Local.FirstOrDefault(f => f.TYPE_OF_PRODUCT_ID == Item.TYPE_OF_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(SAP_M_TYPE_OF_PRODUCT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.SAP_M_TYPE_OF_PRODUCT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(SAP_M_TYPE_OF_PRODUCT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<SAP_M_TYPE_OF_PRODUCT>().Local.FirstOrDefault(f => f.TYPE_OF_PRODUCT_ID == Item.TYPE_OF_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(SAP_M_TYPE_OF_PRODUCT NewItem, SAP_M_TYPE_OF_PRODUCT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "SAP_M_TYPE_OF_PRODUCT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByTYPE_OF_PRODUCT_ID(int? TYPE_OF_PRODUCT_ID, ARTWORKEntities dc) { var Item = GetByTYPE_OF_PRODUCT_ID(TYPE_OF_PRODUCT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class V_ART_ASSIGNED_SO_SERVICE
{
    public static V_ART_ASSIGNED_SO GetByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else return (from p in dc.V_ART_ASSIGNED_SO where p.NUM == NUM select p).FirstOrDefault(); }
    private static int? GetChkByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else { var temp = (from p in dc.V_ART_ASSIGNED_SO where p.NUM == NUM select p.NUM).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<V_ART_ASSIGNED_SO> GetByItem(V_ART_ASSIGNED_SO Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_ASSIGNED_SO>(); else return CriteriaBy((from p in dc.V_ART_ASSIGNED_SO select p), Item).ToList(); }
    private static IQueryable<V_ART_ASSIGNED_SO> CriteriaBy(IQueryable<V_ART_ASSIGNED_SO> q, V_ART_ASSIGNED_SO criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_HEADER_ID == criteria.ASSIGN_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_SO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_SO_ID == criteria.ARTWORK_PROCESS_SO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO == criteria.SOLD_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME == criteria.SOLD_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_SHIPMENT_DATE)) { doWork = true; q = (from r in q where r.LAST_SHIPMENT_DATE == criteria.LAST_SHIPMENT_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE_1_2)) { doWork = true; q = (from r in q where r.DATE_1_2 == criteria.DATE_1_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_ON)) { doWork = true; q = (from r in q where r.CREATE_ON == criteria.CREATE_ON select r); } if (!CheckValue.EqualsDefaultValue(criteria.RDD)) { doWork = true; q = (from r in q where r.RDD == criteria.RDD select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM == criteria.PAYMENT_TERM select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO == criteria.LC_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXPIRED_DATE)) { doWork = true; q = (from r in q where r.EXPIRED_DATE == criteria.EXPIRED_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO == criteria.SHIP_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME == criteria.SHIP_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO == criteria.SOLD_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO == criteria.SHIP_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP == criteria.SALES_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO == criteria.MARKETING_CO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME == criteria.MARKETING_CO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING == criteria.MARKETING select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME == criteria.MARKETING_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP == criteria.MARKETING_ORDER_SAP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME == criteria.MARKETING_ORDER_SAP_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG == criteria.SALES_ORG select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL == criteria.DISTRIBUTION_CHANNEL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION == criteria.DIVITION select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE == criteria.SALES_ORDER_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1 == criteria.HEADER_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2 == criteria.HEADER_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3 == criteria.HEADER_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_ITEM_ID == criteria.ASSIGN_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM)) { doWork = true; q = (from r in q where r.ITEM == criteria.ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION == criteria.MATERIAL_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_QTY)) { doWork = true; q = (from r in q where r.ORDER_QTY == criteria.ORDER_QTY select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT == criteria.ORDER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_FROM)) { doWork = true; q = (from r in q where r.ETD_DATE_FROM == criteria.ETD_DATE_FROM select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_TO)) { doWork = true; q = (from r in q where r.ETD_DATE_TO == criteria.ETD_DATE_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE == criteria.OLD_MATERIAL_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE == criteria.PACK_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT == criteria.VALUME_PER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT == criteria.VALUME_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT == criteria.SIZE_DRAIN_WT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO == criteria.PROD_INSP_MEMO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE == criteria.REJECTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION == criteria.REJECTION_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT == criteria.PORT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA == criteria.VIA select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO == criteria.IN_TRANSIT_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION == criteria.BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID == criteria.ADDITIONAL_BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION == criteria.ADDITIONAL_BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT == criteria.PRODUCTION_PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE == criteria.ZONE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY == criteria.COUNTRY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY == criteria.PRODUCTION_HIERARCHY select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER == criteria.MRP_CONTROLLER select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK == criteria.STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1 == criteria.ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2 == criteria.ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3 == criteria.ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_ITEM_COMPONENT_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_ITEM_COMPONENT_ID == criteria.ASSIGN_SO_ITEM_COMPONENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM == criteria.COMPONENT_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL == criteria.COMPONENT_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION == criteria.DECRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.QUANTITY)) { doWork = true; q = (from r in q where r.QUANTITY == criteria.QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT == criteria.UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_STOCK)) { doWork = true; q = (from r in q where r.BOM_STOCK == criteria.BOM_STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1 == criteria.BOM_ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2 == criteria.BOM_ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3 == criteria.BOM_ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_ITEM_NO)) { doWork = true; q = (from r in q where r.REQUEST_ITEM_NO == criteria.REQUEST_ITEM_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_ID)) { doWork = true; q = (from r in q where r.CURRENT_STEP_ID == criteria.CURRENT_STEP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_CODE)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_CODE == criteria.STEP_ARTWORK_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_NAME)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_NAME == criteria.STEP_ARTWORK_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_DESCRIPTION)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_DESCRIPTION == criteria.STEP_ARTWORK_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID_RESPONSE)) { doWork = true; q = (from r in q where r.ROLE_ID_RESPONSE == criteria.ROLE_ID_RESPONSE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DURATION)) { doWork = true; q = (from r in q where r.DURATION == criteria.DURATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.TITLE)) { doWork = true; q = (from r in q where r.TITLE == criteria.TITLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.FIRST_NAME)) { doWork = true; q = (from r in q where r.FIRST_NAME == criteria.FIRST_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_NAME)) { doWork = true; q = (from r in q where r.LAST_NAME == criteria.LAST_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.EMAIL)) { doWork = true; q = (from r in q where r.EMAIL == criteria.EMAIL select r); } if (!CheckValue.EqualsDefaultValue(criteria.USERNAME)) { doWork = true; q = (from r in q where r.USERNAME == criteria.USERNAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.READY_CREATE_PO)) { doWork = true; q = (from r in q where r.READY_CREATE_PO == criteria.READY_CREATE_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END == criteria.IS_END select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_FOLDER_NODE_ID)) { doWork = true; q = (from r in q where r.ARTWORK_FOLDER_NODE_ID == criteria.ARTWORK_FOLDER_NODE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE == criteria.IS_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_TERMINATE)) { doWork = true; q = (from r in q where r.REMARK_TERMINATE == criteria.REMARK_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE == criteria.IS_DELEGATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CURRENT_CUSTOMER_ID == criteria.CURRENT_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_VENDOR_ID)) { doWork = true; q = (from r in q where r.CURRENT_VENDOR_ID == criteria.CURRENT_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_ROLE_ID)) { doWork = true; q = (from r in q where r.CURRENT_ROLE_ID == criteria.CURRENT_ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_ID)) { doWork = true; q = (from r in q where r.CURRENT_USER_ID == criteria.CURRENT_USER_ID select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_ASSIGNED_SO> GetByItemContain(V_ART_ASSIGNED_SO Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_ASSIGNED_SO>(); else return CriteriaByContains((from p in dc.V_ART_ASSIGNED_SO select p), Item).ToList(); }
    private static IQueryable<V_ART_ASSIGNED_SO> CriteriaByContains(IQueryable<V_ART_ASSIGNED_SO> q, V_ART_ASSIGNED_SO criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_HEADER_ID.ToString().Contains(criteria.ASSIGN_SO_HEADER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_PROCESS_SO_ID)) { doWork = true; q = (from r in q where r.ARTWORK_PROCESS_SO_ID.ToString().Contains(criteria.ARTWORK_PROCESS_SO_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO.Contains(criteria.SOLD_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME.Contains(criteria.SOLD_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM.Contains(criteria.PAYMENT_TERM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO.Contains(criteria.LC_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO.Contains(criteria.SHIP_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME.Contains(criteria.SHIP_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO.Contains(criteria.SOLD_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO.Contains(criteria.SHIP_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP.Contains(criteria.SALES_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO.Contains(criteria.MARKETING_CO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME.Contains(criteria.MARKETING_CO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING.Contains(criteria.MARKETING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME.Contains(criteria.MARKETING_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP.Contains(criteria.MARKETING_ORDER_SAP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME.Contains(criteria.MARKETING_ORDER_SAP_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG.Contains(criteria.SALES_ORG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL.Contains(criteria.DISTRIBUTION_CHANNEL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION.Contains(criteria.DIVITION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE.Contains(criteria.SALES_ORDER_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1.Contains(criteria.HEADER_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2.Contains(criteria.HEADER_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3.Contains(criteria.HEADER_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ASSIGN_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.ASSIGN_SO_ITEM_ID.ToString().Contains(criteria.ASSIGN_SO_ITEM_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION.Contains(criteria.MATERIAL_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT.Contains(criteria.ORDER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE.Contains(criteria.OLD_MATERIAL_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE.Contains(criteria.PACK_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT.Contains(criteria.VALUME_PER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT.Contains(criteria.VALUME_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT.Contains(criteria.SIZE_DRAIN_WT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO.Contains(criteria.PROD_INSP_MEMO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE.Contains(criteria.REJECTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION.Contains(criteria.REJECTION_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT.Contains(criteria.PORT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA.Contains(criteria.VIA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO.Contains(criteria.IN_TRANSIT_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID.Contains(criteria.BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION.Contains(criteria.BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID.Contains(criteria.ADDITIONAL_BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION.Contains(criteria.ADDITIONAL_BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT.Contains(criteria.PRODUCTION_PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE.Contains(criteria.ZONE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY.Contains(criteria.COUNTRY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY.Contains(criteria.PRODUCTION_HIERARCHY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER.Contains(criteria.MRP_CONTROLLER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK.Contains(criteria.STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1.Contains(criteria.ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2.Contains(criteria.ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3.Contains(criteria.ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM.Contains(criteria.COMPONENT_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL.Contains(criteria.COMPONENT_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION.Contains(criteria.DECRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT.Contains(criteria.UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_STOCK)) { doWork = true; q = (from r in q where r.BOM_STOCK.Contains(criteria.BOM_STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1.Contains(criteria.BOM_ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2.Contains(criteria.BOM_ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3.Contains(criteria.BOM_ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_ITEM_NO)) { doWork = true; q = (from r in q where r.REQUEST_ITEM_NO.Contains(criteria.REQUEST_ITEM_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_CODE)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_CODE.Contains(criteria.STEP_ARTWORK_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_NAME)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_NAME.Contains(criteria.STEP_ARTWORK_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_DESCRIPTION)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_DESCRIPTION.Contains(criteria.STEP_ARTWORK_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TITLE)) { doWork = true; q = (from r in q where r.TITLE.Contains(criteria.TITLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FIRST_NAME)) { doWork = true; q = (from r in q where r.FIRST_NAME.Contains(criteria.FIRST_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_NAME)) { doWork = true; q = (from r in q where r.LAST_NAME.Contains(criteria.LAST_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.EMAIL)) { doWork = true; q = (from r in q where r.EMAIL.Contains(criteria.EMAIL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.USERNAME)) { doWork = true; q = (from r in q where r.USERNAME.Contains(criteria.USERNAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.READY_CREATE_PO)) { doWork = true; q = (from r in q where r.READY_CREATE_PO.Contains(criteria.READY_CREATE_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END.Contains(criteria.IS_END) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE.Contains(criteria.IS_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_TERMINATE)) { doWork = true; q = (from r in q where r.REMARK_TERMINATE.Contains(criteria.REMARK_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE.Contains(criteria.IS_DELEGATE) select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_ASSIGNED_SO> GetAll(ARTWORKEntities dc) { return (from p in dc.V_ART_ASSIGNED_SO select p).ToList(); }


}
public class V_ART_ENDTOEND_REPORT_SERVICE
{
    public static V_ART_ENDTOEND_REPORT GetByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else return (from p in dc.V_ART_ENDTOEND_REPORT where p.NUM == NUM select p).FirstOrDefault(); }
    private static int? GetChkByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else { var temp = (from p in dc.V_ART_ENDTOEND_REPORT where p.NUM == NUM select p.NUM).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<V_ART_ENDTOEND_REPORT> GetByItem(V_ART_ENDTOEND_REPORT Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_ENDTOEND_REPORT>(); else return CriteriaBy((from p in dc.V_ART_ENDTOEND_REPORT select p), Item).ToList(); }
    private static IQueryable<V_ART_ENDTOEND_REPORT> CriteriaBy(IQueryable<V_ART_ENDTOEND_REPORT> q, V_ART_ENDTOEND_REPORT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_ID)) { doWork = true; q = (from r in q where r.WF_ID == criteria.WF_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_ID)) { doWork = true; q = (from r in q where r.REQUEST_ID == criteria.REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_SUB_ID)) { doWork = true; q = (from r in q where r.WF_SUB_ID == criteria.WF_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PARENT_SUB_ID)) { doWork = true; q = (from r in q where r.PARENT_SUB_ID == criteria.PARENT_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END == criteria.IS_END select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE == criteria.WF_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_ID)) { doWork = true; q = (from r in q where r.CURRENT_STEP_ID == criteria.CURRENT_STEP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_ID)) { doWork = true; q = (from r in q where r.CURRENT_USER_ID == criteria.CURRENT_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_ROLE_ID)) { doWork = true; q = (from r in q where r.CURRENT_ROLE_ID == criteria.CURRENT_ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_VENDOR_ID)) { doWork = true; q = (from r in q where r.CURRENT_VENDOR_ID == criteria.CURRENT_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CURRENT_CUSTOMER_ID == criteria.CURRENT_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE == criteria.IS_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE == criteria.IS_DELEGATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_NO)) { doWork = true; q = (from r in q where r.REQUEST_NO == criteria.REQUEST_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_NO)) { doWork = true; q = (from r in q where r.WF_NO == criteria.WF_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_CREATE_DATE)) { doWork = true; q = (from r in q where r.REQUEST_CREATE_DATE == criteria.REQUEST_CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_TYPE)) { doWork = true; q = (from r in q where r.PACKAGING_TYPE == criteria.PACKAGING_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_STAUTS)) { doWork = true; q = (from r in q where r.WF_STAUTS == criteria.WF_STAUTS select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_BOM_COMPONENT)) { doWork = true; q = (from r in q where r.ORDER_BOM_COMPONENT == criteria.ORDER_BOM_COMPONENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_NAME_1)) { doWork = true; q = (from r in q where r.CURRENT_STEP_NAME_1 == criteria.CURRENT_STEP_NAME_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_NAME_1)) { doWork = true; q = (from r in q where r.CURRENT_USER_NAME_1 == criteria.CURRENT_USER_NAME_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.DURATION_1)) { doWork = true; q = (from r in q where r.DURATION_1 == criteria.DURATION_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.DUE_DATE_1)) { doWork = true; q = (from r in q where r.DUE_DATE_1 == criteria.DUE_DATE_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_NAME)) { doWork = true; q = (from r in q where r.BRAND_NAME == criteria.BRAND_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_NAME)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_NAME == criteria.ADDITIONAL_BRAND_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO == criteria.PROD_INSP_MEMO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_NO)) { doWork = true; q = (from r in q where r.REFERENCE_NO == criteria.REFERENCE_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO == criteria.SOLD_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO == criteria.SHIP_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY == criteria.COUNTRY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT == criteria.PORT select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO == criteria.IN_TRANSIT_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_ON)) { doWork = true; q = (from r in q where r.CREATE_ON == criteria.CREATE_ON select r); } if (!CheckValue.EqualsDefaultValue(criteria.RDD)) { doWork = true; q = (from r in q where r.RDD == criteria.RDD select r); } if (!CheckValue.EqualsDefaultValue(criteria.PA_NAME)) { doWork = true; q = (from r in q where r.PA_NAME == criteria.PA_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.PG_NAME)) { doWork = true; q = (from r in q where r.PG_NAME == criteria.PG_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_NAME)) { doWork = true; q = (from r in q where r.CURRENT_STEP_NAME == criteria.CURRENT_STEP_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_NAME)) { doWork = true; q = (from r in q where r.CURRENT_USER_NAME == criteria.CURRENT_USER_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.DURATION)) { doWork = true; q = (from r in q where r.DURATION == criteria.DURATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_CREATE_DATE)) { doWork = true; q = (from r in q where r.STEP_CREATE_DATE == criteria.STEP_CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_END_DATE)) { doWork = true; q = (from r in q where r.STEP_END_DATE == criteria.STEP_END_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.USE_DAY)) { doWork = true; q = (from r in q where r.USE_DAY == criteria.USE_DAY select r); } if (!CheckValue.EqualsDefaultValue(criteria.DUE_DATE)) { doWork = true; q = (from r in q where r.DUE_DATE == criteria.DUE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TOTAL_DAY)) { doWork = true; q = (from r in q where r.TOTAL_DAY == criteria.TOTAL_DAY select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON)) { doWork = true; q = (from r in q where r.REASON == criteria.REASON select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROJECT_NAME)) { doWork = true; q = (from r in q where r.PROJECT_NAME == criteria.PROJECT_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATOR_NAME)) { doWork = true; q = (from r in q where r.CREATOR_NAME == criteria.CREATOR_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETTING)) { doWork = true; q = (from r in q where r.MARKETTING == criteria.MARKETTING select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_TXT)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_TXT == criteria.PRIMARY_TYPE_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_ID)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_ID == criteria.REFERENCE_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_NO)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_NO == criteria.REFERENCE_REQUEST_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_TYPE)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_TYPE == criteria.REFERENCE_REQUEST_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_PRODUCT_ID)) { doWork = true; q = (from r in q where r.TYPE_OF_PRODUCT_ID == criteria.TYPE_OF_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REVIEWER_ID)) { doWork = true; q = (from r in q where r.REVIEWER_ID == criteria.REVIEWER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATOR_ID)) { doWork = true; q = (from r in q where r.CREATOR_ID == criteria.CREATOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ID)) { doWork = true; q = (from r in q where r.COMPANY_ID == criteria.COMPANY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_ID)) { doWork = true; q = (from r in q where r.SOLD_TO_ID == criteria.SOLD_TO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_ID)) { doWork = true; q = (from r in q where r.SHIP_TO_ID == criteria.SHIP_TO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_OTHER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_OTHER_ID == criteria.CUSTOMER_OTHER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_ID == criteria.PRIMARY_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_OTHER == criteria.PRIMARY_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_ID == criteria.PRIMARY_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER == criteria.PRIMARY_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_ID)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_ID == criteria.CONTAINER_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER == criteria.CONTAINER_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_ID)) { doWork = true; q = (from r in q where r.LID_TYPE_ID == criteria.LID_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER == criteria.LID_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_ID)) { doWork = true; q = (from r in q where r.PACKING_STYLE_ID == criteria.PACKING_STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER == criteria.PACKING_STYLE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_ID)) { doWork = true; q = (from r in q where r.PACK_SIZE_ID == criteria.PACK_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER == criteria.PACK_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OTHER == criteria.BRAND_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_DELIVERY_DATE)) { doWork = true; q = (from r in q where r.REQUEST_DELIVERY_DATE == criteria.REQUEST_DELIVERY_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIAL_REQUIREMENT)) { doWork = true; q = (from r in q where r.SPECIAL_REQUIREMENT == criteria.SPECIAL_REQUIREMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.OTHER_REQUEST)) { doWork = true; q = (from r in q where r.OTHER_REQUEST == criteria.OTHER_REQUEST select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_FORM_FOLDER_NODE_ID)) { doWork = true; q = (from r in q where r.REQUEST_FORM_FOLDER_NODE_ID == criteria.REQUEST_FORM_FOLDER_NODE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.TWO_P_ID)) { doWork = true; q = (from r in q where r.TWO_P_ID == criteria.TWO_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.THREE_P_ID)) { doWork = true; q = (from r in q where r.THREE_P_ID == criteria.THREE_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPLOAD_BY)) { doWork = true; q = (from r in q where r.UPLOAD_BY == criteria.UPLOAD_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_FORM_CREATE_DATE)) { doWork = true; q = (from r in q where r.REQUEST_FORM_CREATE_DATE == criteria.REQUEST_FORM_CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_KILLPROCESS)) { doWork = true; q = (from r in q where r.REMARK_KILLPROCESS == criteria.REMARK_KILLPROCESS select r); } if (!CheckValue.EqualsDefaultValue(criteria.TERMINATE_REASON_CODE)) { doWork = true; q = (from r in q where r.TERMINATE_REASON_CODE == criteria.TERMINATE_REASON_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_STEP_DURATION_EXTEND)) { doWork = true; q = (from r in q where r.IS_STEP_DURATION_EXTEND == criteria.IS_STEP_DURATION_EXTEND select r); } if (!CheckValue.EqualsDefaultValue(criteria.DURATION_STANDARD)) { doWork = true; q = (from r in q where r.DURATION_STANDARD == criteria.DURATION_STANDARD select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_NAME)) { doWork = true; q = (from r in q where r.VENDOR_NAME == criteria.VENDOR_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NAME)) { doWork = true; q = (from r in q where r.CUSTOMER_NAME == criteria.CUSTOMER_NAME select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_ENDTOEND_REPORT> GetByItemContain(V_ART_ENDTOEND_REPORT Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_ENDTOEND_REPORT>(); else return CriteriaByContains((from p in dc.V_ART_ENDTOEND_REPORT select p), Item).ToList(); }
    private static IQueryable<V_ART_ENDTOEND_REPORT> CriteriaByContains(IQueryable<V_ART_ENDTOEND_REPORT> q, V_ART_ENDTOEND_REPORT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_ID)) { doWork = true; q = (from r in q where r.WF_ID.ToString().Contains(criteria.WF_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_ID)) { doWork = true; q = (from r in q where r.REQUEST_ID.ToString().Contains(criteria.REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_SUB_ID)) { doWork = true; q = (from r in q where r.WF_SUB_ID.ToString().Contains(criteria.WF_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END.Contains(criteria.IS_END) select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE.Contains(criteria.WF_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE.Contains(criteria.IS_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE.Contains(criteria.IS_DELEGATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_NO)) { doWork = true; q = (from r in q where r.REQUEST_NO.Contains(criteria.REQUEST_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_NO)) { doWork = true; q = (from r in q where r.WF_NO.Contains(criteria.WF_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_TYPE)) { doWork = true; q = (from r in q where r.PACKAGING_TYPE.Contains(criteria.PACKAGING_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_STAUTS)) { doWork = true; q = (from r in q where r.WF_STAUTS.Contains(criteria.WF_STAUTS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_BOM_COMPONENT)) { doWork = true; q = (from r in q where r.ORDER_BOM_COMPONENT.Contains(criteria.ORDER_BOM_COMPONENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_NAME_1)) { doWork = true; q = (from r in q where r.CURRENT_STEP_NAME_1.Contains(criteria.CURRENT_STEP_NAME_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_NAME_1)) { doWork = true; q = (from r in q where r.CURRENT_USER_NAME_1.Contains(criteria.CURRENT_USER_NAME_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_NAME)) { doWork = true; q = (from r in q where r.BRAND_NAME.Contains(criteria.BRAND_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_NAME)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_NAME.Contains(criteria.ADDITIONAL_BRAND_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO.Contains(criteria.PROD_INSP_MEMO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_NO)) { doWork = true; q = (from r in q where r.REFERENCE_NO.Contains(criteria.REFERENCE_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO.Contains(criteria.SOLD_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO.Contains(criteria.SHIP_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY.Contains(criteria.COUNTRY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT.Contains(criteria.PORT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO.Contains(criteria.IN_TRANSIT_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_ON)) { doWork = true; q = (from r in q where r.CREATE_ON.Contains(criteria.CREATE_ON) select r); } if (!CheckValue.EqualsDefaultValue(criteria.RDD)) { doWork = true; q = (from r in q where r.RDD.Contains(criteria.RDD) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PA_NAME)) { doWork = true; q = (from r in q where r.PA_NAME.Contains(criteria.PA_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PG_NAME)) { doWork = true; q = (from r in q where r.PG_NAME.Contains(criteria.PG_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_NAME)) { doWork = true; q = (from r in q where r.CURRENT_STEP_NAME.Contains(criteria.CURRENT_STEP_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_NAME)) { doWork = true; q = (from r in q where r.CURRENT_USER_NAME.Contains(criteria.CURRENT_USER_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON)) { doWork = true; q = (from r in q where r.REASON.Contains(criteria.REASON) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROJECT_NAME)) { doWork = true; q = (from r in q where r.PROJECT_NAME.Contains(criteria.PROJECT_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATOR_NAME)) { doWork = true; q = (from r in q where r.CREATOR_NAME.Contains(criteria.CREATOR_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETTING)) { doWork = true; q = (from r in q where r.MARKETTING.Contains(criteria.MARKETTING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_TXT)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_TXT.Contains(criteria.PRIMARY_TYPE_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_NO)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_NO.Contains(criteria.REFERENCE_REQUEST_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_TYPE)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_TYPE.Contains(criteria.REFERENCE_REQUEST_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_OTHER.Contains(criteria.PRIMARY_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER.Contains(criteria.PRIMARY_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER.Contains(criteria.CONTAINER_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER.Contains(criteria.LID_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER.Contains(criteria.PACKING_STYLE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER.Contains(criteria.PACK_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OTHER.Contains(criteria.BRAND_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIAL_REQUIREMENT)) { doWork = true; q = (from r in q where r.SPECIAL_REQUIREMENT.Contains(criteria.SPECIAL_REQUIREMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OTHER_REQUEST)) { doWork = true; q = (from r in q where r.OTHER_REQUEST.Contains(criteria.OTHER_REQUEST) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_KILLPROCESS)) { doWork = true; q = (from r in q where r.REMARK_KILLPROCESS.Contains(criteria.REMARK_KILLPROCESS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_STEP_DURATION_EXTEND)) { doWork = true; q = (from r in q where r.IS_STEP_DURATION_EXTEND.Contains(criteria.IS_STEP_DURATION_EXTEND) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_NAME)) { doWork = true; q = (from r in q where r.VENDOR_NAME.Contains(criteria.VENDOR_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NAME)) { doWork = true; q = (from r in q where r.CUSTOMER_NAME.Contains(criteria.CUSTOMER_NAME) select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_ENDTOEND_REPORT> GetAll(ARTWORKEntities dc) { return (from p in dc.V_ART_ENDTOEND_REPORT select p).ToList(); }


}
public class V_ART_SEARCH_DIELINE_SERVICE
{
    public static V_ART_SEARCH_DIELINE GetByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else return (from p in dc.V_ART_SEARCH_DIELINE where p.NUM == NUM select p).FirstOrDefault(); }
    private static int? GetChkByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else { var temp = (from p in dc.V_ART_SEARCH_DIELINE where p.NUM == NUM select p.NUM).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<V_ART_SEARCH_DIELINE> GetByItem(V_ART_SEARCH_DIELINE Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_SEARCH_DIELINE>(); else return CriteriaBy((from p in dc.V_ART_SEARCH_DIELINE select p), Item).ToList(); }
    private static IQueryable<V_ART_SEARCH_DIELINE> CriteriaBy(IQueryable<V_ART_SEARCH_DIELINE> q, V_ART_SEARCH_DIELINE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_NO)) { doWork = true; q = (from r in q where r.CHECK_LIST_NO == criteria.CHECK_LIST_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_NO)) { doWork = true; q = (from r in q where r.MOCKUP_NO == criteria.MOCKUP_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_DISPLAY_TXT == criteria.PRIMARY_TYPE_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_DISPLAY_TXT == criteria.PRIMARY_SIZE_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_DISPLAY_TXT == criteria.CONTAINER_TYPE_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.LID_TYPE_DISPLAY_TXT == criteria.LID_TYPE_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.PACKING_STYLE_DISPLAY_TXT == criteria.PACKING_STYLE_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.PACK_SIZE_DISPLAY_TXT == criteria.PACK_SIZE_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_TYPE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.PACKAGING_TYPE_DISPLAY_TXT == criteria.PACKAGING_TYPE_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.VENDOR_DISPLAY_TXT == criteria.VENDOR_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.GRADE_OF_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.GRADE_OF_DISPLAY_TXT == criteria.GRADE_OF_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIMENSION_OF_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.DIMENSION_OF_DISPLAY_TXT == criteria.DIMENSION_OF_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHEET_SIZE)) { doWork = true; q = (from r in q where r.SHEET_SIZE == criteria.SHEET_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.FLUTE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.FLUTE_DISPLAY_TXT == criteria.FLUTE_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.STYLE_DISPLAY_TXT == criteria.STYLE_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.TERMINATED_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.TERMINATED_DISPLAY_TXT == criteria.TERMINATED_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.STATUS_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.STATUS_DISPLAY_TXT == criteria.STATUS_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMBER_OF_COLOR_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.NUMBER_OF_COLOR_DISPLAY_TXT == criteria.NUMBER_OF_COLOR_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OF_PRINTING_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.STYLE_OF_PRINTING_DISPLAY_TXT == criteria.STYLE_OF_PRINTING_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID == criteria.CHECK_LIST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_ID == criteria.PRIMARY_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_TYPE_ID)) { doWork = true; q = (from r in q where r.PACKING_TYPE_ID == criteria.PACKING_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR)) { doWork = true; q = (from r in q where r.VENDOR == criteria.VENDOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.GRADE_OF)) { doWork = true; q = (from r in q where r.GRADE_OF == criteria.GRADE_OF select r); } if (!CheckValue.EqualsDefaultValue(criteria.FLUTE)) { doWork = true; q = (from r in q where r.FLUTE == criteria.FLUTE select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_ID)) { doWork = true; q = (from r in q where r.STYLE_ID == criteria.STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMBER_OF_COLOR_ID)) { doWork = true; q = (from r in q where r.NUMBER_OF_COLOR_ID == criteria.NUMBER_OF_COLOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OF_PRINTING)) { doWork = true; q = (from r in q where r.STYLE_OF_PRINTING == criteria.STYLE_OF_PRINTING select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_SEARCH_DIELINE> GetByItemContain(V_ART_SEARCH_DIELINE Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_SEARCH_DIELINE>(); else return CriteriaByContains((from p in dc.V_ART_SEARCH_DIELINE select p), Item).ToList(); }
    private static IQueryable<V_ART_SEARCH_DIELINE> CriteriaByContains(IQueryable<V_ART_SEARCH_DIELINE> q, V_ART_SEARCH_DIELINE criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_NO)) { doWork = true; q = (from r in q where r.CHECK_LIST_NO.Contains(criteria.CHECK_LIST_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_NO)) { doWork = true; q = (from r in q where r.MOCKUP_NO.Contains(criteria.MOCKUP_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_DISPLAY_TXT.Contains(criteria.PRIMARY_TYPE_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_DISPLAY_TXT.Contains(criteria.PRIMARY_SIZE_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_DISPLAY_TXT.Contains(criteria.CONTAINER_TYPE_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.LID_TYPE_DISPLAY_TXT.Contains(criteria.LID_TYPE_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.PACKING_STYLE_DISPLAY_TXT.Contains(criteria.PACKING_STYLE_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.PACK_SIZE_DISPLAY_TXT.Contains(criteria.PACK_SIZE_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_TYPE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.PACKAGING_TYPE_DISPLAY_TXT.Contains(criteria.PACKAGING_TYPE_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.VENDOR_DISPLAY_TXT.Contains(criteria.VENDOR_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.GRADE_OF_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.GRADE_OF_DISPLAY_TXT.Contains(criteria.GRADE_OF_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIMENSION_OF_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.DIMENSION_OF_DISPLAY_TXT.Contains(criteria.DIMENSION_OF_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHEET_SIZE)) { doWork = true; q = (from r in q where r.SHEET_SIZE.Contains(criteria.SHEET_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FLUTE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.FLUTE_DISPLAY_TXT.Contains(criteria.FLUTE_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.STYLE_DISPLAY_TXT.Contains(criteria.STYLE_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TERMINATED_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.TERMINATED_DISPLAY_TXT.Contains(criteria.TERMINATED_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STATUS_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.STATUS_DISPLAY_TXT.Contains(criteria.STATUS_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMBER_OF_COLOR_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.NUMBER_OF_COLOR_DISPLAY_TXT.Contains(criteria.NUMBER_OF_COLOR_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OF_PRINTING_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.STYLE_OF_PRINTING_DISPLAY_TXT.Contains(criteria.STYLE_OF_PRINTING_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID.ToString().Contains(criteria.CHECK_LIST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_SEARCH_DIELINE> GetAll(ARTWORKEntities dc) { return (from p in dc.V_ART_SEARCH_DIELINE select p).ToList(); }


}
public class V_ART_WAREHOUSE_REPORT_SERVICE
{
    public static V_ART_WAREHOUSE_REPORT GetByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else return (from p in dc.V_ART_WAREHOUSE_REPORT where p.NUM == NUM select p).FirstOrDefault(); }
    private static int? GetChkByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else { var temp = (from p in dc.V_ART_WAREHOUSE_REPORT where p.NUM == NUM select p.NUM).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<V_ART_WAREHOUSE_REPORT> GetByItem(V_ART_WAREHOUSE_REPORT Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_WAREHOUSE_REPORT>(); else return CriteriaBy((from p in dc.V_ART_WAREHOUSE_REPORT select p), Item).ToList(); }
    private static IQueryable<V_ART_WAREHOUSE_REPORT> CriteriaBy(IQueryable<V_ART_WAREHOUSE_REPORT> q, V_ART_WAREHOUSE_REPORT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG == criteria.SALES_ORG select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_ITEM)) { doWork = true; q = (from r in q where r.SALES_ORDER_ITEM == criteria.SALES_ORDER_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_CODE)) { doWork = true; q = (from r in q where r.MATERIAL_CODE == criteria.MATERIAL_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DECRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DECRIPTION == criteria.MATERIAL_DECRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_TYPE_ID)) { doWork = true; q = (from r in q where r.PACKAGING_TYPE_ID == criteria.PACKAGING_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_TYPE_NAME)) { doWork = true; q = (from r in q where r.PACKAGING_TYPE_NAME == criteria.PACKAGING_TYPE_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_ITEM_NO)) { doWork = true; q = (from r in q where r.REQUEST_ITEM_NO == criteria.REQUEST_ITEM_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_NAME)) { doWork = true; q = (from r in q where r.BRAND_NAME == criteria.BRAND_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROJECT_NAME)) { doWork = true; q = (from r in q where r.PROJECT_NAME == criteria.PROJECT_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_ID)) { doWork = true; q = (from r in q where r.SOLD_TO_ID == criteria.SOLD_TO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO == criteria.SOLD_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME == criteria.SOLD_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_ID)) { doWork = true; q = (from r in q where r.SHIP_TO_ID == criteria.SHIP_TO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO == criteria.SHIP_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME == criteria.SHIP_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT == criteria.PORT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURCHASE_ORDER_NO)) { doWork = true; q = (from r in q where r.PURCHASE_ORDER_NO == criteria.PURCHASE_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_ITEM_NO)) { doWork = true; q = (from r in q where r.PO_ITEM_NO == criteria.PO_ITEM_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURCHASING_ORG)) { doWork = true; q = (from r in q where r.PURCHASING_ORG == criteria.PURCHASING_ORG select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_NO)) { doWork = true; q = (from r in q where r.VENDOR_NO == criteria.VENDOR_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_NAME)) { doWork = true; q = (from r in q where r.VENDOR_NAME == criteria.VENDOR_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.DOC_DATE)) { doWork = true; q = (from r in q where r.DOC_DATE == criteria.DOC_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DELIVERY_DATE)) { doWork = true; q = (from r in q where r.DELIVERY_DATE == criteria.DELIVERY_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.QUANTITY)) { doWork = true; q = (from r in q where r.QUANTITY == criteria.QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT == criteria.ORDER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ID)) { doWork = true; q = (from r in q where r.COMPANY_ID == criteria.COMPANY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == criteria.PO_COMPLETE_SO_HEADER_ID select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_WAREHOUSE_REPORT> GetByItemContain(V_ART_WAREHOUSE_REPORT Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_WAREHOUSE_REPORT>(); else return CriteriaByContains((from p in dc.V_ART_WAREHOUSE_REPORT select p), Item).ToList(); }
    private static IQueryable<V_ART_WAREHOUSE_REPORT> CriteriaByContains(IQueryable<V_ART_WAREHOUSE_REPORT> q, V_ART_WAREHOUSE_REPORT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG.Contains(criteria.SALES_ORG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_CODE)) { doWork = true; q = (from r in q where r.MATERIAL_CODE.Contains(criteria.MATERIAL_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DECRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DECRIPTION.Contains(criteria.MATERIAL_DECRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_TYPE_NAME)) { doWork = true; q = (from r in q where r.PACKAGING_TYPE_NAME.Contains(criteria.PACKAGING_TYPE_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_ITEM_NO)) { doWork = true; q = (from r in q where r.REQUEST_ITEM_NO.Contains(criteria.REQUEST_ITEM_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_NAME)) { doWork = true; q = (from r in q where r.BRAND_NAME.Contains(criteria.BRAND_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROJECT_NAME)) { doWork = true; q = (from r in q where r.PROJECT_NAME.Contains(criteria.PROJECT_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO.Contains(criteria.SOLD_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME.Contains(criteria.SOLD_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO.Contains(criteria.SHIP_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME.Contains(criteria.SHIP_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT.Contains(criteria.PORT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURCHASE_ORDER_NO)) { doWork = true; q = (from r in q where r.PURCHASE_ORDER_NO.Contains(criteria.PURCHASE_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_ITEM_NO)) { doWork = true; q = (from r in q where r.PO_ITEM_NO.Contains(criteria.PO_ITEM_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURCHASING_ORG)) { doWork = true; q = (from r in q where r.PURCHASING_ORG.Contains(criteria.PURCHASING_ORG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_NO)) { doWork = true; q = (from r in q where r.VENDOR_NO.Contains(criteria.VENDOR_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_NAME)) { doWork = true; q = (from r in q where r.VENDOR_NAME.Contains(criteria.VENDOR_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DOC_DATE)) { doWork = true; q = (from r in q where r.DOC_DATE.Contains(criteria.DOC_DATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DELIVERY_DATE)) { doWork = true; q = (from r in q where r.DELIVERY_DATE.Contains(criteria.DELIVERY_DATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.QUANTITY)) { doWork = true; q = (from r in q where r.QUANTITY.Contains(criteria.QUANTITY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT.Contains(criteria.ORDER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID.ToString().Contains(criteria.PO_COMPLETE_SO_HEADER_ID.ToString()) select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_WAREHOUSE_REPORT> GetAll(ARTWORKEntities dc) { return (from p in dc.V_ART_WAREHOUSE_REPORT select p).ToList(); }


}
public class V_ART_WF_ALL_PROCESS_SERVICE
{
    public static V_ART_WF_ALL_PROCESS GetByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else return (from p in dc.V_ART_WF_ALL_PROCESS where p.NUM == NUM select p).FirstOrDefault(); }
    private static int? GetChkByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else { var temp = (from p in dc.V_ART_WF_ALL_PROCESS where p.NUM == NUM select p.NUM).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<V_ART_WF_ALL_PROCESS> GetByItem(V_ART_WF_ALL_PROCESS Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_WF_ALL_PROCESS>(); else return CriteriaBy((from p in dc.V_ART_WF_ALL_PROCESS select p), Item).ToList(); }
    private static IQueryable<V_ART_WF_ALL_PROCESS> CriteriaBy(IQueryable<V_ART_WF_ALL_PROCESS> q, V_ART_WF_ALL_PROCESS criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE == criteria.WF_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_SUB_ID)) { doWork = true; q = (from r in q where r.WF_SUB_ID == criteria.WF_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_ID)) { doWork = true; q = (from r in q where r.WF_ID == criteria.WF_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_NO)) { doWork = true; q = (from r in q where r.WF_NO == criteria.WF_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PARENT_SUB_ID)) { doWork = true; q = (from r in q where r.PARENT_SUB_ID == criteria.PARENT_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_ID)) { doWork = true; q = (from r in q where r.CURRENT_STEP_ID == criteria.CURRENT_STEP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_ID)) { doWork = true; q = (from r in q where r.CURRENT_USER_ID == criteria.CURRENT_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_ROLE_ID)) { doWork = true; q = (from r in q where r.CURRENT_ROLE_ID == criteria.CURRENT_ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_VENDOR_ID)) { doWork = true; q = (from r in q where r.CURRENT_VENDOR_ID == criteria.CURRENT_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CURRENT_CUSTOMER_ID == criteria.CURRENT_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END == criteria.IS_END select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE == criteria.IS_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_TERMINATE)) { doWork = true; q = (from r in q where r.REMARK_TERMINATE == criteria.REMARK_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE == criteria.IS_DELEGATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_NAME)) { doWork = true; q = (from r in q where r.CURRENT_STEP_NAME == criteria.CURRENT_STEP_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_NAME)) { doWork = true; q = (from r in q where r.CURRENT_USER_NAME == criteria.CURRENT_USER_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_NO)) { doWork = true; q = (from r in q where r.REQUEST_NO == criteria.REQUEST_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_ID)) { doWork = true; q = (from r in q where r.REQUEST_ID == criteria.REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATOR_ID)) { doWork = true; q = (from r in q where r.CREATOR_ID == criteria.CREATOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.OWNER_ID)) { doWork = true; q = (from r in q where r.OWNER_ID == criteria.OWNER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_KILLPROCESS)) { doWork = true; q = (from r in q where r.REMARK_KILLPROCESS == criteria.REMARK_KILLPROCESS select r); } if (!CheckValue.EqualsDefaultValue(criteria.TERMINATE_REASON_CODE)) { doWork = true; q = (from r in q where r.TERMINATE_REASON_CODE == criteria.TERMINATE_REASON_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_STEP_DURATION_EXTEND)) { doWork = true; q = (from r in q where r.IS_STEP_DURATION_EXTEND == criteria.IS_STEP_DURATION_EXTEND select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_WF_ALL_PROCESS> GetByItemContain(V_ART_WF_ALL_PROCESS Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_WF_ALL_PROCESS>(); else return CriteriaByContains((from p in dc.V_ART_WF_ALL_PROCESS select p), Item).ToList(); }
    private static IQueryable<V_ART_WF_ALL_PROCESS> CriteriaByContains(IQueryable<V_ART_WF_ALL_PROCESS> q, V_ART_WF_ALL_PROCESS criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_TYPE)) { doWork = true; q = (from r in q where r.WF_TYPE.Contains(criteria.WF_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_SUB_ID)) { doWork = true; q = (from r in q where r.WF_SUB_ID.ToString().Contains(criteria.WF_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_ID)) { doWork = true; q = (from r in q where r.WF_ID.ToString().Contains(criteria.WF_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.WF_NO)) { doWork = true; q = (from r in q where r.WF_NO.Contains(criteria.WF_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END.Contains(criteria.IS_END) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE.Contains(criteria.IS_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_TERMINATE)) { doWork = true; q = (from r in q where r.REMARK_TERMINATE.Contains(criteria.REMARK_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE.Contains(criteria.IS_DELEGATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_NAME)) { doWork = true; q = (from r in q where r.CURRENT_STEP_NAME.Contains(criteria.CURRENT_STEP_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_NAME)) { doWork = true; q = (from r in q where r.CURRENT_USER_NAME.Contains(criteria.CURRENT_USER_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_NO)) { doWork = true; q = (from r in q where r.REQUEST_NO.Contains(criteria.REQUEST_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_ID)) { doWork = true; q = (from r in q where r.REQUEST_ID.ToString().Contains(criteria.REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_KILLPROCESS)) { doWork = true; q = (from r in q where r.REMARK_KILLPROCESS.Contains(criteria.REMARK_KILLPROCESS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_STEP_DURATION_EXTEND)) { doWork = true; q = (from r in q where r.IS_STEP_DURATION_EXTEND.Contains(criteria.IS_STEP_DURATION_EXTEND) select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_WF_ALL_PROCESS> GetAll(ARTWORKEntities dc) { return (from p in dc.V_ART_WF_ALL_PROCESS select p).ToList(); }


}
public class V_ART_WF_DASHBOARD_SERVICE
{
    public static V_ART_WF_DASHBOARD GetByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else return (from p in dc.V_ART_WF_DASHBOARD where p.NUM == NUM select p).FirstOrDefault(); }
    private static int? GetChkByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else { var temp = (from p in dc.V_ART_WF_DASHBOARD where p.NUM == NUM select p.NUM).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<V_ART_WF_DASHBOARD> GetByItem(V_ART_WF_DASHBOARD Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_WF_DASHBOARD>(); else return CriteriaBy((from p in dc.V_ART_WF_DASHBOARD select p), Item).ToList(); }
    private static IQueryable<V_ART_WF_DASHBOARD> CriteriaBy(IQueryable<V_ART_WF_DASHBOARD> q, V_ART_WF_DASHBOARD criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID == criteria.CHECK_LIST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_NO)) { doWork = true; q = (from r in q where r.CHECK_LIST_NO == criteria.CHECK_LIST_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.TRF_REF_NO)) { doWork = true; q = (from r in q where r.TRF_REF_NO == criteria.TRF_REF_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_PRODUCT_ID)) { doWork = true; q = (from r in q where r.TYPE_OF_PRODUCT_ID == criteria.TYPE_OF_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ID)) { doWork = true; q = (from r in q where r.COMPANY_ID == criteria.COMPANY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_ID)) { doWork = true; q = (from r in q where r.SOLD_TO_ID == criteria.SOLD_TO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_ID)) { doWork = true; q = (from r in q where r.SHIP_TO_ID == criteria.SHIP_TO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.RD_PERSON_ID)) { doWork = true; q = (from r in q where r.RD_PERSON_ID == criteria.RD_PERSON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_ID == criteria.PRIMARY_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_OTHER == criteria.PRIMARY_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_ID == criteria.PRIMARY_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER == criteria.PRIMARY_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_ID)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_ID == criteria.CONTAINER_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER == criteria.CONTAINER_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_ID)) { doWork = true; q = (from r in q where r.LID_TYPE_ID == criteria.LID_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER == criteria.LID_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_ID)) { doWork = true; q = (from r in q where r.PACKING_STYLE_ID == criteria.PACKING_STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER == criteria.PACKING_STYLE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_ID)) { doWork = true; q = (from r in q where r.PACK_SIZE_ID == criteria.PACK_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER == criteria.PACK_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_MATERIAL)) { doWork = true; q = (from r in q where r.PRIMARY_MATERIAL == criteria.PRIMARY_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_DELIVERY_DATE)) { doWork = true; q = (from r in q where r.REQUEST_DELIVERY_DATE == criteria.REQUEST_DELIVERY_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.OTHER_REQUESTS)) { doWork = true; q = (from r in q where r.OTHER_REQUESTS == criteria.OTHER_REQUESTS select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OTHER == criteria.BRAND_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OEM_ID)) { doWork = true; q = (from r in q where r.BRAND_OEM_ID == criteria.BRAND_OEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OEM_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OEM_OTHER == criteria.BRAND_OEM_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_PHYSICAL_MOCKUP)) { doWork = true; q = (from r in q where r.REQUEST_PHYSICAL_MOCKUP == criteria.REQUEST_PHYSICAL_MOCKUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATOR_ID)) { doWork = true; q = (from r in q where r.CREATOR_ID == criteria.CREATOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_NO)) { doWork = true; q = (from r in q where r.MOCKUP_NO == criteria.MOCKUP_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_STATUS)) { doWork = true; q = (from r in q where r.MOCKUP_STATUS == criteria.MOCKUP_STATUS select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_TYPE_ID)) { doWork = true; q = (from r in q where r.PACKING_TYPE_ID == criteria.PACKING_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINT_SYSTEM_ID)) { doWork = true; q = (from r in q where r.PRINT_SYSTEM_ID == criteria.PRINT_SYSTEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMBER_OF_COLOR_ID)) { doWork = true; q = (from r in q where r.NUMBER_OF_COLOR_ID == criteria.NUMBER_OF_COLOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOX_COLOR_ID)) { doWork = true; q = (from r in q where r.BOX_COLOR_ID == criteria.BOX_COLOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COATING_ID)) { doWork = true; q = (from r in q where r.COATING_ID == criteria.COATING_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURPOSE_OF)) { doWork = true; q = (from r in q where r.PURPOSE_OF == criteria.PURPOSE_OF select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_ID)) { doWork = true; q = (from r in q where r.STYLE_ID == criteria.STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_TYPE_OTHER == criteria.PACKING_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINT_SYSTEM_OTHER)) { doWork = true; q = (from r in q where r.PRINT_SYSTEM_OTHER == criteria.PRINT_SYSTEM_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMBER_OF_COLOR_OTHER)) { doWork = true; q = (from r in q where r.NUMBER_OF_COLOR_OTHER == criteria.NUMBER_OF_COLOR_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOX_COLOR_OTHER)) { doWork = true; q = (from r in q where r.BOX_COLOR_OTHER == criteria.BOX_COLOR_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OTHER)) { doWork = true; q = (from r in q where r.STYLE_OTHER == criteria.STYLE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.COATING_OTHER)) { doWork = true; q = (from r in q where r.COATING_OTHER == criteria.COATING_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID == criteria.MOCKUP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID == criteria.MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_ID)) { doWork = true; q = (from r in q where r.CURRENT_STEP_ID == criteria.CURRENT_STEP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_ROLE_ID)) { doWork = true; q = (from r in q where r.CURRENT_ROLE_ID == criteria.CURRENT_ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_ID)) { doWork = true; q = (from r in q where r.CURRENT_USER_ID == criteria.CURRENT_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE_PROCESS)) { doWork = true; q = (from r in q where r.CREATE_DATE_PROCESS == criteria.CREATE_DATE_PROCESS select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE_CHECK_LIST)) { doWork = true; q = (from r in q where r.CREATE_DATE_CHECK_LIST == criteria.CREATE_DATE_CHECK_LIST select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS == criteria.CREATE_BY_PROCESS select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_CHECK_LIST)) { doWork = true; q = (from r in q where r.CREATE_BY_CHECK_LIST == criteria.CREATE_BY_CHECK_LIST select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END == criteria.IS_END select r); } if (!CheckValue.EqualsDefaultValue(criteria.PARENT_MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.PARENT_MOCKUP_SUB_ID == criteria.PARENT_MOCKUP_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NODE_ID)) { doWork = true; q = (from r in q where r.NODE_ID == criteria.NODE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_FOR_DESIGN)) { doWork = true; q = (from r in q where r.CHECK_LIST_FOR_DESIGN == criteria.CHECK_LIST_FOR_DESIGN select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_FOR_DIE_LINE)) { doWork = true; q = (from r in q where r.REQUEST_FOR_DIE_LINE == criteria.REQUEST_FOR_DIE_LINE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROJECT_NAME)) { doWork = true; q = (from r in q where r.PROJECT_NAME == criteria.PROJECT_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.REVIEWER)) { doWork = true; q = (from r in q where r.REVIEWER == criteria.REVIEWER select r); } if (!CheckValue.EqualsDefaultValue(criteria.TWO_P_ID)) { doWork = true; q = (from r in q where r.TWO_P_ID == criteria.TWO_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.THREE_P_ID)) { doWork = true; q = (from r in q where r.THREE_P_ID == criteria.THREE_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REF_PRODUCT_CODE)) { doWork = true; q = (from r in q where r.REF_PRODUCT_CODE == criteria.REF_PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_VENDOR_ID)) { doWork = true; q = (from r in q where r.CURRENT_VENDOR_ID == criteria.CURRENT_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CURRENT_CUSTOMER_ID == criteria.CURRENT_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOMINATED_SPEC)) { doWork = true; q = (from r in q where r.NOMINATED_SPEC == criteria.NOMINATED_SPEC select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOMINATED_CONTAINER_VENDOR)) { doWork = true; q = (from r in q where r.NOMINATED_CONTAINER_VENDOR == criteria.NOMINATED_CONTAINER_VENDOR select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_OTHER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_OTHER_ID == criteria.CUSTOMER_OTHER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.SOLD_TO_DISPLAY_TXT == criteria.SOLD_TO_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.SHIP_TO_DISPLAY_TXT == criteria.SHIP_TO_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.BRAND_DISPLAY_TXT == criteria.BRAND_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_TYPE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.PACKING_TYPE_DISPLAY_TXT == criteria.PACKING_TYPE_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_CHECK_LIST_TITLE)) { doWork = true; q = (from r in q where r.CREATE_BY_CHECK_LIST_TITLE == criteria.CREATE_BY_CHECK_LIST_TITLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_CHECK_LIST_FIRST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_CHECK_LIST_FIRST_NAME == criteria.CREATE_BY_CHECK_LIST_FIRST_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_CHECK_LIST_LAST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_CHECK_LIST_LAST_NAME == criteria.CREATE_BY_CHECK_LIST_LAST_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS_TITLE)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS_TITLE == criteria.CREATE_BY_PROCESS_TITLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS_FIRST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS_FIRST_NAME == criteria.CREATE_BY_PROCESS_FIRST_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS_LAST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS_LAST_NAME == criteria.CREATE_BY_PROCESS_LAST_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.CURRENT_STEP_DISPLAY_TXT == criteria.CURRENT_STEP_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_ID)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_ID == criteria.REFERENCE_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_NO)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_NO == criteria.REFERENCE_REQUEST_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_TYPE)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_TYPE == criteria.REFERENCE_REQUEST_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.DURATION)) { doWork = true; q = (from r in q where r.DURATION == criteria.DURATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.DURATION_EXTEND)) { doWork = true; q = (from r in q where r.DURATION_EXTEND == criteria.DURATION_EXTEND select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_DESCRIPTION)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_DESCRIPTION == criteria.STEP_MOCKUP_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE == criteria.IS_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_TERMINATE)) { doWork = true; q = (from r in q where r.REMARK_TERMINATE == criteria.REMARK_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE == criteria.IS_DELEGATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_CODE)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_CODE == criteria.STEP_MOCKUP_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID_RESPONSE)) { doWork = true; q = (from r in q where r.ROLE_ID_RESPONSE == criteria.ROLE_ID_RESPONSE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_KILLPROCESS)) { doWork = true; q = (from r in q where r.REMARK_KILLPROCESS == criteria.REMARK_KILLPROCESS select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_STEP_DURATION_EXTEND)) { doWork = true; q = (from r in q where r.IS_STEP_DURATION_EXTEND == criteria.IS_STEP_DURATION_EXTEND select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_WF_DASHBOARD> GetByItemContain(V_ART_WF_DASHBOARD Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_WF_DASHBOARD>(); else return CriteriaByContains((from p in dc.V_ART_WF_DASHBOARD select p), Item).ToList(); }
    private static IQueryable<V_ART_WF_DASHBOARD> CriteriaByContains(IQueryable<V_ART_WF_DASHBOARD> q, V_ART_WF_DASHBOARD criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_ID)) { doWork = true; q = (from r in q where r.CHECK_LIST_ID.ToString().Contains(criteria.CHECK_LIST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_NO)) { doWork = true; q = (from r in q where r.CHECK_LIST_NO.Contains(criteria.CHECK_LIST_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TRF_REF_NO)) { doWork = true; q = (from r in q where r.TRF_REF_NO.Contains(criteria.TRF_REF_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_OTHER.Contains(criteria.PRIMARY_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER.Contains(criteria.PRIMARY_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER.Contains(criteria.CONTAINER_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER.Contains(criteria.LID_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER.Contains(criteria.PACKING_STYLE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER.Contains(criteria.PACK_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_MATERIAL)) { doWork = true; q = (from r in q where r.PRIMARY_MATERIAL.Contains(criteria.PRIMARY_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OTHER_REQUESTS)) { doWork = true; q = (from r in q where r.OTHER_REQUESTS.Contains(criteria.OTHER_REQUESTS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OTHER.Contains(criteria.BRAND_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OEM_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OEM_OTHER.Contains(criteria.BRAND_OEM_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_PHYSICAL_MOCKUP)) { doWork = true; q = (from r in q where r.REQUEST_PHYSICAL_MOCKUP.Contains(criteria.REQUEST_PHYSICAL_MOCKUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_NO)) { doWork = true; q = (from r in q where r.MOCKUP_NO.Contains(criteria.MOCKUP_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PURPOSE_OF)) { doWork = true; q = (from r in q where r.PURPOSE_OF.Contains(criteria.PURPOSE_OF) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_TYPE_OTHER.Contains(criteria.PACKING_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRINT_SYSTEM_OTHER)) { doWork = true; q = (from r in q where r.PRINT_SYSTEM_OTHER.Contains(criteria.PRINT_SYSTEM_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NUMBER_OF_COLOR_OTHER)) { doWork = true; q = (from r in q where r.NUMBER_OF_COLOR_OTHER.Contains(criteria.NUMBER_OF_COLOR_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOX_COLOR_OTHER)) { doWork = true; q = (from r in q where r.BOX_COLOR_OTHER.Contains(criteria.BOX_COLOR_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STYLE_OTHER)) { doWork = true; q = (from r in q where r.STYLE_OTHER.Contains(criteria.STYLE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COATING_OTHER)) { doWork = true; q = (from r in q where r.COATING_OTHER.Contains(criteria.COATING_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_ID)) { doWork = true; q = (from r in q where r.MOCKUP_ID.ToString().Contains(criteria.MOCKUP_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MOCKUP_SUB_ID)) { doWork = true; q = (from r in q where r.MOCKUP_SUB_ID.ToString().Contains(criteria.MOCKUP_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_CHECK_LIST)) { doWork = true; q = (from r in q where r.CREATE_BY_CHECK_LIST.ToString().Contains(criteria.CREATE_BY_CHECK_LIST.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END.Contains(criteria.IS_END) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHECK_LIST_FOR_DESIGN)) { doWork = true; q = (from r in q where r.CHECK_LIST_FOR_DESIGN.Contains(criteria.CHECK_LIST_FOR_DESIGN) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_FOR_DIE_LINE)) { doWork = true; q = (from r in q where r.REQUEST_FOR_DIE_LINE.Contains(criteria.REQUEST_FOR_DIE_LINE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROJECT_NAME)) { doWork = true; q = (from r in q where r.PROJECT_NAME.Contains(criteria.PROJECT_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REF_PRODUCT_CODE)) { doWork = true; q = (from r in q where r.REF_PRODUCT_CODE.Contains(criteria.REF_PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOMINATED_SPEC)) { doWork = true; q = (from r in q where r.NOMINATED_SPEC.Contains(criteria.NOMINATED_SPEC) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NOMINATED_CONTAINER_VENDOR)) { doWork = true; q = (from r in q where r.NOMINATED_CONTAINER_VENDOR.Contains(criteria.NOMINATED_CONTAINER_VENDOR) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.SOLD_TO_DISPLAY_TXT.Contains(criteria.SOLD_TO_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.SHIP_TO_DISPLAY_TXT.Contains(criteria.SHIP_TO_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.BRAND_DISPLAY_TXT.Contains(criteria.BRAND_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_TYPE_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.PACKING_TYPE_DISPLAY_TXT.Contains(criteria.PACKING_TYPE_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_CHECK_LIST_TITLE)) { doWork = true; q = (from r in q where r.CREATE_BY_CHECK_LIST_TITLE.Contains(criteria.CREATE_BY_CHECK_LIST_TITLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_CHECK_LIST_FIRST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_CHECK_LIST_FIRST_NAME.Contains(criteria.CREATE_BY_CHECK_LIST_FIRST_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_CHECK_LIST_LAST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_CHECK_LIST_LAST_NAME.Contains(criteria.CREATE_BY_CHECK_LIST_LAST_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS_TITLE)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS_TITLE.Contains(criteria.CREATE_BY_PROCESS_TITLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS_FIRST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS_FIRST_NAME.Contains(criteria.CREATE_BY_PROCESS_FIRST_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS_LAST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS_LAST_NAME.Contains(criteria.CREATE_BY_PROCESS_LAST_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.CURRENT_STEP_DISPLAY_TXT.Contains(criteria.CURRENT_STEP_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_NO)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_NO.Contains(criteria.REFERENCE_REQUEST_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_TYPE)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_TYPE.Contains(criteria.REFERENCE_REQUEST_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_DESCRIPTION)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_DESCRIPTION.Contains(criteria.STEP_MOCKUP_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE.Contains(criteria.IS_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_TERMINATE)) { doWork = true; q = (from r in q where r.REMARK_TERMINATE.Contains(criteria.REMARK_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE.Contains(criteria.IS_DELEGATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_MOCKUP_CODE)) { doWork = true; q = (from r in q where r.STEP_MOCKUP_CODE.Contains(criteria.STEP_MOCKUP_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_KILLPROCESS)) { doWork = true; q = (from r in q where r.REMARK_KILLPROCESS.Contains(criteria.REMARK_KILLPROCESS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_STEP_DURATION_EXTEND)) { doWork = true; q = (from r in q where r.IS_STEP_DURATION_EXTEND.Contains(criteria.IS_STEP_DURATION_EXTEND) select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_WF_DASHBOARD> GetAll(ARTWORKEntities dc) { return (from p in dc.V_ART_WF_DASHBOARD select p).ToList(); }


}
public class V_ART_WF_DASHBOARD_ARTWORK_SERVICE
{
    public static V_ART_WF_DASHBOARD_ARTWORK GetByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else return (from p in dc.V_ART_WF_DASHBOARD_ARTWORK where p.NUM == NUM select p).FirstOrDefault(); }
    private static int? GetChkByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else { var temp = (from p in dc.V_ART_WF_DASHBOARD_ARTWORK where p.NUM == NUM select p.NUM).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<V_ART_WF_DASHBOARD_ARTWORK> GetByItem(V_ART_WF_DASHBOARD_ARTWORK Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_WF_DASHBOARD_ARTWORK>(); else return CriteriaBy((from p in dc.V_ART_WF_DASHBOARD_ARTWORK select p), Item).ToList(); }
    private static IQueryable<V_ART_WF_DASHBOARD_ARTWORK> CriteriaBy(IQueryable<V_ART_WF_DASHBOARD_ARTWORK> q, V_ART_WF_DASHBOARD_ARTWORK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_ID)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_ID == criteria.REFERENCE_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_NO)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_NO == criteria.REFERENCE_REQUEST_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_TYPE)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_TYPE == criteria.REFERENCE_REQUEST_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_ARTWORK)) { doWork = true; q = (from r in q where r.TYPE_OF_ARTWORK == criteria.TYPE_OF_ARTWORK select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_NO)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_NO == criteria.ARTWORK_REQUEST_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROJECT_NAME)) { doWork = true; q = (from r in q where r.PROJECT_NAME == criteria.PROJECT_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_PRODUCT_ID)) { doWork = true; q = (from r in q where r.TYPE_OF_PRODUCT_ID == criteria.TYPE_OF_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REVIEWER_ID)) { doWork = true; q = (from r in q where r.REVIEWER_ID == criteria.REVIEWER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPANY_ID)) { doWork = true; q = (from r in q where r.COMPANY_ID == criteria.COMPANY_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_ID)) { doWork = true; q = (from r in q where r.SOLD_TO_ID == criteria.SOLD_TO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_ID)) { doWork = true; q = (from r in q where r.SHIP_TO_ID == criteria.SHIP_TO_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_OTHER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_OTHER_ID == criteria.CUSTOMER_OTHER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_ID == criteria.PRIMARY_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_OTHER == criteria.PRIMARY_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_ID)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_ID == criteria.PRIMARY_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER == criteria.PRIMARY_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_ID)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_ID == criteria.CONTAINER_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER == criteria.CONTAINER_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_ID)) { doWork = true; q = (from r in q where r.LID_TYPE_ID == criteria.LID_TYPE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER == criteria.LID_TYPE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_ID)) { doWork = true; q = (from r in q where r.PACKING_STYLE_ID == criteria.PACKING_STYLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER == criteria.PACKING_STYLE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_ID)) { doWork = true; q = (from r in q where r.PACK_SIZE_ID == criteria.PACK_SIZE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER == criteria.PACK_SIZE_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OTHER == criteria.BRAND_OTHER select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_DELIVERY_DATE)) { doWork = true; q = (from r in q where r.REQUEST_DELIVERY_DATE == criteria.REQUEST_DELIVERY_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIAL_REQUIREMENT)) { doWork = true; q = (from r in q where r.SPECIAL_REQUIREMENT == criteria.SPECIAL_REQUIREMENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.OTHER_REQUEST)) { doWork = true; q = (from r in q where r.OTHER_REQUEST == criteria.OTHER_REQUEST select r); } if (!CheckValue.EqualsDefaultValue(criteria.TWO_P_ID)) { doWork = true; q = (from r in q where r.TWO_P_ID == criteria.TWO_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.THREE_P_ID)) { doWork = true; q = (from r in q where r.THREE_P_ID == criteria.THREE_P_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE_ARTWORK_REQUEST)) { doWork = true; q = (from r in q where r.CREATE_DATE_ARTWORK_REQUEST == criteria.CREATE_DATE_ARTWORK_REQUEST select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_ARTWORK_REQUEST)) { doWork = true; q = (from r in q where r.CREATE_BY_ARTWORK_REQUEST == criteria.CREATE_BY_ARTWORK_REQUEST select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_ITEM_ID)) { doWork = true; q = (from r in q where r.ARTWORK_ITEM_ID == criteria.ARTWORK_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_ITEM_NO)) { doWork = true; q = (from r in q where r.REQUEST_ITEM_NO == criteria.REQUEST_ITEM_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.SOLD_TO_DISPLAY_TXT == criteria.SOLD_TO_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.SHIP_TO_DISPLAY_TXT == criteria.SHIP_TO_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.BRAND_DISPLAY_TXT == criteria.BRAND_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_ID)) { doWork = true; q = (from r in q where r.CURRENT_STEP_ID == criteria.CURRENT_STEP_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_USER_ID)) { doWork = true; q = (from r in q where r.CURRENT_USER_ID == criteria.CURRENT_USER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_ROLE_ID)) { doWork = true; q = (from r in q where r.CURRENT_ROLE_ID == criteria.CURRENT_ROLE_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_VENDOR_ID)) { doWork = true; q = (from r in q where r.CURRENT_VENDOR_ID == criteria.CURRENT_VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CURRENT_CUSTOMER_ID == criteria.CURRENT_CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK == criteria.REMARK select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END == criteria.IS_END select r); } if (!CheckValue.EqualsDefaultValue(criteria.REASON_ID)) { doWork = true; q = (from r in q where r.REASON_ID == criteria.REASON_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS_TITLE)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS_TITLE == criteria.CREATE_BY_PROCESS_TITLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS_FIRST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS_FIRST_NAME == criteria.CREATE_BY_PROCESS_FIRST_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS_LAST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS_LAST_NAME == criteria.CREATE_BY_PROCESS_LAST_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.CURRENT_STEP_DISPLAY_TXT == criteria.CURRENT_STEP_DISPLAY_TXT select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_ARTWORK_REQUEST_TITLE)) { doWork = true; q = (from r in q where r.CREATE_BY_ARTWORK_REQUEST_TITLE == criteria.CREATE_BY_ARTWORK_REQUEST_TITLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_ARTWORK_REQUEST_FIRST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_ARTWORK_REQUEST_FIRST_NAME == criteria.CREATE_BY_ARTWORK_REQUEST_FIRST_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_ARTWORK_REQUEST_LAST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_ARTWORK_REQUEST_LAST_NAME == criteria.CREATE_BY_ARTWORK_REQUEST_LAST_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID == criteria.ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PARENT_ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.PARENT_ARTWORK_SUB_ID == criteria.PARENT_ARTWORK_SUB_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID == criteria.ARTWORK_REQUEST_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE_PROCESS)) { doWork = true; q = (from r in q where r.CREATE_DATE_PROCESS == criteria.CREATE_DATE_PROCESS select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS == criteria.CREATE_BY_PROCESS select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_TERMINATE)) { doWork = true; q = (from r in q where r.REMARK_TERMINATE == criteria.REMARK_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE == criteria.IS_DELEGATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE == criteria.IS_TERMINATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DURATION)) { doWork = true; q = (from r in q where r.DURATION == criteria.DURATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.DURATION_EXTEND)) { doWork = true; q = (from r in q where r.DURATION_EXTEND == criteria.DURATION_EXTEND select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_DESCRIPTION)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_DESCRIPTION == criteria.STEP_ARTWORK_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_CODE)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_CODE == criteria.STEP_ARTWORK_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROLE_ID_RESPONSE)) { doWork = true; q = (from r in q where r.ROLE_ID_RESPONSE == criteria.ROLE_ID_RESPONSE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_KILLPROCESS)) { doWork = true; q = (from r in q where r.REMARK_KILLPROCESS == criteria.REMARK_KILLPROCESS select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_STEP_DURATION_EXTEND)) { doWork = true; q = (from r in q where r.IS_STEP_DURATION_EXTEND == criteria.IS_STEP_DURATION_EXTEND select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_WF_DASHBOARD_ARTWORK> GetByItemContain(V_ART_WF_DASHBOARD_ARTWORK Item, ARTWORKEntities dc) { if (Item == null) return new List<V_ART_WF_DASHBOARD_ARTWORK>(); else return CriteriaByContains((from p in dc.V_ART_WF_DASHBOARD_ARTWORK select p), Item).ToList(); }
    private static IQueryable<V_ART_WF_DASHBOARD_ARTWORK> CriteriaByContains(IQueryable<V_ART_WF_DASHBOARD_ARTWORK> q, V_ART_WF_DASHBOARD_ARTWORK criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_NO)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_NO.Contains(criteria.REFERENCE_REQUEST_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REFERENCE_REQUEST_TYPE)) { doWork = true; q = (from r in q where r.REFERENCE_REQUEST_TYPE.Contains(criteria.REFERENCE_REQUEST_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE_OF_ARTWORK)) { doWork = true; q = (from r in q where r.TYPE_OF_ARTWORK.Contains(criteria.TYPE_OF_ARTWORK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_NO)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_NO.Contains(criteria.ARTWORK_REQUEST_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROJECT_NAME)) { doWork = true; q = (from r in q where r.PROJECT_NAME.Contains(criteria.PROJECT_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_TYPE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_TYPE_OTHER.Contains(criteria.PRIMARY_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE_OTHER.Contains(criteria.PRIMARY_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE_OTHER)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE_OTHER.Contains(criteria.CONTAINER_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE_OTHER)) { doWork = true; q = (from r in q where r.LID_TYPE_OTHER.Contains(criteria.LID_TYPE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE_OTHER)) { doWork = true; q = (from r in q where r.PACKING_STYLE_OTHER.Contains(criteria.PACKING_STYLE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE_OTHER)) { doWork = true; q = (from r in q where r.PACK_SIZE_OTHER.Contains(criteria.PACK_SIZE_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_OTHER)) { doWork = true; q = (from r in q where r.BRAND_OTHER.Contains(criteria.BRAND_OTHER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SPECIAL_REQUIREMENT)) { doWork = true; q = (from r in q where r.SPECIAL_REQUIREMENT.Contains(criteria.SPECIAL_REQUIREMENT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OTHER_REQUEST)) { doWork = true; q = (from r in q where r.OTHER_REQUEST.Contains(criteria.OTHER_REQUEST) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_ARTWORK_REQUEST)) { doWork = true; q = (from r in q where r.CREATE_BY_ARTWORK_REQUEST.ToString().Contains(criteria.CREATE_BY_ARTWORK_REQUEST.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_ITEM_ID)) { doWork = true; q = (from r in q where r.ARTWORK_ITEM_ID.ToString().Contains(criteria.ARTWORK_ITEM_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REQUEST_ITEM_NO)) { doWork = true; q = (from r in q where r.REQUEST_ITEM_NO.Contains(criteria.REQUEST_ITEM_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.SOLD_TO_DISPLAY_TXT.Contains(criteria.SOLD_TO_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.SHIP_TO_DISPLAY_TXT.Contains(criteria.SHIP_TO_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.BRAND_DISPLAY_TXT.Contains(criteria.BRAND_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK)) { doWork = true; q = (from r in q where r.REMARK.Contains(criteria.REMARK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_END)) { doWork = true; q = (from r in q where r.IS_END.Contains(criteria.IS_END) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS_TITLE)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS_TITLE.Contains(criteria.CREATE_BY_PROCESS_TITLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS_FIRST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS_FIRST_NAME.Contains(criteria.CREATE_BY_PROCESS_FIRST_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_PROCESS_LAST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_PROCESS_LAST_NAME.Contains(criteria.CREATE_BY_PROCESS_LAST_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CURRENT_STEP_DISPLAY_TXT)) { doWork = true; q = (from r in q where r.CURRENT_STEP_DISPLAY_TXT.Contains(criteria.CURRENT_STEP_DISPLAY_TXT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_ARTWORK_REQUEST_TITLE)) { doWork = true; q = (from r in q where r.CREATE_BY_ARTWORK_REQUEST_TITLE.Contains(criteria.CREATE_BY_ARTWORK_REQUEST_TITLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_ARTWORK_REQUEST_FIRST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_ARTWORK_REQUEST_FIRST_NAME.Contains(criteria.CREATE_BY_ARTWORK_REQUEST_FIRST_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY_ARTWORK_REQUEST_LAST_NAME)) { doWork = true; q = (from r in q where r.CREATE_BY_ARTWORK_REQUEST_LAST_NAME.Contains(criteria.CREATE_BY_ARTWORK_REQUEST_LAST_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_SUB_ID)) { doWork = true; q = (from r in q where r.ARTWORK_SUB_ID.ToString().Contains(criteria.ARTWORK_SUB_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ARTWORK_REQUEST_ID)) { doWork = true; q = (from r in q where r.ARTWORK_REQUEST_ID.ToString().Contains(criteria.ARTWORK_REQUEST_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_TERMINATE)) { doWork = true; q = (from r in q where r.REMARK_TERMINATE.Contains(criteria.REMARK_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_DELEGATE)) { doWork = true; q = (from r in q where r.IS_DELEGATE.Contains(criteria.IS_DELEGATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_TERMINATE)) { doWork = true; q = (from r in q where r.IS_TERMINATE.Contains(criteria.IS_TERMINATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_DESCRIPTION)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_DESCRIPTION.Contains(criteria.STEP_ARTWORK_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STEP_ARTWORK_CODE)) { doWork = true; q = (from r in q where r.STEP_ARTWORK_CODE.Contains(criteria.STEP_ARTWORK_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REMARK_KILLPROCESS)) { doWork = true; q = (from r in q where r.REMARK_KILLPROCESS.Contains(criteria.REMARK_KILLPROCESS) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_STEP_DURATION_EXTEND)) { doWork = true; q = (from r in q where r.IS_STEP_DURATION_EXTEND.Contains(criteria.IS_STEP_DURATION_EXTEND) select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_ART_WF_DASHBOARD_ARTWORK> GetAll(ARTWORKEntities dc) { return (from p in dc.V_ART_WF_DASHBOARD_ARTWORK select p).ToList(); }


}
public class V_SAP_M_ORDER_BOM_SERVICE
{
    public static V_SAP_M_ORDER_BOM GetByORDER_BOM_ID(int? ORDER_BOM_ID, ARTWORKEntities dc) { if (ORDER_BOM_ID == null || ORDER_BOM_ID == 0) return null; else return (from p in dc.V_SAP_M_ORDER_BOM where p.ORDER_BOM_ID == ORDER_BOM_ID select p).FirstOrDefault(); }
    private static int? GetChkByORDER_BOM_ID(int? ORDER_BOM_ID, ARTWORKEntities dc) { if (ORDER_BOM_ID == null || ORDER_BOM_ID == 0) return null; else { var temp = (from p in dc.V_SAP_M_ORDER_BOM where p.ORDER_BOM_ID == ORDER_BOM_ID select p.ORDER_BOM_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<V_SAP_M_ORDER_BOM> GetByItem(V_SAP_M_ORDER_BOM Item, ARTWORKEntities dc) { if (Item == null) return new List<V_SAP_M_ORDER_BOM>(); else return CriteriaBy((from p in dc.V_SAP_M_ORDER_BOM select p), Item).ToList(); }
    private static IQueryable<V_SAP_M_ORDER_BOM> CriteriaBy(IQueryable<V_SAP_M_ORDER_BOM> q, V_SAP_M_ORDER_BOM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ORDER_BOM_ID)) { doWork = true; q = (from r in q where r.ORDER_BOM_ID == criteria.ORDER_BOM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHANGE_TYPE)) { doWork = true; q = (from r in q where r.CHANGE_TYPE == criteria.CHANGE_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE)) { doWork = true; q = (from r in q where r.DATE == criteria.DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.TIME)) { doWork = true; q = (from r in q where r.TIME == criteria.TIME select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTER)) { doWork = true; q = (from r in q where r.COUNTER == criteria.COUNTER select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL)) { doWork = true; q = (from r in q where r.MATERIAL == criteria.MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PARTY)) { doWork = true; q = (from r in q where r.SOLD_TO_PARTY == criteria.SOLD_TO_PARTY select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PARTY)) { doWork = true; q = (from r in q where r.SHIP_TO_PARTY == criteria.SHIP_TO_PARTY select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID == criteria.ADDITIONAL_BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROUTE)) { doWork = true; q = (from r in q where r.ROUTE == criteria.ROUTE select r); } if (!CheckValue.EqualsDefaultValue(criteria.INTRANSIT_PORT)) { doWork = true; q = (from r in q where r.INTRANSIT_PORT == criteria.INTRANSIT_PORT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORGANIZATION)) { doWork = true; q = (from r in q where r.SALES_ORGANIZATION == criteria.SALES_ORGANIZATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NUMBER)) { doWork = true; q = (from r in q where r.MATERIAL_NUMBER == criteria.MATERIAL_NUMBER select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY_KEY)) { doWork = true; q = (from r in q where r.COUNTRY_KEY == criteria.COUNTRY_KEY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_QUANTITY)) { doWork = true; q = (from r in q where r.PACKAGING_QUANTITY == criteria.PACKAGING_QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_UNIT)) { doWork = true; q = (from r in q where r.PACKAGING_UNIT == criteria.PACKAGING_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.FG_QUANTITY)) { doWork = true; q = (from r in q where r.FG_QUANTITY == criteria.FG_QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.FG_UNIT)) { doWork = true; q = (from r in q where r.FG_UNIT == criteria.FG_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.START_DATE)) { doWork = true; q = (from r in q where r.START_DATE == criteria.START_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.END_DATE)) { doWork = true; q = (from r in q where r.END_DATE == criteria.END_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.WASTE_PERCENT)) { doWork = true; q = (from r in q where r.WASTE_PERCENT == criteria.WASTE_PERCENT select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTER_REFERENCE)) { doWork = true; q = (from r in q where r.COUNTER_REFERENCE == criteria.COUNTER_REFERENCE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_UPDATE)) { doWork = true; q = (from r in q where r.LAST_UPDATE == criteria.LAST_UPDATE select r); } if (!doWork) { q = (from r in q where r.ORDER_BOM_ID == 0 select r); } return q; }
    public static List<V_SAP_M_ORDER_BOM> GetByItemContain(V_SAP_M_ORDER_BOM Item, ARTWORKEntities dc) { if (Item == null) return new List<V_SAP_M_ORDER_BOM>(); else return CriteriaByContains((from p in dc.V_SAP_M_ORDER_BOM select p), Item).ToList(); }
    private static IQueryable<V_SAP_M_ORDER_BOM> CriteriaByContains(IQueryable<V_SAP_M_ORDER_BOM> q, V_SAP_M_ORDER_BOM criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ORDER_BOM_ID)) { doWork = true; q = (from r in q where r.ORDER_BOM_ID == criteria.ORDER_BOM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CHANGE_TYPE)) { doWork = true; q = (from r in q where r.CHANGE_TYPE.Contains(criteria.CHANGE_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE)) { doWork = true; q = (from r in q where r.DATE.Contains(criteria.DATE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TIME)) { doWork = true; q = (from r in q where r.TIME.Contains(criteria.TIME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL)) { doWork = true; q = (from r in q where r.MATERIAL.Contains(criteria.MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PARTY)) { doWork = true; q = (from r in q where r.SOLD_TO_PARTY.Contains(criteria.SOLD_TO_PARTY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PARTY)) { doWork = true; q = (from r in q where r.SHIP_TO_PARTY.Contains(criteria.SHIP_TO_PARTY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID.Contains(criteria.BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID.Contains(criteria.ADDITIONAL_BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ROUTE)) { doWork = true; q = (from r in q where r.ROUTE.Contains(criteria.ROUTE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INTRANSIT_PORT)) { doWork = true; q = (from r in q where r.INTRANSIT_PORT.Contains(criteria.INTRANSIT_PORT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORGANIZATION)) { doWork = true; q = (from r in q where r.SALES_ORGANIZATION.Contains(criteria.SALES_ORGANIZATION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_NUMBER)) { doWork = true; q = (from r in q where r.MATERIAL_NUMBER.Contains(criteria.MATERIAL_NUMBER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY_KEY)) { doWork = true; q = (from r in q where r.COUNTRY_KEY.Contains(criteria.COUNTRY_KEY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKAGING_UNIT)) { doWork = true; q = (from r in q where r.PACKAGING_UNIT.Contains(criteria.PACKAGING_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FG_UNIT)) { doWork = true; q = (from r in q where r.FG_UNIT.Contains(criteria.FG_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_UPDATE)) { doWork = true; q = (from r in q where r.LAST_UPDATE.Contains(criteria.LAST_UPDATE) select r); } if (!doWork) { q = (from r in q where r.ORDER_BOM_ID == 0 select r); } return q; }
    public static List<V_SAP_M_ORDER_BOM> GetAll(ARTWORKEntities dc) { return (from p in dc.V_SAP_M_ORDER_BOM select p).ToList(); }


}
public class V_SAP_SALES_ORDER_SERVICE
{
    public static V_SAP_SALES_ORDER GetByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else return (from p in dc.V_SAP_SALES_ORDER where p.NUM == NUM select p).FirstOrDefault(); }
    private static int? GetChkByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else { var temp = (from p in dc.V_SAP_SALES_ORDER where p.NUM == NUM select p.NUM).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<V_SAP_SALES_ORDER> GetByItem(V_SAP_SALES_ORDER Item, ARTWORKEntities dc) { if (Item == null) return new List<V_SAP_SALES_ORDER>(); else return CriteriaBy((from p in dc.V_SAP_SALES_ORDER select p), Item).ToList(); }
    private static IQueryable<V_SAP_SALES_ORDER> CriteriaBy(IQueryable<V_SAP_SALES_ORDER> q, V_SAP_SALES_ORDER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == criteria.PO_COMPLETE_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO == criteria.SOLD_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME == criteria.SOLD_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_SHIPMENT_DATE)) { doWork = true; q = (from r in q where r.LAST_SHIPMENT_DATE == criteria.LAST_SHIPMENT_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE_1_2)) { doWork = true; q = (from r in q where r.DATE_1_2 == criteria.DATE_1_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_ON)) { doWork = true; q = (from r in q where r.CREATE_ON == criteria.CREATE_ON select r); } if (!CheckValue.EqualsDefaultValue(criteria.RDD)) { doWork = true; q = (from r in q where r.RDD == criteria.RDD select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM == criteria.PAYMENT_TERM select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO == criteria.LC_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXPIRED_DATE)) { doWork = true; q = (from r in q where r.EXPIRED_DATE == criteria.EXPIRED_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO == criteria.SHIP_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME == criteria.SHIP_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO == criteria.SOLD_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO == criteria.SHIP_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP == criteria.SALES_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO == criteria.MARKETING_CO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME == criteria.MARKETING_CO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING == criteria.MARKETING select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME == criteria.MARKETING_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP == criteria.MARKETING_ORDER_SAP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME == criteria.MARKETING_ORDER_SAP_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG == criteria.SALES_ORG select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL == criteria.DISTRIBUTION_CHANNEL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION == criteria.DIVITION select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE == criteria.SALES_ORDER_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1 == criteria.HEADER_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2 == criteria.HEADER_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3 == criteria.HEADER_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_MIGRATION)) { doWork = true; q = (from r in q where r.IS_MIGRATION == criteria.IS_MIGRATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == criteria.PO_COMPLETE_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM)) { doWork = true; q = (from r in q where r.ITEM == criteria.ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION == criteria.MATERIAL_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_QTY)) { doWork = true; q = (from r in q where r.ORDER_QTY == criteria.ORDER_QTY select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT == criteria.ORDER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_FROM)) { doWork = true; q = (from r in q where r.ETD_DATE_FROM == criteria.ETD_DATE_FROM select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_TO)) { doWork = true; q = (from r in q where r.ETD_DATE_TO == criteria.ETD_DATE_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE == criteria.OLD_MATERIAL_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE == criteria.PACK_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT == criteria.VALUME_PER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT == criteria.VALUME_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT == criteria.SIZE_DRAIN_WT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO == criteria.PROD_INSP_MEMO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE == criteria.REJECTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION == criteria.REJECTION_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT == criteria.PORT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA == criteria.VIA select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO == criteria.IN_TRANSIT_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION == criteria.BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID == criteria.ADDITIONAL_BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION == criteria.ADDITIONAL_BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT == criteria.PRODUCTION_PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE == criteria.ZONE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY == criteria.COUNTRY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY == criteria.PRODUCTION_HIERARCHY select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER == criteria.MRP_CONTROLLER select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK == criteria.STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1 == criteria.ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2 == criteria.ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3 == criteria.ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_COMPONENT_ID == criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM == criteria.COMPONENT_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL == criteria.COMPONENT_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION == criteria.DECRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.QUANTITY)) { doWork = true; q = (from r in q where r.QUANTITY == criteria.QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT == criteria.UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_STOCK)) { doWork = true; q = (from r in q where r.BOM_STOCK == criteria.BOM_STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1 == criteria.BOM_ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2 == criteria.BOM_ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3 == criteria.BOM_ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_IS_ACTIVE)) { doWork = true; q = (from r in q where r.BOM_IS_ACTIVE == criteria.BOM_IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_ITEM_IS_ACTIVE)) { doWork = true; q = (from r in q where r.SO_ITEM_IS_ACTIVE == criteria.SO_ITEM_IS_ACTIVE select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_SAP_SALES_ORDER> GetByItemContain(V_SAP_SALES_ORDER Item, ARTWORKEntities dc) { if (Item == null) return new List<V_SAP_SALES_ORDER>(); else return CriteriaByContains((from p in dc.V_SAP_SALES_ORDER select p), Item).ToList(); }
    private static IQueryable<V_SAP_SALES_ORDER> CriteriaByContains(IQueryable<V_SAP_SALES_ORDER> q, V_SAP_SALES_ORDER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID.ToString().Contains(criteria.PO_COMPLETE_SO_HEADER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO.Contains(criteria.SOLD_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME.Contains(criteria.SOLD_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM.Contains(criteria.PAYMENT_TERM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO.Contains(criteria.LC_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO.Contains(criteria.SHIP_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME.Contains(criteria.SHIP_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO.Contains(criteria.SOLD_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO.Contains(criteria.SHIP_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP.Contains(criteria.SALES_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO.Contains(criteria.MARKETING_CO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME.Contains(criteria.MARKETING_CO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING.Contains(criteria.MARKETING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME.Contains(criteria.MARKETING_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP.Contains(criteria.MARKETING_ORDER_SAP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME.Contains(criteria.MARKETING_ORDER_SAP_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG.Contains(criteria.SALES_ORG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL.Contains(criteria.DISTRIBUTION_CHANNEL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION.Contains(criteria.DIVITION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE.Contains(criteria.SALES_ORDER_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1.Contains(criteria.HEADER_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2.Contains(criteria.HEADER_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3.Contains(criteria.HEADER_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_MIGRATION)) { doWork = true; q = (from r in q where r.IS_MIGRATION.Contains(criteria.IS_MIGRATION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION.Contains(criteria.MATERIAL_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT.Contains(criteria.ORDER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE.Contains(criteria.OLD_MATERIAL_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE.Contains(criteria.PACK_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT.Contains(criteria.VALUME_PER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT.Contains(criteria.VALUME_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT.Contains(criteria.SIZE_DRAIN_WT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO.Contains(criteria.PROD_INSP_MEMO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE.Contains(criteria.REJECTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION.Contains(criteria.REJECTION_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT.Contains(criteria.PORT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA.Contains(criteria.VIA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO.Contains(criteria.IN_TRANSIT_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID.Contains(criteria.BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION.Contains(criteria.BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID.Contains(criteria.ADDITIONAL_BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION.Contains(criteria.ADDITIONAL_BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT.Contains(criteria.PRODUCTION_PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE.Contains(criteria.ZONE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY.Contains(criteria.COUNTRY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY.Contains(criteria.PRODUCTION_HIERARCHY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER.Contains(criteria.MRP_CONTROLLER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK.Contains(criteria.STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1.Contains(criteria.ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2.Contains(criteria.ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3.Contains(criteria.ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM.Contains(criteria.COMPONENT_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL.Contains(criteria.COMPONENT_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION.Contains(criteria.DECRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT.Contains(criteria.UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_STOCK)) { doWork = true; q = (from r in q where r.BOM_STOCK.Contains(criteria.BOM_STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1.Contains(criteria.BOM_ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2.Contains(criteria.BOM_ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3.Contains(criteria.BOM_ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_IS_ACTIVE)) { doWork = true; q = (from r in q where r.BOM_IS_ACTIVE.Contains(criteria.BOM_IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_ITEM_IS_ACTIVE)) { doWork = true; q = (from r in q where r.SO_ITEM_IS_ACTIVE.Contains(criteria.SO_ITEM_IS_ACTIVE) select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_SAP_SALES_ORDER> GetAll(ARTWORKEntities dc) { return (from p in dc.V_SAP_SALES_ORDER select p).ToList(); }


}
public class V_SAP_SALES_ORDER_ALL_SERVICE
{
    public static V_SAP_SALES_ORDER_ALL GetByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else return (from p in dc.V_SAP_SALES_ORDER_ALL where p.NUM == NUM select p).FirstOrDefault(); }
    private static int? GetChkByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else { var temp = (from p in dc.V_SAP_SALES_ORDER_ALL where p.NUM == NUM select p.NUM).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<V_SAP_SALES_ORDER_ALL> GetByItem(V_SAP_SALES_ORDER_ALL Item, ARTWORKEntities dc) { if (Item == null) return new List<V_SAP_SALES_ORDER_ALL>(); else return CriteriaBy((from p in dc.V_SAP_SALES_ORDER_ALL select p), Item).ToList(); }
    private static IQueryable<V_SAP_SALES_ORDER_ALL> CriteriaBy(IQueryable<V_SAP_SALES_ORDER_ALL> q, V_SAP_SALES_ORDER_ALL criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == criteria.PO_COMPLETE_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO == criteria.SOLD_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME == criteria.SOLD_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_SHIPMENT_DATE)) { doWork = true; q = (from r in q where r.LAST_SHIPMENT_DATE == criteria.LAST_SHIPMENT_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE_1_2)) { doWork = true; q = (from r in q where r.DATE_1_2 == criteria.DATE_1_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_ON)) { doWork = true; q = (from r in q where r.CREATE_ON == criteria.CREATE_ON select r); } if (!CheckValue.EqualsDefaultValue(criteria.RDD)) { doWork = true; q = (from r in q where r.RDD == criteria.RDD select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM == criteria.PAYMENT_TERM select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO == criteria.LC_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXPIRED_DATE)) { doWork = true; q = (from r in q where r.EXPIRED_DATE == criteria.EXPIRED_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO == criteria.SHIP_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME == criteria.SHIP_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO == criteria.SOLD_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO == criteria.SHIP_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP == criteria.SALES_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO == criteria.MARKETING_CO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME == criteria.MARKETING_CO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING == criteria.MARKETING select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME == criteria.MARKETING_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP == criteria.MARKETING_ORDER_SAP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME == criteria.MARKETING_ORDER_SAP_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG == criteria.SALES_ORG select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL == criteria.DISTRIBUTION_CHANNEL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION == criteria.DIVITION select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE == criteria.SALES_ORDER_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1 == criteria.HEADER_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2 == criteria.HEADER_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3 == criteria.HEADER_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_MIGRATION)) { doWork = true; q = (from r in q where r.IS_MIGRATION == criteria.IS_MIGRATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == criteria.PO_COMPLETE_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM)) { doWork = true; q = (from r in q where r.ITEM == criteria.ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION == criteria.MATERIAL_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_QTY)) { doWork = true; q = (from r in q where r.ORDER_QTY == criteria.ORDER_QTY select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT == criteria.ORDER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_FROM)) { doWork = true; q = (from r in q where r.ETD_DATE_FROM == criteria.ETD_DATE_FROM select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_TO)) { doWork = true; q = (from r in q where r.ETD_DATE_TO == criteria.ETD_DATE_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE == criteria.OLD_MATERIAL_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE == criteria.PACK_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT == criteria.VALUME_PER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT == criteria.VALUME_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT == criteria.SIZE_DRAIN_WT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO == criteria.PROD_INSP_MEMO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE == criteria.REJECTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION == criteria.REJECTION_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT == criteria.PORT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA == criteria.VIA select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO == criteria.IN_TRANSIT_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION == criteria.BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID == criteria.ADDITIONAL_BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION == criteria.ADDITIONAL_BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT == criteria.PRODUCTION_PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE == criteria.ZONE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY == criteria.COUNTRY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY == criteria.PRODUCTION_HIERARCHY select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER == criteria.MRP_CONTROLLER select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK == criteria.STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1 == criteria.ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2 == criteria.ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3 == criteria.ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_COMPONENT_ID == criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM == criteria.COMPONENT_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL == criteria.COMPONENT_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION == criteria.DECRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.QUANTITY)) { doWork = true; q = (from r in q where r.QUANTITY == criteria.QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT == criteria.UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_STOCK)) { doWork = true; q = (from r in q where r.BOM_STOCK == criteria.BOM_STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1 == criteria.BOM_ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2 == criteria.BOM_ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3 == criteria.BOM_ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_IS_ACTIVE)) { doWork = true; q = (from r in q where r.BOM_IS_ACTIVE == criteria.BOM_IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_ITEM_IS_ACTIVE)) { doWork = true; q = (from r in q where r.SO_ITEM_IS_ACTIVE == criteria.SO_ITEM_IS_ACTIVE select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_SAP_SALES_ORDER_ALL> GetByItemContain(V_SAP_SALES_ORDER_ALL Item, ARTWORKEntities dc) { if (Item == null) return new List<V_SAP_SALES_ORDER_ALL>(); else return CriteriaByContains((from p in dc.V_SAP_SALES_ORDER_ALL select p), Item).ToList(); }
    private static IQueryable<V_SAP_SALES_ORDER_ALL> CriteriaByContains(IQueryable<V_SAP_SALES_ORDER_ALL> q, V_SAP_SALES_ORDER_ALL criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID.ToString().Contains(criteria.PO_COMPLETE_SO_HEADER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO.Contains(criteria.SOLD_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME.Contains(criteria.SOLD_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM.Contains(criteria.PAYMENT_TERM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO.Contains(criteria.LC_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO.Contains(criteria.SHIP_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME.Contains(criteria.SHIP_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO.Contains(criteria.SOLD_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO.Contains(criteria.SHIP_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP.Contains(criteria.SALES_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO.Contains(criteria.MARKETING_CO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME.Contains(criteria.MARKETING_CO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING.Contains(criteria.MARKETING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME.Contains(criteria.MARKETING_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP.Contains(criteria.MARKETING_ORDER_SAP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME.Contains(criteria.MARKETING_ORDER_SAP_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG.Contains(criteria.SALES_ORG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL.Contains(criteria.DISTRIBUTION_CHANNEL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION.Contains(criteria.DIVITION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE.Contains(criteria.SALES_ORDER_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1.Contains(criteria.HEADER_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2.Contains(criteria.HEADER_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3.Contains(criteria.HEADER_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_MIGRATION)) { doWork = true; q = (from r in q where r.IS_MIGRATION.Contains(criteria.IS_MIGRATION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID.ToString().Contains(criteria.PO_COMPLETE_SO_ITEM_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION.Contains(criteria.MATERIAL_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT.Contains(criteria.ORDER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE.Contains(criteria.OLD_MATERIAL_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE.Contains(criteria.PACK_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT.Contains(criteria.VALUME_PER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT.Contains(criteria.VALUME_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT.Contains(criteria.SIZE_DRAIN_WT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO.Contains(criteria.PROD_INSP_MEMO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE.Contains(criteria.REJECTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION.Contains(criteria.REJECTION_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT.Contains(criteria.PORT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA.Contains(criteria.VIA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO.Contains(criteria.IN_TRANSIT_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID.Contains(criteria.BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION.Contains(criteria.BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID.Contains(criteria.ADDITIONAL_BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION.Contains(criteria.ADDITIONAL_BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT.Contains(criteria.PRODUCTION_PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE.Contains(criteria.ZONE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY.Contains(criteria.COUNTRY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY.Contains(criteria.PRODUCTION_HIERARCHY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER.Contains(criteria.MRP_CONTROLLER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK.Contains(criteria.STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1.Contains(criteria.ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2.Contains(criteria.ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3.Contains(criteria.ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM.Contains(criteria.COMPONENT_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL.Contains(criteria.COMPONENT_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION.Contains(criteria.DECRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT.Contains(criteria.UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_STOCK)) { doWork = true; q = (from r in q where r.BOM_STOCK.Contains(criteria.BOM_STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1.Contains(criteria.BOM_ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2.Contains(criteria.BOM_ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3.Contains(criteria.BOM_ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_IS_ACTIVE)) { doWork = true; q = (from r in q where r.BOM_IS_ACTIVE.Contains(criteria.BOM_IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_ITEM_IS_ACTIVE)) { doWork = true; q = (from r in q where r.SO_ITEM_IS_ACTIVE.Contains(criteria.SO_ITEM_IS_ACTIVE) select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_SAP_SALES_ORDER_ALL> GetAll(ARTWORKEntities dc) { return (from p in dc.V_SAP_SALES_ORDER_ALL select p).ToList(); }


}
public class V_SAP_SALES_ORDER2_SERVICE
{
    public static V_SAP_SALES_ORDER2 GetByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else return (from p in dc.V_SAP_SALES_ORDER2 where p.NUM == NUM select p).FirstOrDefault(); }
    private static int? GetChkByNUM(int? NUM, ARTWORKEntities dc) { if (NUM == null || NUM == 0) return null; else { var temp = (from p in dc.V_SAP_SALES_ORDER2 where p.NUM == NUM select p.NUM).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<V_SAP_SALES_ORDER2> GetByItem(V_SAP_SALES_ORDER2 Item, ARTWORKEntities dc) { if (Item == null) return new List<V_SAP_SALES_ORDER2>(); else return CriteriaBy((from p in dc.V_SAP_SALES_ORDER2 select p), Item).ToList(); }
    private static IQueryable<V_SAP_SALES_ORDER2> CriteriaBy(IQueryable<V_SAP_SALES_ORDER2> q, V_SAP_SALES_ORDER2 criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID == criteria.PO_COMPLETE_SO_HEADER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO == criteria.SALES_ORDER_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO == criteria.SOLD_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME == criteria.SOLD_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.LAST_SHIPMENT_DATE)) { doWork = true; q = (from r in q where r.LAST_SHIPMENT_DATE == criteria.LAST_SHIPMENT_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.DATE_1_2)) { doWork = true; q = (from r in q where r.DATE_1_2 == criteria.DATE_1_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_ON)) { doWork = true; q = (from r in q where r.CREATE_ON == criteria.CREATE_ON select r); } if (!CheckValue.EqualsDefaultValue(criteria.RDD)) { doWork = true; q = (from r in q where r.RDD == criteria.RDD select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM == criteria.PAYMENT_TERM select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO == criteria.LC_NO select r); } if (!CheckValue.EqualsDefaultValue(criteria.EXPIRED_DATE)) { doWork = true; q = (from r in q where r.EXPIRED_DATE == criteria.EXPIRED_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO == criteria.SHIP_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME == criteria.SHIP_TO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO == criteria.SOLD_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO == criteria.SHIP_TO_PO select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP == criteria.SALES_GROUP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO == criteria.MARKETING_CO select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME == criteria.MARKETING_CO_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING == criteria.MARKETING select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME == criteria.MARKETING_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP == criteria.MARKETING_ORDER_SAP select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME == criteria.MARKETING_ORDER_SAP_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG == criteria.SALES_ORG select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL == criteria.DISTRIBUTION_CHANNEL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION == criteria.DIVITION select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE == criteria.SALES_ORDER_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1 == criteria.HEADER_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2 == criteria.HEADER_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3 == criteria.HEADER_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_MIGRATION)) { doWork = true; q = (from r in q where r.IS_MIGRATION == criteria.IS_MIGRATION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_ID == criteria.PO_COMPLETE_SO_ITEM_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM)) { doWork = true; q = (from r in q where r.ITEM == criteria.ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION == criteria.MATERIAL_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_QTY)) { doWork = true; q = (from r in q where r.ORDER_QTY == criteria.ORDER_QTY select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT == criteria.ORDER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_FROM)) { doWork = true; q = (from r in q where r.ETD_DATE_FROM == criteria.ETD_DATE_FROM select r); } if (!CheckValue.EqualsDefaultValue(criteria.ETD_DATE_TO)) { doWork = true; q = (from r in q where r.ETD_DATE_TO == criteria.ETD_DATE_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT == criteria.PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE == criteria.OLD_MATERIAL_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE == criteria.PACK_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT == criteria.VALUME_PER_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT == criteria.VALUME_UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT == criteria.SIZE_DRAIN_WT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO == criteria.PROD_INSP_MEMO select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE == criteria.REJECTION_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION == criteria.REJECTION_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT == criteria.PORT select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA == criteria.VIA select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO == criteria.IN_TRANSIT_TO select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID == criteria.BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION == criteria.BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID == criteria.ADDITIONAL_BRAND_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION == criteria.ADDITIONAL_BRAND_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT == criteria.PRODUCTION_PLANT select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE == criteria.ZONE select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY == criteria.COUNTRY select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY == criteria.PRODUCTION_HIERARCHY select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER == criteria.MRP_CONTROLLER select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK == criteria.STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1 == criteria.ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2 == criteria.ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3 == criteria.ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_ITEM_COMPONENT_ID == criteria.PO_COMPLETE_SO_ITEM_COMPONENT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM == criteria.COMPONENT_ITEM select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL == criteria.COMPONENT_MATERIAL select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION == criteria.DECRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.QUANTITY)) { doWork = true; q = (from r in q where r.QUANTITY == criteria.QUANTITY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT == criteria.UNIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_STOCK)) { doWork = true; q = (from r in q where r.BOM_STOCK == criteria.BOM_STOCK select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1 == criteria.BOM_ITEM_CUSTOM_1 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2 == criteria.BOM_ITEM_CUSTOM_2 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3 == criteria.BOM_ITEM_CUSTOM_3 select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_IS_ACTIVE)) { doWork = true; q = (from r in q where r.BOM_IS_ACTIVE == criteria.BOM_IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_ITEM_IS_ACTIVE)) { doWork = true; q = (from r in q where r.SO_ITEM_IS_ACTIVE == criteria.SO_ITEM_IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_QTY_STOCK)) { doWork = true; q = (from r in q where r.BOM_QTY_STOCK == criteria.BOM_QTY_STOCK select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_SAP_SALES_ORDER2> GetByItemContain(V_SAP_SALES_ORDER2 Item, ARTWORKEntities dc) { if (Item == null) return new List<V_SAP_SALES_ORDER2>(); else return CriteriaByContains((from p in dc.V_SAP_SALES_ORDER2 select p), Item).ToList(); }
    private static IQueryable<V_SAP_SALES_ORDER2> CriteriaByContains(IQueryable<V_SAP_SALES_ORDER2> q, V_SAP_SALES_ORDER2 criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.NUM)) { doWork = true; q = (from r in q where r.NUM == criteria.NUM select r); } if (!CheckValue.EqualsDefaultValue(criteria.PO_COMPLETE_SO_HEADER_ID)) { doWork = true; q = (from r in q where r.PO_COMPLETE_SO_HEADER_ID.ToString().Contains(criteria.PO_COMPLETE_SO_HEADER_ID.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_NO)) { doWork = true; q = (from r in q where r.SALES_ORDER_NO.Contains(criteria.SALES_ORDER_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO)) { doWork = true; q = (from r in q where r.SOLD_TO.Contains(criteria.SOLD_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_NAME)) { doWork = true; q = (from r in q where r.SOLD_TO_NAME.Contains(criteria.SOLD_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PAYMENT_TERM)) { doWork = true; q = (from r in q where r.PAYMENT_TERM.Contains(criteria.PAYMENT_TERM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LC_NO)) { doWork = true; q = (from r in q where r.LC_NO.Contains(criteria.LC_NO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO)) { doWork = true; q = (from r in q where r.SHIP_TO.Contains(criteria.SHIP_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_NAME)) { doWork = true; q = (from r in q where r.SHIP_TO_NAME.Contains(criteria.SHIP_TO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SOLD_TO_PO)) { doWork = true; q = (from r in q where r.SOLD_TO_PO.Contains(criteria.SOLD_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SHIP_TO_PO)) { doWork = true; q = (from r in q where r.SHIP_TO_PO.Contains(criteria.SHIP_TO_PO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_GROUP)) { doWork = true; q = (from r in q where r.SALES_GROUP.Contains(criteria.SALES_GROUP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO)) { doWork = true; q = (from r in q where r.MARKETING_CO.Contains(criteria.MARKETING_CO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_CO_NAME)) { doWork = true; q = (from r in q where r.MARKETING_CO_NAME.Contains(criteria.MARKETING_CO_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING)) { doWork = true; q = (from r in q where r.MARKETING.Contains(criteria.MARKETING) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_NAME)) { doWork = true; q = (from r in q where r.MARKETING_NAME.Contains(criteria.MARKETING_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP.Contains(criteria.MARKETING_ORDER_SAP) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MARKETING_ORDER_SAP_NAME)) { doWork = true; q = (from r in q where r.MARKETING_ORDER_SAP_NAME.Contains(criteria.MARKETING_ORDER_SAP_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORG)) { doWork = true; q = (from r in q where r.SALES_ORG.Contains(criteria.SALES_ORG) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DISTRIBUTION_CHANNEL)) { doWork = true; q = (from r in q where r.DISTRIBUTION_CHANNEL.Contains(criteria.DISTRIBUTION_CHANNEL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DIVITION)) { doWork = true; q = (from r in q where r.DIVITION.Contains(criteria.DIVITION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SALES_ORDER_TYPE)) { doWork = true; q = (from r in q where r.SALES_ORDER_TYPE.Contains(criteria.SALES_ORDER_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_1)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_1.Contains(criteria.HEADER_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_2)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_2.Contains(criteria.HEADER_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HEADER_CUSTOM_3)) { doWork = true; q = (from r in q where r.HEADER_CUSTOM_3.Contains(criteria.HEADER_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_MIGRATION)) { doWork = true; q = (from r in q where r.IS_MIGRATION.Contains(criteria.IS_MIGRATION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MATERIAL_DESCRIPTION)) { doWork = true; q = (from r in q where r.MATERIAL_DESCRIPTION.Contains(criteria.MATERIAL_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ORDER_UNIT)) { doWork = true; q = (from r in q where r.ORDER_UNIT.Contains(criteria.ORDER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PLANT)) { doWork = true; q = (from r in q where r.PLANT.Contains(criteria.PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OLD_MATERIAL_CODE)) { doWork = true; q = (from r in q where r.OLD_MATERIAL_CODE.Contains(criteria.OLD_MATERIAL_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE.Contains(criteria.PACK_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_PER_UNIT)) { doWork = true; q = (from r in q where r.VALUME_PER_UNIT.Contains(criteria.VALUME_PER_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VALUME_UNIT)) { doWork = true; q = (from r in q where r.VALUME_UNIT.Contains(criteria.VALUME_UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SIZE_DRAIN_WT)) { doWork = true; q = (from r in q where r.SIZE_DRAIN_WT.Contains(criteria.SIZE_DRAIN_WT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROD_INSP_MEMO)) { doWork = true; q = (from r in q where r.PROD_INSP_MEMO.Contains(criteria.PROD_INSP_MEMO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_CODE)) { doWork = true; q = (from r in q where r.REJECTION_CODE.Contains(criteria.REJECTION_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.REJECTION_DESCRIPTION)) { doWork = true; q = (from r in q where r.REJECTION_DESCRIPTION.Contains(criteria.REJECTION_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PORT)) { doWork = true; q = (from r in q where r.PORT.Contains(criteria.PORT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VIA)) { doWork = true; q = (from r in q where r.VIA.Contains(criteria.VIA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IN_TRANSIT_TO)) { doWork = true; q = (from r in q where r.IN_TRANSIT_TO.Contains(criteria.IN_TRANSIT_TO) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_ID)) { doWork = true; q = (from r in q where r.BRAND_ID.Contains(criteria.BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.BRAND_DESCRIPTION.Contains(criteria.BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_ID)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_ID.Contains(criteria.ADDITIONAL_BRAND_ID) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ADDITIONAL_BRAND_DESCRIPTION)) { doWork = true; q = (from r in q where r.ADDITIONAL_BRAND_DESCRIPTION.Contains(criteria.ADDITIONAL_BRAND_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_PLANT)) { doWork = true; q = (from r in q where r.PRODUCTION_PLANT.Contains(criteria.PRODUCTION_PLANT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ZONE)) { doWork = true; q = (from r in q where r.ZONE.Contains(criteria.ZONE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COUNTRY)) { doWork = true; q = (from r in q where r.COUNTRY.Contains(criteria.COUNTRY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCTION_HIERARCHY)) { doWork = true; q = (from r in q where r.PRODUCTION_HIERARCHY.Contains(criteria.PRODUCTION_HIERARCHY) select r); } if (!CheckValue.EqualsDefaultValue(criteria.MRP_CONTROLLER)) { doWork = true; q = (from r in q where r.MRP_CONTROLLER.Contains(criteria.MRP_CONTROLLER) select r); } if (!CheckValue.EqualsDefaultValue(criteria.STOCK)) { doWork = true; q = (from r in q where r.STOCK.Contains(criteria.STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_1.Contains(criteria.ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_2.Contains(criteria.ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.ITEM_CUSTOM_3.Contains(criteria.ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_ITEM)) { doWork = true; q = (from r in q where r.COMPONENT_ITEM.Contains(criteria.COMPONENT_ITEM) select r); } if (!CheckValue.EqualsDefaultValue(criteria.COMPONENT_MATERIAL)) { doWork = true; q = (from r in q where r.COMPONENT_MATERIAL.Contains(criteria.COMPONENT_MATERIAL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DECRIPTION)) { doWork = true; q = (from r in q where r.DECRIPTION.Contains(criteria.DECRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UNIT)) { doWork = true; q = (from r in q where r.UNIT.Contains(criteria.UNIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_STOCK)) { doWork = true; q = (from r in q where r.BOM_STOCK.Contains(criteria.BOM_STOCK) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_1)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_1.Contains(criteria.BOM_ITEM_CUSTOM_1) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_2)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_2.Contains(criteria.BOM_ITEM_CUSTOM_2) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_ITEM_CUSTOM_3)) { doWork = true; q = (from r in q where r.BOM_ITEM_CUSTOM_3.Contains(criteria.BOM_ITEM_CUSTOM_3) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_IS_ACTIVE)) { doWork = true; q = (from r in q where r.BOM_IS_ACTIVE.Contains(criteria.BOM_IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SO_ITEM_IS_ACTIVE)) { doWork = true; q = (from r in q where r.SO_ITEM_IS_ACTIVE.Contains(criteria.SO_ITEM_IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.BOM_QTY_STOCK)) { doWork = true; q = (from r in q where r.BOM_QTY_STOCK.Contains(criteria.BOM_QTY_STOCK) select r); } if (!doWork) { q = (from r in q where r.NUM == 0 select r); } return q; }
    public static List<V_SAP_SALES_ORDER2> GetAll(ARTWORKEntities dc) { return (from p in dc.V_SAP_SALES_ORDER2 select p).ToList(); }


}
public class XECM_M_CONSTANT_SERVICE
{
    public static XECM_M_CONSTANT GetByID(int? ID, ARTWORKEntities dc) { if (ID == null || ID == 0) return null; else return (from p in dc.XECM_M_CONSTANT where p.ID == ID select p).FirstOrDefault(); }
    private static int? GetChkByID(int? ID, ARTWORKEntities dc) { if (ID == null || ID == 0) return null; else { var temp = (from p in dc.XECM_M_CONSTANT where p.ID == ID select p.ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<XECM_M_CONSTANT> GetByItem(XECM_M_CONSTANT Item, ARTWORKEntities dc) { if (Item == null) return new List<XECM_M_CONSTANT>(); else return CriteriaBy((from p in dc.XECM_M_CONSTANT select p), Item).ToList(); }
    private static IQueryable<XECM_M_CONSTANT> CriteriaBy(IQueryable<XECM_M_CONSTANT> q, XECM_M_CONSTANT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ID)) { doWork = true; q = (from r in q where r.ID == criteria.ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROGRAM_NAME)) { doWork = true; q = (from r in q where r.PROGRAM_NAME == criteria.PROGRAM_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.VARIABLE_NAME)) { doWork = true; q = (from r in q where r.VARIABLE_NAME == criteria.VARIABLE_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE)) { doWork = true; q = (from r in q where r.TYPE == criteria.TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEQUENCE)) { doWork = true; q = (from r in q where r.SEQUENCE == criteria.SEQUENCE select r); } if (!CheckValue.EqualsDefaultValue(criteria.FUNCAREA)) { doWork = true; q = (from r in q where r.FUNCAREA == criteria.FUNCAREA select r); } if (!CheckValue.EqualsDefaultValue(criteria.INEXCL)) { doWork = true; q = (from r in q where r.INEXCL == criteria.INEXCL select r); } if (!CheckValue.EqualsDefaultValue(criteria.OPTION)) { doWork = true; q = (from r in q where r.OPTION == criteria.OPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.LOWVALUE)) { doWork = true; q = (from r in q where r.LOWVALUE == criteria.LOWVALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.HIGHVALUE)) { doWork = true; q = (from r in q where r.HIGHVALUE == criteria.HIGHVALUE select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!doWork) { q = (from r in q where r.ID == 0 select r); } return q; }
    public static List<XECM_M_CONSTANT> GetByItemContain(XECM_M_CONSTANT Item, ARTWORKEntities dc) { if (Item == null) return new List<XECM_M_CONSTANT>(); else return CriteriaByContains((from p in dc.XECM_M_CONSTANT select p), Item).ToList(); }
    private static IQueryable<XECM_M_CONSTANT> CriteriaByContains(IQueryable<XECM_M_CONSTANT> q, XECM_M_CONSTANT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.ID)) { doWork = true; q = (from r in q where r.ID == criteria.ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PROGRAM_NAME)) { doWork = true; q = (from r in q where r.PROGRAM_NAME.Contains(criteria.PROGRAM_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VARIABLE_NAME)) { doWork = true; q = (from r in q where r.VARIABLE_NAME.Contains(criteria.VARIABLE_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.TYPE)) { doWork = true; q = (from r in q where r.TYPE.Contains(criteria.TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.SEQUENCE)) { doWork = true; q = (from r in q where r.SEQUENCE.Contains(criteria.SEQUENCE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.FUNCAREA)) { doWork = true; q = (from r in q where r.FUNCAREA.Contains(criteria.FUNCAREA) select r); } if (!CheckValue.EqualsDefaultValue(criteria.INEXCL)) { doWork = true; q = (from r in q where r.INEXCL.Contains(criteria.INEXCL) select r); } if (!CheckValue.EqualsDefaultValue(criteria.OPTION)) { doWork = true; q = (from r in q where r.OPTION.Contains(criteria.OPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LOWVALUE)) { doWork = true; q = (from r in q where r.LOWVALUE.Contains(criteria.LOWVALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.HIGHVALUE)) { doWork = true; q = (from r in q where r.HIGHVALUE.Contains(criteria.HIGHVALUE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.ID == 0 select r); } return q; }
    public static List<XECM_M_CONSTANT> GetAll(ARTWORKEntities dc) { return (from p in dc.XECM_M_CONSTANT select p).ToList(); }
    public static void SaveOrUpdate(XECM_M_CONSTANT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByID(Item.ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_CONSTANT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByID(Item.ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_CONSTANT>().Local.FirstOrDefault(f => f.ID == Item.ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(XECM_M_CONSTANT Item, ARTWORKEntities dc) { if (GetChkByID(Item.ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_CONSTANT.Add(Item); dc.SaveChanges(); } else { var temp = GetByID(Item.ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_CONSTANT>().Local.FirstOrDefault(f => f.ID == Item.ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(XECM_M_CONSTANT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_CONSTANT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(XECM_M_CONSTANT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_CONSTANT>().Local.FirstOrDefault(f => f.ID == Item.ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(XECM_M_CONSTANT NewItem, XECM_M_CONSTANT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "XECM_M_CONSTANT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByID(int? ID, ARTWORKEntities dc) { var Item = GetByID(ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class XECM_M_CUSTOMER_SERVICE
{
    public static XECM_M_CUSTOMER GetByCUSTOMER_ID(int? CUSTOMER_ID, ARTWORKEntities dc) { if (CUSTOMER_ID == null || CUSTOMER_ID == 0) return null; else return (from p in dc.XECM_M_CUSTOMER where p.CUSTOMER_ID == CUSTOMER_ID select p).FirstOrDefault(); }
    private static int? GetChkByCUSTOMER_ID(int? CUSTOMER_ID, ARTWORKEntities dc) { if (CUSTOMER_ID == null || CUSTOMER_ID == 0) return null; else { var temp = (from p in dc.XECM_M_CUSTOMER where p.CUSTOMER_ID == CUSTOMER_ID select p.CUSTOMER_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<XECM_M_CUSTOMER> GetByItem(XECM_M_CUSTOMER Item, ARTWORKEntities dc) { if (Item == null) return new List<XECM_M_CUSTOMER>(); else return CriteriaBy((from p in dc.XECM_M_CUSTOMER select p), Item).ToList(); }
    private static IQueryable<XECM_M_CUSTOMER> CriteriaBy(IQueryable<XECM_M_CUSTOMER> q, XECM_M_CUSTOMER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_ID == criteria.CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_CODE)) { doWork = true; q = (from r in q where r.CUSTOMER_CODE == criteria.CUSTOMER_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NAME)) { doWork = true; q = (from r in q where r.CUSTOMER_NAME == criteria.CUSTOMER_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_SHADE_LIMIT)) { doWork = true; q = (from r in q where r.IS_SHADE_LIMIT == criteria.IS_SHADE_LIMIT select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE_CS)) { doWork = true; q = (from r in q where r.UPDATE_DATE_CS == criteria.UPDATE_DATE_CS select r); } if (!doWork) { q = (from r in q where r.CUSTOMER_ID == 0 select r); } return q; }
    public static List<XECM_M_CUSTOMER> GetByItemContain(XECM_M_CUSTOMER Item, ARTWORKEntities dc) { if (Item == null) return new List<XECM_M_CUSTOMER>(); else return CriteriaByContains((from p in dc.XECM_M_CUSTOMER select p), Item).ToList(); }
    private static IQueryable<XECM_M_CUSTOMER> CriteriaByContains(IQueryable<XECM_M_CUSTOMER> q, XECM_M_CUSTOMER criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_ID)) { doWork = true; q = (from r in q where r.CUSTOMER_ID == criteria.CUSTOMER_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_CODE)) { doWork = true; q = (from r in q where r.CUSTOMER_CODE.Contains(criteria.CUSTOMER_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CUSTOMER_NAME)) { doWork = true; q = (from r in q where r.CUSTOMER_NAME.Contains(criteria.CUSTOMER_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_SHADE_LIMIT)) { doWork = true; q = (from r in q where r.IS_SHADE_LIMIT.Contains(criteria.IS_SHADE_LIMIT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.CUSTOMER_ID == 0 select r); } return q; }
    public static List<XECM_M_CUSTOMER> GetAll(ARTWORKEntities dc) { return (from p in dc.XECM_M_CUSTOMER select p).ToList(); }
    public static void SaveOrUpdate(XECM_M_CUSTOMER Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByCUSTOMER_ID(Item.CUSTOMER_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_CUSTOMER.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByCUSTOMER_ID(Item.CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_CUSTOMER>().Local.FirstOrDefault(f => f.CUSTOMER_ID == Item.CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(XECM_M_CUSTOMER Item, ARTWORKEntities dc) { if (GetChkByCUSTOMER_ID(Item.CUSTOMER_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_CUSTOMER.Add(Item); dc.SaveChanges(); } else { var temp = GetByCUSTOMER_ID(Item.CUSTOMER_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_CUSTOMER>().Local.FirstOrDefault(f => f.CUSTOMER_ID == Item.CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(XECM_M_CUSTOMER Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_CUSTOMER.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(XECM_M_CUSTOMER Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_CUSTOMER>().Local.FirstOrDefault(f => f.CUSTOMER_ID == Item.CUSTOMER_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(XECM_M_CUSTOMER NewItem, XECM_M_CUSTOMER OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "XECM_M_CUSTOMER"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByCUSTOMER_ID(int? CUSTOMER_ID, ARTWORKEntities dc) { var Item = GetByCUSTOMER_ID(CUSTOMER_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class XECM_M_PRODUCT_SERVICE
{
    public static XECM_M_PRODUCT GetByXECM_PRODUCT_ID(int? XECM_PRODUCT_ID, ARTWORKEntities dc) { if (XECM_PRODUCT_ID == null || XECM_PRODUCT_ID == 0) return null; else return (from p in dc.XECM_M_PRODUCT where p.XECM_PRODUCT_ID == XECM_PRODUCT_ID select p).FirstOrDefault(); }
    private static int? GetChkByXECM_PRODUCT_ID(int? XECM_PRODUCT_ID, ARTWORKEntities dc) { if (XECM_PRODUCT_ID == null || XECM_PRODUCT_ID == 0) return null; else { var temp = (from p in dc.XECM_M_PRODUCT where p.XECM_PRODUCT_ID == XECM_PRODUCT_ID select p.XECM_PRODUCT_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<XECM_M_PRODUCT> GetByItem(XECM_M_PRODUCT Item, ARTWORKEntities dc) { if (Item == null) return new List<XECM_M_PRODUCT>(); else return CriteriaBy((from p in dc.XECM_M_PRODUCT select p), Item).ToList(); }
    private static IQueryable<XECM_M_PRODUCT> CriteriaBy(IQueryable<XECM_M_PRODUCT> q, XECM_M_PRODUCT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.XECM_PRODUCT_ID)) { doWork = true; q = (from r in q where r.XECM_PRODUCT_ID == criteria.XECM_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_DESCRIPTION)) { doWork = true; q = (from r in q where r.PRODUCT_DESCRIPTION == criteria.PRODUCT_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DRAINED_WEIGHT)) { doWork = true; q = (from r in q where r.DRAINED_WEIGHT == criteria.DRAINED_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE == criteria.PRIMARY_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE == criteria.CONTAINER_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE)) { doWork = true; q = (from r in q where r.LID_TYPE == criteria.LID_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE)) { doWork = true; q = (from r in q where r.PACKING_STYLE == criteria.PACKING_STYLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE == criteria.PACK_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE_CS)) { doWork = true; q = (from r in q where r.UPDATE_DATE_CS == criteria.UPDATE_DATE_CS select r); } if (!doWork) { q = (from r in q where r.XECM_PRODUCT_ID == 0 select r); } return q; }
    public static List<XECM_M_PRODUCT> GetByItemContain(XECM_M_PRODUCT Item, ARTWORKEntities dc) { if (Item == null) return new List<XECM_M_PRODUCT>(); else return CriteriaByContains((from p in dc.XECM_M_PRODUCT select p), Item).ToList(); }
    private static IQueryable<XECM_M_PRODUCT> CriteriaByContains(IQueryable<XECM_M_PRODUCT> q, XECM_M_PRODUCT criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.XECM_PRODUCT_ID)) { doWork = true; q = (from r in q where r.XECM_PRODUCT_ID == criteria.XECM_PRODUCT_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_DESCRIPTION)) { doWork = true; q = (from r in q where r.PRODUCT_DESCRIPTION.Contains(criteria.PRODUCT_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DRAINED_WEIGHT)) { doWork = true; q = (from r in q where r.DRAINED_WEIGHT.Contains(criteria.DRAINED_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE.Contains(criteria.PRIMARY_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE.Contains(criteria.CONTAINER_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE)) { doWork = true; q = (from r in q where r.LID_TYPE.Contains(criteria.LID_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE)) { doWork = true; q = (from r in q where r.PACKING_STYLE.Contains(criteria.PACKING_STYLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE.Contains(criteria.PACK_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.XECM_PRODUCT_ID == 0 select r); } return q; }
    public static List<XECM_M_PRODUCT> GetAll(ARTWORKEntities dc) { return (from p in dc.XECM_M_PRODUCT select p).ToList(); }
    public static void SaveOrUpdate(XECM_M_PRODUCT Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByXECM_PRODUCT_ID(Item.XECM_PRODUCT_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_PRODUCT.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByXECM_PRODUCT_ID(Item.XECM_PRODUCT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_PRODUCT>().Local.FirstOrDefault(f => f.XECM_PRODUCT_ID == Item.XECM_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(XECM_M_PRODUCT Item, ARTWORKEntities dc) { if (GetChkByXECM_PRODUCT_ID(Item.XECM_PRODUCT_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_PRODUCT.Add(Item); dc.SaveChanges(); } else { var temp = GetByXECM_PRODUCT_ID(Item.XECM_PRODUCT_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_PRODUCT>().Local.FirstOrDefault(f => f.XECM_PRODUCT_ID == Item.XECM_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(XECM_M_PRODUCT Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_PRODUCT.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(XECM_M_PRODUCT Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_PRODUCT>().Local.FirstOrDefault(f => f.XECM_PRODUCT_ID == Item.XECM_PRODUCT_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(XECM_M_PRODUCT NewItem, XECM_M_PRODUCT OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "XECM_M_PRODUCT"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByXECM_PRODUCT_ID(int? XECM_PRODUCT_ID, ARTWORKEntities dc) { var Item = GetByXECM_PRODUCT_ID(XECM_PRODUCT_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class XECM_M_PRODUCT5_SERVICE
{
    public static XECM_M_PRODUCT5 GetByXECM_PRODUCT5_ID(int? XECM_PRODUCT5_ID, ARTWORKEntities dc) { if (XECM_PRODUCT5_ID == null || XECM_PRODUCT5_ID == 0) return null; else return (from p in dc.XECM_M_PRODUCT5 where p.XECM_PRODUCT5_ID == XECM_PRODUCT5_ID select p).FirstOrDefault(); }
    private static int? GetChkByXECM_PRODUCT5_ID(int? XECM_PRODUCT5_ID, ARTWORKEntities dc) { if (XECM_PRODUCT5_ID == null || XECM_PRODUCT5_ID == 0) return null; else { var temp = (from p in dc.XECM_M_PRODUCT5 where p.XECM_PRODUCT5_ID == XECM_PRODUCT5_ID select p.XECM_PRODUCT5_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<XECM_M_PRODUCT5> GetByItem(XECM_M_PRODUCT5 Item, ARTWORKEntities dc) { if (Item == null) return new List<XECM_M_PRODUCT5>(); else return CriteriaBy((from p in dc.XECM_M_PRODUCT5 select p), Item).ToList(); }
    private static IQueryable<XECM_M_PRODUCT5> CriteriaBy(IQueryable<XECM_M_PRODUCT5> q, XECM_M_PRODUCT5 criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.XECM_PRODUCT5_ID)) { doWork = true; q = (from r in q where r.XECM_PRODUCT5_ID == criteria.XECM_PRODUCT5_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE == criteria.PRODUCT_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_DESCRIPTION)) { doWork = true; q = (from r in q where r.PRODUCT_DESCRIPTION == criteria.PRODUCT_DESCRIPTION select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT == criteria.NET_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.DRAINED_WEIGHT)) { doWork = true; q = (from r in q where r.DRAINED_WEIGHT == criteria.DRAINED_WEIGHT select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE == criteria.PRIMARY_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE == criteria.CONTAINER_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE)) { doWork = true; q = (from r in q where r.LID_TYPE == criteria.LID_TYPE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE)) { doWork = true; q = (from r in q where r.PACKING_STYLE == criteria.PACKING_STYLE select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE == criteria.PACK_SIZE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE_CS)) { doWork = true; q = (from r in q where r.UPDATE_DATE_CS == criteria.UPDATE_DATE_CS select r); } if (!doWork) { q = (from r in q where r.XECM_PRODUCT5_ID == 0 select r); } return q; }
    public static List<XECM_M_PRODUCT5> GetByItemContain(XECM_M_PRODUCT5 Item, ARTWORKEntities dc) { if (Item == null) return new List<XECM_M_PRODUCT5>(); else return CriteriaByContains((from p in dc.XECM_M_PRODUCT5 select p), Item).ToList(); }
    private static IQueryable<XECM_M_PRODUCT5> CriteriaByContains(IQueryable<XECM_M_PRODUCT5> q, XECM_M_PRODUCT5 criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.XECM_PRODUCT5_ID)) { doWork = true; q = (from r in q where r.XECM_PRODUCT5_ID == criteria.XECM_PRODUCT5_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_CODE)) { doWork = true; q = (from r in q where r.PRODUCT_CODE.Contains(criteria.PRODUCT_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRODUCT_DESCRIPTION)) { doWork = true; q = (from r in q where r.PRODUCT_DESCRIPTION.Contains(criteria.PRODUCT_DESCRIPTION) select r); } if (!CheckValue.EqualsDefaultValue(criteria.NET_WEIGHT)) { doWork = true; q = (from r in q where r.NET_WEIGHT.Contains(criteria.NET_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.DRAINED_WEIGHT)) { doWork = true; q = (from r in q where r.DRAINED_WEIGHT.Contains(criteria.DRAINED_WEIGHT) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PRIMARY_SIZE)) { doWork = true; q = (from r in q where r.PRIMARY_SIZE.Contains(criteria.PRIMARY_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CONTAINER_TYPE)) { doWork = true; q = (from r in q where r.CONTAINER_TYPE.Contains(criteria.CONTAINER_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.LID_TYPE)) { doWork = true; q = (from r in q where r.LID_TYPE.Contains(criteria.LID_TYPE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACKING_STYLE)) { doWork = true; q = (from r in q where r.PACKING_STYLE.Contains(criteria.PACKING_STYLE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.PACK_SIZE)) { doWork = true; q = (from r in q where r.PACK_SIZE.Contains(criteria.PACK_SIZE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.XECM_PRODUCT5_ID == 0 select r); } return q; }
    public static List<XECM_M_PRODUCT5> GetAll(ARTWORKEntities dc) { return (from p in dc.XECM_M_PRODUCT5 select p).ToList(); }
    public static void SaveOrUpdate(XECM_M_PRODUCT5 Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByXECM_PRODUCT5_ID(Item.XECM_PRODUCT5_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_PRODUCT5.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByXECM_PRODUCT5_ID(Item.XECM_PRODUCT5_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_PRODUCT5>().Local.FirstOrDefault(f => f.XECM_PRODUCT5_ID == Item.XECM_PRODUCT5_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(XECM_M_PRODUCT5 Item, ARTWORKEntities dc) { if (GetChkByXECM_PRODUCT5_ID(Item.XECM_PRODUCT5_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_PRODUCT5.Add(Item); dc.SaveChanges(); } else { var temp = GetByXECM_PRODUCT5_ID(Item.XECM_PRODUCT5_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_PRODUCT5>().Local.FirstOrDefault(f => f.XECM_PRODUCT5_ID == Item.XECM_PRODUCT5_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(XECM_M_PRODUCT5 Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_PRODUCT5.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(XECM_M_PRODUCT5 Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_PRODUCT5>().Local.FirstOrDefault(f => f.XECM_PRODUCT5_ID == Item.XECM_PRODUCT5_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(XECM_M_PRODUCT5 NewItem, XECM_M_PRODUCT5 OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "XECM_M_PRODUCT5"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByXECM_PRODUCT5_ID(int? XECM_PRODUCT5_ID, ARTWORKEntities dc) { var Item = GetByXECM_PRODUCT5_ID(XECM_PRODUCT5_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
public class XECM_M_VENDOR_SERVICE
{
    public static XECM_M_VENDOR GetByVENDOR_ID(int? VENDOR_ID, ARTWORKEntities dc) { if (VENDOR_ID == null || VENDOR_ID == 0) return null; else return (from p in dc.XECM_M_VENDOR where p.VENDOR_ID == VENDOR_ID select p).FirstOrDefault(); }
    private static int? GetChkByVENDOR_ID(int? VENDOR_ID, ARTWORKEntities dc) { if (VENDOR_ID == null || VENDOR_ID == 0) return null; else { var temp = (from p in dc.XECM_M_VENDOR where p.VENDOR_ID == VENDOR_ID select p.VENDOR_ID).FirstOrDefault(); if (temp == 0) return null; else return 1; } }
    public static List<XECM_M_VENDOR> GetByItem(XECM_M_VENDOR Item, ARTWORKEntities dc) { if (Item == null) return new List<XECM_M_VENDOR>(); else return CriteriaBy((from p in dc.XECM_M_VENDOR where p.IS_ACTIVE=="X" select p), Item).ToList(); }
    private static IQueryable<XECM_M_VENDOR> CriteriaBy(IQueryable<XECM_M_VENDOR> q, XECM_M_VENDOR criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_ID)) { doWork = true; q = (from r in q where r.VENDOR_ID == criteria.VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_CODE)) { doWork = true; q = (from r in q where r.VENDOR_CODE == criteria.VENDOR_CODE select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_NAME)) { doWork = true; q = (from r in q where r.VENDOR_NAME == criteria.VENDOR_NAME select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE == criteria.IS_ACTIVE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_DATE)) { doWork = true; q = (from r in q where r.CREATE_DATE == criteria.CREATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY == criteria.CREATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE)) { doWork = true; q = (from r in q where r.UPDATE_DATE == criteria.UPDATE_DATE select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY == criteria.UPDATE_BY select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_DATE_CS)) { doWork = true; q = (from r in q where r.UPDATE_DATE_CS == criteria.UPDATE_DATE_CS select r); } if (!doWork) { q = (from r in q where r.VENDOR_ID == 0 select r); } return q; }
    public static List<XECM_M_VENDOR> GetByItemContain(XECM_M_VENDOR Item, ARTWORKEntities dc) { if (Item == null) return new List<XECM_M_VENDOR>(); else return CriteriaByContains((from p in dc.XECM_M_VENDOR select p), Item).ToList(); }
    private static IQueryable<XECM_M_VENDOR> CriteriaByContains(IQueryable<XECM_M_VENDOR> q, XECM_M_VENDOR criteria) { bool doWork = false; if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_ID)) { doWork = true; q = (from r in q where r.VENDOR_ID == criteria.VENDOR_ID select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_CODE)) { doWork = true; q = (from r in q where r.VENDOR_CODE.Contains(criteria.VENDOR_CODE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.VENDOR_NAME)) { doWork = true; q = (from r in q where r.VENDOR_NAME.Contains(criteria.VENDOR_NAME) select r); } if (!CheckValue.EqualsDefaultValue(criteria.IS_ACTIVE)) { doWork = true; q = (from r in q where r.IS_ACTIVE.Contains(criteria.IS_ACTIVE) select r); } if (!CheckValue.EqualsDefaultValue(criteria.CREATE_BY)) { doWork = true; q = (from r in q where r.CREATE_BY.ToString().Contains(criteria.CREATE_BY.ToString()) select r); } if (!CheckValue.EqualsDefaultValue(criteria.UPDATE_BY)) { doWork = true; q = (from r in q where r.UPDATE_BY.ToString().Contains(criteria.UPDATE_BY.ToString()) select r); } if (!doWork) { q = (from r in q where r.VENDOR_ID == 0 select r); } return q; }
    public static List<XECM_M_VENDOR> GetAll(ARTWORKEntities dc) { return (from p in dc.XECM_M_VENDOR select p).ToList(); }
    public static void SaveOrUpdate(XECM_M_VENDOR Item, ARTWORKEntities dc) { string Action = ""; if (GetChkByVENDOR_ID(Item.VENDOR_ID, dc) == null) { Action = "I"; Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_VENDOR.Add(Item); dc.SaveChanges(); SaveLog(Item, null, Action, dc); } else { Action = "U"; var temp = GetByVENDOR_ID(Item.VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_VENDOR>().Local.FirstOrDefault(f => f.VENDOR_ID == Item.VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); SaveLog(Item, null, Action, dc); } }
    public static void SaveOrUpdateNoLog(XECM_M_VENDOR Item, ARTWORKEntities dc) { if (GetChkByVENDOR_ID(Item.VENDOR_ID, dc) == null) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_VENDOR.Add(Item); dc.SaveChanges(); } else { var temp = GetByVENDOR_ID(Item.VENDOR_ID, dc); Item.CREATE_DATE = temp.CREATE_DATE; Item.CREATE_BY = temp.CREATE_BY; Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_VENDOR>().Local.FirstOrDefault(f => f.VENDOR_ID == Item.VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); } }
    public static void SaveNoLog(XECM_M_VENDOR Item, ARTWORKEntities dc) { Item.CREATE_DATE = DateTime.Now; Item.UPDATE_DATE = DateTime.Now; dc.XECM_M_VENDOR.Add(Item); dc.SaveChanges(); }
    public static void UpdateNoLog(XECM_M_VENDOR Item, ARTWORKEntities dc) { Item.UPDATE_DATE = DateTime.Now; var local = dc.Set<XECM_M_VENDOR>().Local.FirstOrDefault(f => f.VENDOR_ID == Item.VENDOR_ID); if (local != null) { dc.Entry(local).State = EntityState.Detached; } dc.Entry(Item).State = EntityState.Modified; dc.SaveChanges(); }
    private static void SaveLog(XECM_M_VENDOR NewItem, XECM_M_VENDOR OldItem, string Action, ARTWORKEntities dc) { ART_SYS_LOG Item = new ART_SYS_LOG(); Item.ACTION = Action; Item.TABLE_NAME = "XECM_M_VENDOR"; if (NewItem != null) Item.NEW_VALUE = CNService.SubString(CNService.Serialize(NewItem), 4000); if (OldItem != null) Item.OLD_VALUE = CNService.SubString(CNService.Serialize(OldItem), 4000); Item.CREATE_DATE = DateTime.Now; Item.CREATE_BY = CNService.getCurrentUser(dc); Item.UPDATE_DATE = Item.CREATE_DATE; Item.UPDATE_BY = Item.CREATE_BY; dc.ART_SYS_LOG.Add(Item); dc.SaveChanges(); }
    public static void DeleteByVENDOR_ID(int? VENDOR_ID, ARTWORKEntities dc) { var Item = GetByVENDOR_ID(VENDOR_ID, dc); if (Item != null) { dc.Entry(Item).State = EntityState.Deleted; dc.SaveChanges(); SaveLog(null, Item, "D", dc); } }
}
